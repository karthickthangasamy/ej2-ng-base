{"version":3,"file":"ej2-ng-base.min.js","sources":["../../node_modules/@syncfusion/ej2-base/dist/src/es5/util.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/dom.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/notify-property-change.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/animation.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/internationalization.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/template.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/template-engine.js","../src/es5/util.js","../../node_modules/tslib/tslib.es6.js","../../node_modules/src/util/isFunction.ts","../../node_modules/src/util/isObject.ts","../../node_modules/src/util/tryCatch.ts","../../node_modules/src/Subscription.ts","../../node_modules/src/util/toSubscriber.ts","../../node_modules/src/util/noop.ts","../../node_modules/src/util/pipe.ts","../../node_modules/src/util/isScheduler.ts","../../node_modules/src/util/isPromise.ts","../../node_modules/src/util/subscribeToResult.ts","../../node_modules/src/operators/mergeMap.ts","../../node_modules/src/util/identity.ts","../../node_modules/src/operators/mergeAll.ts","../../node_modules/src/observable/merge.ts","../../node_modules/src/operators/refCount.ts","../../node_modules/src/operators/multicast.ts","../../node_modules/src/operators/share.ts","../../node_modules/src/operator/share.ts","../../packages/core/src/util.ts","../../packages/core/src/util/decorators.ts","../../packages/core/src/metadata/di.ts","../../packages/core/src/di/forward_ref.ts","../../packages/core/src/error_handler.ts","../../packages/core/src/di/reflective_errors.ts","../../packages/core/src/reflection/reflection_capabilities.ts","../../packages/core/src/di/reflective_provider.ts","../../packages/core/src/di/reflective_injector.ts","../../packages/core/src/di.ts","../../packages/core/src/linker/component_factory_resolver.ts","../../packages/core/src/zone/ng_zone.ts","../../packages/core/src/testability/testability.ts","../../packages/core/src/application_ref.ts","../../packages/core/src/zone.ts","../../packages/core/src/linker/query_list.ts","../../packages/core/src/linker/system_js_ng_module_factory_loader.ts","../../packages/core/src/debug/debug_node.ts","../../packages/core/src/change_detection/change_detection_util.ts","../../packages/core/src/change_detection/differs/default_iterable_differ.ts","../../packages/core/src/change_detection/differs/default_keyvalue_differ.ts","../../packages/core/src/platform_core_providers.ts","../../packages/core/src/application_module.ts","../../packages/core/src/view/types.ts","../../packages/core/src/view/errors.ts","../../packages/core/src/view/util.ts","../../packages/core/src/view/element.ts","../../packages/core/src/view/ng_module.ts","../../packages/core/src/view/view_attach.ts","../../packages/core/src/view/provider.ts","../../packages/core/src/view/query.ts","../../packages/core/src/view/ng_content.ts","../../packages/core/src/view/pure_expression.ts","../../packages/core/src/view/text.ts","../../packages/core/src/view/view.ts","../../packages/core/src/view/services.ts","../src/es5/template.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/ajax.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/event-handler.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/observer.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/base.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/browser.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/intl/intl-base.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/canvas-renderer.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/module-loader.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/child-property.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/intl/parser-base.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/intl/number-formatter.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/intl/date-formatter.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/intl/date-parser.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/intl/number-parser.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/component.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/draggable.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/droppable.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/keyboard.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/l10n.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/svg-renderer.js","../../node_modules/@syncfusion/ej2-base/dist/src/es5/touch.js","../src/es5/complex-array-base.js","../../node_modules/src/util/root.ts","../../node_modules/src/util/isArray.ts","../../node_modules/src/util/errorObject.ts","../../node_modules/src/util/UnsubscriptionError.ts","../../node_modules/src/Observer.ts","../../node_modules/src/symbol/rxSubscriber.ts","../../node_modules/src/Subscriber.ts","../../node_modules/src/symbol/observable.ts","../../node_modules/src/Observable.ts","../../node_modules/src/observable/ScalarObservable.ts","../../node_modules/src/observable/EmptyObservable.ts","../../node_modules/src/observable/ArrayObservable.ts","../../node_modules/src/util/isArrayLike.ts","../../node_modules/src/symbol/iterator.ts","../../node_modules/src/InnerSubscriber.ts","../../node_modules/src/OuterSubscriber.ts","../../node_modules/src/util/ObjectUnsubscribedError.ts","../../node_modules/src/SubjectSubscription.ts","../../node_modules/src/Subject.ts","../../node_modules/src/observable/ConnectableObservable.ts","../../packages/core/src/di/injection_token.ts","../../packages/core/src/change_detection/constants.ts","../../packages/core/src/metadata/view.ts","../../packages/core/src/version.ts","../../packages/core/src/di/injector.ts","../../packages/core/src/errors.ts","../../packages/core/src/di/reflective_key.ts","../../packages/core/src/type.ts","../../packages/core/src/reflection/reflector.ts","../../packages/core/src/reflection/reflection.ts","../../packages/core/src/application_init.ts","../../packages/core/src/application_tokens.ts","../../packages/core/src/console.ts","../../packages/core/src/linker/compiler.ts","../../packages/core/src/linker/component_factory.ts","../../packages/core/src/profile/wtf_impl.ts","../../packages/core/src/linker/ng_module_factory.ts","../../packages/core/src/event_emitter.ts","../../packages/core/src/render/api.ts","../../packages/core/src/linker/template_ref.ts","../../packages/core/src/linker/view_container_ref.ts","../../packages/core/src/linker/view_ref.ts","../../packages/core/src/change_detection/differs/iterable_differs.ts","../../packages/core/src/change_detection/differs/keyvalue_differs.ts","../../packages/core/src/change_detection/change_detection.ts","../../packages/core/src/i18n/tokens.ts","../../packages/core/src/security.ts","../../packages/core/src/view/refs.ts","../src/es5/component-base.js","../../packages/core/src/view/entrypoint.ts","../../packages/core/src/view/index.ts","../src/es5/form-base.js"],"sourcesContent":["var instances = 'ej2_instances';\nvar uid = 0;\n/**\n * Create Instance from constructor function with desired parameters.\n * @param {Function} classFunction - Class function to which need to create instance\n * @param {any[]} params - Parameters need to passed while creating instance\n * @return {any}\n * @private\n */\nexport function createInstance(classFunction, params) {\n    var arrayParam = params;\n    arrayParam.unshift(undefined);\n    return new (Function.prototype.bind.apply(classFunction, arrayParam));\n}\n/**\n * To run a callback function immediately after the browser has completed other operations.\n * @param {Function} handler - callback function to be triggered.\n * @return {Function}\n * @private\n */\nexport function setImmediate(handler) {\n    var unbind;\n    var num = new Uint16Array(5);\n    var intCrypto = window.msCrypto || window.crypto;\n    intCrypto.getRandomValues(num);\n    var secret = 'ej2' + combineArray(num);\n    var messageHandler = function (event) {\n        if (event.source === window && typeof event.data === 'string' && event.data.length <= 32 && event.data === secret) {\n            handler();\n            unbind();\n        }\n    };\n    window.addEventListener('message', messageHandler, false);\n    window.postMessage(secret, '*');\n    return unbind = function () {\n        window.removeEventListener('message', messageHandler);\n    };\n}\n/**\n * To get nameSpace value from the desired object.\n * @param {string} nameSpace - String value to the get the inner object\n * @param {any} obj - Object to get the inner object value.\n * @return {any}\n * @private\n */\nexport function getValue(nameSpace, obj) {\n    /* tslint:disable no-any */\n    var value = obj;\n    var splits = nameSpace.split('.');\n    for (var i = 0; i < splits.length && !isUndefined(value); i++) {\n        value = value[splits[i]];\n    }\n    return value;\n}\n/**\n * To set value for the nameSpace in desired object.\n * @param {string} nameSpace - String value to the get the inner object\n * @param {any} value - Value that you need to set.\n * @param {any} obj - Object to get the inner object value.\n * @return {void}\n * @private\n */\nexport function setValue(nameSpace, value, obj) {\n    var keys = nameSpace.split('.');\n    var start = obj || {};\n    var fromObj = start;\n    var i;\n    var length = keys.length;\n    var key;\n    for (i = 0; i < length; i++) {\n        key = keys[i];\n        if (i + 1 === length) {\n            fromObj[key] = value === undefined ? {} : value;\n        }\n        else if (isNullOrUndefined(fromObj[key])) {\n            fromObj[key] = {};\n        }\n        fromObj = fromObj[key];\n    }\n    return start;\n}\n/**\n * Delete an item from Object\n * @param {any} obj - Object in which we need to delete an item.\n * @param {string} params - String value to the get the inner object\n * @return {void}\n * @private\n */\nexport function deleteObject(obj, key) {\n    delete obj[key];\n}\n/**\n * Check weather the given argument is only object.\n * @param {any} obj - Object which is need to check.\n * @return {boolean}\n * @private\n */\nexport function isObject(obj) {\n    var objCon = {};\n    return (!isNullOrUndefined(obj) && obj.constructor === objCon.constructor);\n}\n/**\n * To get enum value by giving the string.\n * @param {any} enumObject - Enum object.\n * @param {string} enumValue - Enum value to be searched\n * @return {any}\n * @private\n */\nexport function getEnumValue(enumObject, enumValue) {\n    return enumObject[enumValue];\n}\n/**\n * Merge the source object into destination object.\n * @param {any} source - source object which is going to merge with destination object\n * @param {any} destination - object need to be merged\n * @return {void}\n * @private\n */\nexport function merge(source, destination) {\n    if (!isNullOrUndefined(destination)) {\n        var temrObj = source;\n        var tempProp = destination;\n        var keys = Object.keys(destination);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            temrObj[key] = tempProp[key];\n        }\n    }\n}\n/**\n * Extend the two object with newer one.\n * @param {any} copied - Resultant object after merged\n * @param {Object} first - First object need to merge\n * @param {Object} second - Second object need to merge\n * @return {Object}\n * @private\n */\nexport function extend(copied, first, second, deep) {\n    var result = copied || {};\n    var length = arguments.length;\n    if (deep) {\n        length = length - 1;\n    }\n    var _loop_1 = function (i) {\n        if (!arguments_1[i]) {\n            return \"continue\";\n        }\n        var obj1 = arguments_1[i];\n        Object.keys(obj1).forEach(function (key) {\n            var src = result[key];\n            var copy = obj1[key];\n            var clone;\n            if (deep && isObject(copy)) {\n                clone = isObject(src) ? src : {};\n                result[key] = extend({}, clone, copy, true);\n            }\n            else {\n                result[key] = copy;\n            }\n        });\n    };\n    var arguments_1 = arguments;\n    for (var i = 1; i < length; i++) {\n        _loop_1(i);\n    }\n    return result;\n}\n/**\n * To check whether the object is null or undefined.\n * @param {Object} value - To check the object is null or undefined\n * @return {boolean}\n * @private\n */\nexport function isNullOrUndefined(value) {\n    return value === undefined || value === null;\n}\n/**\n * To check whether the object is undefined.\n * @param {Object} value - To check the object is undefined\n * @return {boolean}\n * @private\n */\nexport function isUndefined(value) {\n    return ('undefined' === typeof value);\n}\n/**\n * To return the generated unique name\n * @param {string} definedName - To concatenate the unique id to provided name\n * @return {string}\n * @private\n */\nexport function getUniqueID(definedName) {\n    return definedName + '_' + uid++;\n}\n/**\n * It limits the rate at which a function can fire. The function will fire only once every provided second instead of as quickly.\n * @param {Function} eventFunction - Specifies the function to run when the event occurs\n * @param {number} delay - A number that specifies the milliseconds for function delay call option\n * @return {Function}\n * @private\n */\nexport function debounce(eventFunction, delay) {\n    var out;\n    // tslint:disable-next-line\n    return function () {\n        var _this = this;\n        var args = arguments;\n        var later = function () {\n            out = null;\n            return eventFunction.apply(_this, args);\n        };\n        clearTimeout(out);\n        out = setTimeout(later, delay);\n    };\n}\n// Added since lint ignored after added '//tslint:disable-next-line' \n/* tslint:disable:no-any */\n/**\n * To convert the object to string for query url\n * @param  {Object} data\n * @returns string\n * @private\n */\nexport function queryParams(data) {\n    var array = [];\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n        var key = keys_2[_i];\n        array.push(encodeURIComponent(key) + '=' + encodeURIComponent('' + data[key]));\n    }\n    return array.join('&');\n}\n/**\n * To check whether the given array contains object.\n * @param {T[]} value- Specifies the T type array to be checked.\n * @private\n */\nexport function isObjectArray(value) {\n    var parser = Object.prototype.toString;\n    if (parser.call(value) === '[object Array]') {\n        if (parser.call(value[0]) === '[object Object]') {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * To check whether the  child element is descendant to parent element or parent and child are same element.\n * @param{Element} - Specifies the child element to compare with parent.\n * @param{Element} - Specifies the parent element.\n * @return boolean\n * @private\n */\nexport function compareElementParent(child, parent) {\n    var node = child;\n    if (node === parent) {\n        return true;\n    }\n    else if (node === document || !node) {\n        return false;\n    }\n    else {\n        return compareElementParent(node.parentNode, parent);\n    }\n}\n/**\n * To throw custom error message.\n * @param{string} - Specifies the error message to be thrown.\n * @private\n */\nexport function throwError(message) {\n    try {\n        throw new Error(message);\n    }\n    catch (e) {\n        throw e.message + '\\n' + e.stack;\n    }\n}\n/**\n * This function is used to print given element\n * @param{Element} element - Specifies the print content element.\n * @param{Window} printWindow - Specifies the print window.\n * @private\n */\nexport function print(element, printWindow) {\n    var div = document.createElement('div');\n    var links = [].slice.call(document.getElementsByTagName('head')[0].querySelectorAll('link, style'));\n    var reference = '';\n    if (isNullOrUndefined(printWindow)) {\n        printWindow = window.open('', 'print', 'height=452,width=1024,tabbar=no');\n    }\n    div.appendChild(element.cloneNode(true));\n    for (var i = 0, len = links.length; i < len; i++) {\n        reference += links[i].outerHTML;\n    }\n    printWindow.document.write('<!DOCTYPE html> <html><head>' + reference + '</head><body>' + div.innerHTML +\n        '<script> (function() { window.ready = true; })(); </script>' + '</body></html>');\n    printWindow.document.close();\n    printWindow.focus();\n    // tslint:disable-next-line\n    var interval = setInterval(function () {\n        if (printWindow.ready) {\n            printWindow.print();\n            printWindow.close();\n            clearInterval(interval);\n        }\n    }, 500);\n    return printWindow;\n}\n/**\n * Function to normalize the units applied to the element.\n * @param  {number|string} value\n * @return {string} result\n * @private\n */\nexport function formatUnit(value) {\n    var result = value + '';\n    if (result === 'auto' || result.indexOf('%') !== -1 || result.indexOf('px') !== -1) {\n        return result;\n    }\n    return result + 'px';\n}\n/**\n * Function to fetch the Instances of a HTML element for the given component.\n * @param {string | HTMLElement} element\n * @param {any} component\n * @return {Object} inst\n * @private\n */\n// tslint:disable-next-line\nexport function getInstance(element, component) {\n    // tslint:disable-next-line:no-any\n    var elem = (typeof (element) === 'string') ? document.querySelector(element) : element;\n    if (elem[instances]) {\n        for (var _i = 0, _a = elem[instances]; _i < _a.length; _i++) {\n            var inst = _a[_i];\n            if (inst instanceof component) {\n                return inst;\n            }\n        }\n    }\n    return null;\n}\n/**\n * Function to add instances for the given element.\n * @param {string | HTMLElement} element\n * @param {Object} instance\n * @return {void}\n * @private\n */\nexport function addInstance(element, instance) {\n    // tslint:disable-next-line:no-any\n    var elem = (typeof (element) === 'string') ? document.querySelector(element) : element;\n    if (elem[instances]) {\n        elem[instances].push(instance);\n    }\n    else {\n        elem[instances] = [instance];\n    }\n}\nfunction combineArray(num) {\n    var ret = '';\n    for (var i = 0; i < 5; i++) {\n        ret += (i ? ',' : '') + num[i];\n    }\n    return ret;\n}\n","/**\n * Functions related to dom operations.\n */\nimport { EventHandler } from './event-handler';\nimport { isNullOrUndefined } from './util';\n/**\n * Function to create Html element.\n * @param tagName - Name of the tag, id and class names.\n * @param properties - Object to set properties in the element.\n * @param properties.id - To set the id to the created element.\n * @param properties.className - To add classes to the element.\n * @param properties.innerHTML - To set the innerHTML to element.\n * @param properties.styles - To set the some custom styles to element.\n * @param properties.attrs - To set the attributes to element.\n * @private\n */\nexport function createElement(tagName, properties) {\n    var element = document.createElement(tagName);\n    if (typeof (properties) === 'undefined') {\n        return element;\n    }\n    element.innerHTML = (properties.innerHTML ? properties.innerHTML : '');\n    if (properties.className !== undefined) {\n        element.className = properties.className;\n    }\n    if (properties.id !== undefined) {\n        element.id = properties.id;\n    }\n    if (properties.styles !== undefined) {\n        element.setAttribute('style', properties.styles);\n    }\n    if (properties.attrs !== undefined) {\n        attributes(element, properties.attrs);\n    }\n    return element;\n}\n/**\n * The function used to add the classes to array of elements\n * @param  {Element[]|NodeList} elements - An array of elements that need to add a list of classes\n * @param  {string|string[]} classes - String or array of string that need to add an individual element as a class\n * @private\n */\nexport function addClass(elements, classes) {\n    var classList = getClassList(classes);\n    for (var _i = 0, _a = elements; _i < _a.length; _i++) {\n        var ele = _a[_i];\n        for (var _b = 0, classList_1 = classList; _b < classList_1.length; _b++) {\n            var className = classList_1[_b];\n            if (!ele.classList.contains(className)) {\n                ele.classList.add(className);\n            }\n        }\n    }\n    return elements;\n}\n/**\n * The function used to add the classes to array of elements\n * @param  {Element[]|NodeList} elements - An array of elements that need to remove a list of classes\n * @param  {string|string[]} classes - String or array of string that need to add an individual element as a class\n * @private\n */\nexport function removeClass(elements, classes) {\n    var classList = getClassList(classes);\n    for (var _i = 0, _a = elements; _i < _a.length; _i++) {\n        var ele = _a[_i];\n        if (ele.className !== '') {\n            for (var _b = 0, classList_2 = classList; _b < classList_2.length; _b++) {\n                var className = classList_2[_b];\n                ele.classList.remove(className);\n            }\n        }\n    }\n    return elements;\n}\nfunction getClassList(classes) {\n    var classList = [];\n    if (typeof classes === 'string') {\n        classList.push(classes);\n    }\n    else {\n        classList = classes;\n    }\n    return classList;\n}\n/**\n * The function used to check element is visible or not.\n * @param  {Element|Node} element - An element the need to check visibility\n * @private\n */\nexport function isVisible(element) {\n    var ele = element;\n    return (ele.style.visibility === '' && ele.offsetWidth > 0);\n}\n/**\n * The function used to insert an array of elements into a first of the element.\n * @param  {Element[]|NodeList} fromElements - An array of elements that need to prepend.\n * @param  {Element} toElement - An element that is going to prepend.\n * @private\n */\nexport function prepend(fromElements, toElement) {\n    var docFrag = document.createDocumentFragment();\n    for (var _i = 0, _a = fromElements; _i < _a.length; _i++) {\n        var ele = _a[_i];\n        docFrag.appendChild(ele);\n    }\n    toElement.insertBefore(docFrag, toElement.firstElementChild);\n    return fromElements;\n}\n/**\n * The function used to insert an array of elements into last of the element.\n * @param  {Element[]|NodeList} fromElements - An array of elements that need to append.\n * @param  {Element} toElement - An element that is going to prepend.\n * @private\n */\nexport function append(fromElements, toElement) {\n    var docFrag = document.createDocumentFragment();\n    for (var _i = 0, _a = fromElements; _i < _a.length; _i++) {\n        var ele = _a[_i];\n        docFrag.appendChild(ele);\n    }\n    toElement.appendChild(docFrag);\n    return fromElements;\n}\n/**\n * The function used to remove the element from the\n * @param  {Element|Node|HTMLElement} element - An element that is going to detach from the Dom\n * @private\n */\nexport function detach(element) {\n    var parentNode = element.parentNode;\n    return parentNode.removeChild(element);\n}\n/**\n * The function used to remove the element from Dom also clear the bounded events\n * @param  {Element|Node|HTMLElement} element - An element remove from the Dom\n * @private\n */\nexport function remove(element) {\n    var parentNode = element.parentNode;\n    EventHandler.clearEvents(element);\n    parentNode.removeChild(element);\n}\n/**\n * The function helps to set multiple attributes to an element\n * @param  {Element|Node} element - An element that need to set attributes.\n * @param  {{[key:string]:string}} attributes - JSON Object that is going to as attributes.\n * @private\n */\nexport function attributes(element, attributes) {\n    var keys = Object.keys(attributes);\n    var ele = element;\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        ele.setAttribute(key, attributes[key]);\n    }\n    return ele;\n}\n/**\n * The function selects the element from giving context.\n * @param  {string} selector - Selector string need fetch element from the\n * @param  {Document|Element=document} context - It is an optional type, That specifies a Dom context.\n * @private\n */\nexport function select(selector, context) {\n    if (context === void 0) { context = document; }\n    return context.querySelector(selector);\n}\n/**\n * The function selects an array of element from the given context.\n * @param  {string} selector - Selector string need fetch element from the\n * @param  {Document|Element=document} context - It is an optional type, That specifies a Dom context.\n * @private\n */\nexport function selectAll(selector, context) {\n    if (context === void 0) { context = document; }\n    var nodeList = context.querySelectorAll(selector);\n    return nodeList;\n}\n/**\n * Returns single closest parent element based on class selector.\n * @param  {Element} element - An element that need to find the closest element.\n * @param  {string} selector - A classSelector of closest element.\n * @private\n */\nexport function closest(element, selector) {\n    var el = element;\n    if (typeof el.closest === 'function') {\n        return el.closest(selector);\n    }\n    while (el && el.nodeType === 1) {\n        if (matches(el, selector)) {\n            return el;\n        }\n        el = el.parentNode;\n    }\n    return null;\n}\n/**\n * Returns all sibling elements of the given element.\n * @param  {Element|Node} element - An element that need to get siblings.\n * @private\n */\nexport function siblings(element) {\n    var siblings = [];\n    var childNodes = Array.prototype.slice.call(element.parentNode.childNodes);\n    for (var _i = 0, childNodes_1 = childNodes; _i < childNodes_1.length; _i++) {\n        var curNode = childNodes_1[_i];\n        if (curNode.nodeType === Node.ELEMENT_NODE && element !== curNode) {\n            siblings.push(curNode);\n        }\n    }\n    return siblings;\n}\n/**\n * set the value if not exist. Otherwise set the existing value\n * @param  {HTMLElement} element - An element to which we need to set value.\n * @param  {string} property - Property need to get or set.\n * @param  {string} value - value need to set.\n * @private\n */\nexport function getAttributeOrDefault(element, property, value) {\n    var attrVal = element.getAttribute(property);\n    if (isNullOrUndefined(attrVal)) {\n        element.setAttribute(property, value.toString());\n        attrVal = value;\n    }\n    return attrVal;\n}\n/**\n * Set the style attributes to Html element.\n * @param {HTMLElement} element - Element which we want to set attributes\n * @param {any} attrs - Set the given attributes to element\n * @return {void}\n * @private\n */\nexport function setStyleAttribute(element, attrs) {\n    if (attrs !== undefined) {\n        Object.keys(attrs).forEach(function (key) {\n            // tslint:disable-next-line:no-any\n            element.style[key] = attrs[key];\n        });\n    }\n}\n/**\n * Method for add and remove classes to a dom element.\n * @param {Element} element - Element for add and remove classes\n * @param {string[]} addClasses - List of classes need to be add to the element\n * @param {string[]} removeClasses - List of classes need to be remove from the element\n * @return {void}\n * @private\n */\nexport function classList(element, addClasses, removeClasses) {\n    addClass([element], addClasses);\n    removeClass([element], removeClasses);\n}\n/**\n * Method to check whether the element matches the given selector.\n * @param {Element} element - Element to compare with the selector.\n * @param {string} selector - String selector which element will satisfy.\n * @return {void}\n * @private\n */\nexport function matches(element, selector) {\n    var matches = element.matches || element.msMatchesSelector || element.webkitMatchesSelector;\n    if (matches) {\n        return matches.call(element, selector);\n    }\n    else {\n        return [].indexOf.call(document.querySelectorAll(selector), element) !== -1;\n    }\n}\n","import { createInstance, isUndefined, merge, extend, getValue } from './util';\n/**\n * Returns the Class Object\n * @param {ClassObject} instance - instance of ClassObject\n * @param {string} curKey - key of the current instance\n * @param {Object} defaultValue - default Value\n * @param {Object[]} type\n */\nfunction getObject(instance, curKey, defaultValue, type) {\n    if (!instance.properties.hasOwnProperty(curKey)) {\n        instance.properties[curKey] = createInstance(type, [instance, curKey, defaultValue]);\n    }\n    return instance.properties[curKey];\n}\n/**\n * Returns object array\n * @param {ClassObject} instance\n * @param {string} curKey\n * @param {Object[]} defaultValue\n * @param type\n * @param {boolean} isSetter\n * @returns {Object[]}\n */\nfunction getObjectArray(instance, curKey, defaultValue, type, isSetter, isFactory) {\n    var result = [];\n    var len = defaultValue.length;\n    for (var i = 0; i < len; i++) {\n        var curType = type;\n        if (isFactory) {\n            curType = type(defaultValue[i]);\n        }\n        if (isSetter) {\n            var inst = createInstance(curType, [instance, curKey, {}, true]);\n            inst.setProperties(defaultValue[i], true);\n            result.push(inst);\n        }\n        else {\n            result.push(createInstance(curType, [instance, curKey, defaultValue[i], true]));\n        }\n    }\n    return result;\n}\n/**\n * Returns the properties of the object\n * @param {Object} defaultValue\n * @param {string} curKey\n */\nfunction propertyGetter(defaultValue, curKey) {\n    return function () {\n        if (!this.properties.hasOwnProperty(curKey)) {\n            this.properties[curKey] = defaultValue;\n        }\n        return this.properties[curKey];\n    };\n}\n/**\n * Set the properties for the object\n * @param {Object} defaultValue\n * @param {string} curKey\n */\nfunction propertySetter(defaultValue, curKey) {\n    return function (newValue) {\n        if (this.properties[curKey] !== newValue) {\n            var oldVal = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;\n            this.saveChanges(curKey, newValue, oldVal);\n            this.properties[curKey] = newValue;\n        }\n    };\n}\n/**\n * Returns complex objects\n */\nfunction complexGetter(defaultValue, curKey, type) {\n    return function () {\n        return getObject(this, curKey, defaultValue, type);\n    };\n}\n/**\n * Sets complex objects\n */\nfunction complexSetter(defaultValue, curKey, type) {\n    return function (newValue) {\n        getObject(this, curKey, defaultValue, type).setProperties(newValue);\n    };\n}\nfunction complexFactoryGetter(defaultValue, curKey, type) {\n    return function () {\n        var curType = type({});\n        return getObject(this, curKey, defaultValue, curType);\n    };\n}\nfunction complexFactorySetter(defaultValue, curKey, type) {\n    return function (newValue) {\n        var curType = type(newValue);\n        getObject(this, curKey, defaultValue, curType).setProperties(newValue);\n    };\n}\nfunction complexArrayGetter(defaultValue, curKey, type) {\n    return function () {\n        if (!this.properties.hasOwnProperty(curKey)) {\n            var defCollection = getObjectArray(this, curKey, defaultValue, type, false);\n            this.properties[curKey] = defCollection;\n        }\n        return this.properties[curKey];\n    };\n}\nfunction complexArraySetter(defaultValue, curKey, type) {\n    return function (newValue) {\n        var oldValueCollection = getObjectArray(this, curKey, defaultValue, type, false);\n        var newValCollection = getObjectArray(this, curKey, newValue, type, true);\n        this.saveChanges(curKey, newValCollection, oldValueCollection);\n        this.properties[curKey] = newValCollection;\n    };\n}\nfunction complexArrayFactorySetter(defaultValue, curKey, type) {\n    return function (newValue) {\n        var oldValueCollection = getObjectArray(this, curKey, defaultValue, type, false, true);\n        var newValCollection = getObjectArray(this, curKey, newValue, type, true, true);\n        this.saveChanges(curKey, newValCollection, oldValueCollection);\n        this.properties[curKey] = newValCollection;\n    };\n}\nfunction complexArrayFactoryGetter(defaultValue, curKey, type) {\n    return function () {\n        var curType = type({});\n        if (!this.properties.hasOwnProperty(curKey)) {\n            var defCollection = getObjectArray(this, curKey, defaultValue, curType, false);\n            this.properties[curKey] = defCollection;\n        }\n        return this.properties[curKey];\n    };\n}\n/**\n * Method used to create property. General syntax below.\n * @param  {T} defaultValue? - Specifies the default value of property.\n * ```\n * @Property('TypeScript')\n * propertyName: Type;\n * ```\n * @private\n */\nexport function Property(defaultValue) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: propertySetter(defaultValue, key),\n            get: propertyGetter(defaultValue, key),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'prop', defaultValue);\n    };\n}\n/**\n * Method used to create complex property. General syntax below.\n * @param  {T} defaultValue - Specifies the default value of property.\n * @param  {Function} type - Specifies the class type of complex object.\n * ```\n * @Complex<Type>({},Type)\n * propertyName: Type;\n * ```\n * @private\n */\nexport function Complex(defaultValue, type) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: complexSetter(defaultValue, key, type),\n            get: complexGetter(defaultValue, key, type),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'complexProp', defaultValue, type);\n    };\n}\n/**\n * Method used to create complex Factory property. General syntax below.\n * @param  {Function} defaultType - Specifies the default value of property.\n * @param  {Function} type - Specifies the class factory type of complex object.\n * ```\n * @ComplexFactory(defaultType, factoryFunction)\n * propertyName: Type1 | Type2;\n * ```\n * @private\n */\nexport function ComplexFactory(type) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: complexFactorySetter({}, key, type),\n            get: complexFactoryGetter({}, key, type),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'complexProp', {}, type);\n    };\n}\n/**\n * Method used to create complex array property. General syntax below.\n * @param  {T[]} defaultValue - Specifies the default value of property.\n * @param  {Function} type - Specifies the class type of complex object.\n * ```\n * @Collection([], Type);\n * propertyName: Type;\n * ```\n * @private\n */\nexport function Collection(defaultValue, type) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: complexArraySetter(defaultValue, key, type),\n            get: complexArrayGetter(defaultValue, key, type),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'colProp', defaultValue, type);\n    };\n}\n/**\n * Method used to create complex factory array property. General syntax below.\n * @param  {T[]} defaultType - Specifies the default type of property.\n * @param  {Function} type - Specifies the class type of complex object.\n * ```\n * @Collection([], Type);\n * propertyName: Type;\n * ```\n * @private\n */\nexport function CollectionFactory(type) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: complexArrayFactorySetter([], key, type),\n            get: complexArrayFactoryGetter([], key, type),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'colProp', {}, type);\n    };\n}\n/**\n * Method used to create event property. General syntax below.\n * @param  {Function} defaultValue? - Specifies the default value of property.\n * @param  {boolean} isComplex? - Specifies the whether it is complex object.\n * ```\n * @Event(()=>{return true;})\n * ```\n * @private\n */\nexport function Event() {\n    return function (target, key) {\n        var eventDescriptor = {\n            set: function (newValue) {\n                var oldValue = this.properties[key];\n                if (oldValue !== newValue) {\n                    var finalContext = getParentContext(this, key);\n                    if (isUndefined(oldValue) === false) {\n                        finalContext.context.removeEventListener(finalContext.prefix, oldValue);\n                    }\n                    finalContext.context.addEventListener(finalContext.prefix, newValue);\n                    this.properties[key] = newValue;\n                }\n            },\n            get: propertyGetter(undefined, key),\n            enumerable: true,\n            configurable: true\n        };\n        Object.defineProperty(target, key, eventDescriptor);\n        addPropertyCollection(target, key, 'event');\n    };\n}\n/**\n * NotifyPropertyChanges is triggers the call back when the property has been changed.\n *\n * ```\n *  @NotifyPropertyChanges\n * class DemoClass implements INotifyPropertyChanged {\n *\n *     @Property()\n *     property1: string;\n *\n *     dataBind: () => void;\n *\n *     constructor() { }\n *\n *     onPropertyChanged(newProp: any, oldProp: any) {\n *         // Called when property changed\n *     }\n * }\n * ```\n * @private\n */\nexport function NotifyPropertyChanges(classConstructor) {\n    /** Need to code */\n}\n/**\n * Method  used to create the builderObject for the target component.\n * @private\n */\nfunction addPropertyCollection(target, key, propertyType, defaultValue, type) {\n    if (isUndefined(target.propList)) {\n        target.propList = {\n            props: [],\n            complexProps: [],\n            colProps: [],\n            events: [],\n            propNames: [],\n            complexPropNames: [],\n            colPropNames: [],\n            eventNames: []\n        };\n    }\n    /* tslint:disable no-any */\n    target.propList[propertyType + 's'].push({\n        propertyName: key,\n        defaultValue: defaultValue,\n        type: type\n    });\n    target.propList[propertyType + 'Names'].push(key);\n    /* tslint:enable no-any */\n}\n/**\n * Returns an object containing the builder properties\n * @param {Function} component\n * @private\n */\nfunction getBuilderProperties(component) {\n    if (isUndefined(component.prototype.builderObject)) {\n        component.prototype.builderObject = {\n            properties: {}, propCollections: [], add: function () {\n                this.isPropertyArray = true;\n                this.propCollections.push(extend({}, this.properties, {}));\n            }\n        };\n        var rex = /complex/;\n        for (var _i = 0, _a = Object.keys(component.prototype.propList); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var _loop_1 = function (prop) {\n                if (rex.test(key)) {\n                    component.prototype.builderObject[prop.propertyName] = function (value) {\n                        var childType = {};\n                        merge(childType, getBuilderProperties(prop.type));\n                        value(childType);\n                        var tempValue;\n                        if (!childType.isPropertyArray) {\n                            tempValue = extend({}, childType.properties, {});\n                        }\n                        else {\n                            tempValue = childType.propCollections;\n                        }\n                        this.properties[prop.propertyName] = tempValue;\n                        childType.properties = {};\n                        childType.propCollections = [];\n                        childType.isPropertyArray = false;\n                        return this;\n                    };\n                }\n                else {\n                    component.prototype.builderObject[prop.propertyName] = function (value) {\n                        this.properties[prop.propertyName] = value;\n                        return this;\n                    };\n                }\n            };\n            for (var _b = 0, _c = component.prototype.propList[key]; _b < _c.length; _b++) {\n                var prop = _c[_b];\n                _loop_1(prop);\n            }\n        }\n    }\n    return component.prototype.builderObject;\n}\n/**\n * Method used to create builder for the components\n * @param {any} component -specifies the target component for which builder to be created.\n * @private\n */\nexport function CreateBuilder(component) {\n    var builderFunction = function (element) {\n        this.element = element;\n        return this;\n    };\n    var instanceFunction = function (element) {\n        if (!builderFunction.prototype.hasOwnProperty('create')) {\n            builderFunction.prototype = getBuilderProperties(component);\n            builderFunction.prototype.create = function () {\n                var temp = extend({}, {}, this.properties);\n                this.properties = {};\n                return new component(temp, this.element);\n            };\n        }\n        return new builderFunction(element);\n    };\n    return instanceFunction;\n}\n/**\n * Returns parent options for the object\n * @param {Object} context\n * @param {string} prefix\n * @private\n */\nfunction getParentContext(context, prefix) {\n    if (context.hasOwnProperty('parentObj') === false) {\n        return { context: context, prefix: prefix };\n    }\n    else {\n        var curText = getValue('propName', context);\n        if (curText) {\n            prefix = curText + '-' + prefix;\n        }\n        return getParentContext(getValue('parentObj', context), prefix);\n    }\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { createElement, selectAll, closest } from './dom';\nimport { Base } from './base';\nimport { Browser } from './browser';\nimport { EventHandler } from './event-handler';\nimport { Property, NotifyPropertyChanges, Event } from './notify-property-change';\n/**\n * The Animation framework provide options to animate the html DOM elements\n * ```typescript\n *   let animeObject = new Animation({\n *      name: 'SlideLeftIn',\n *      duration: 1000\n *   });\n *   animeObject.animate('#anime1');\n *   animeObject.animate('#anime2', { duration: 500 });\n * ```\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation(options) {\n        var _this = _super.call(this, options, undefined) || this;\n        /**\n         * @private\n         */\n        _this.easing = {\n            ease: 'cubic-bezier(0.250, 0.100, 0.250, 1.000)',\n            linear: 'cubic-bezier(0.250, 0.250, 0.750, 0.750)',\n            easeIn: 'cubic-bezier(0.420, 0.000, 1.000, 1.000)',\n            easeOut: 'cubic-bezier(0.000, 0.000, 0.580, 1.000)',\n            easeInOut: 'cubic-bezier(0.420, 0.000, 0.580, 1.000)',\n            elasticInOut: 'cubic-bezier(0.5,-0.58,0.38,1.81)',\n            elasticIn: 'cubic-bezier(0.17,0.67,0.59,1.81)',\n            elasticOut: 'cubic-bezier(0.7,-0.75,0.99,1.01)'\n        };\n        return _this;\n    }\n    Animation_1 = Animation;\n    /**\n     * Applies animation to the current element.\n     * @param {string | HTMLElement} element - Element which needs to be animated.\n     * @param {AnimationModel} options - Overriding default animation settings.\n     * @return {void}\n     */\n    Animation.prototype.animate = function (element, options) {\n        options = !options ? {} : options;\n        var model = this.getModel(options);\n        if (typeof element === 'string') {\n            var elements = Array.prototype.slice.call(selectAll(element, document));\n            for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n                var element_1 = elements_1[_i];\n                model.element = element_1;\n                Animation_1.delayAnimation(model);\n            }\n        }\n        else {\n            model.element = element;\n            Animation_1.delayAnimation(model);\n        }\n    };\n    /**\n     * Stop the animation effect on animated element.\n     * @param {HTMLElement} element - Element which needs to be stop the animation.\n     * @param {AnimationOptions} model - Handling the animation model at stop function.\n     * @return {void}\n     */\n    Animation.stop = function (element, model) {\n        element.style.animation = '';\n        element.removeAttribute('e-animate');\n        var animationId = element.getAttribute('e-animation-id');\n        if (animationId) {\n            var frameId = parseInt(animationId, 10);\n            cancelAnimationFrame(frameId);\n            element.removeAttribute('e-animation-id');\n        }\n        if (model && model.end) {\n            model.end.call(this, model);\n        }\n    };\n    /**\n     * Set delay to animation element\n     * @param {AnimationModel} model\n     * @returns {void}\n     */\n    Animation.delayAnimation = function (model) {\n        if (model.delay) {\n            setTimeout(function () { Animation_1.applyAnimation(model); }, model.delay);\n        }\n        else {\n            Animation_1.applyAnimation(model);\n        }\n    };\n    /**\n     * Triggers animation\n     * @param {AnimationModel} model\n     * @returns {void}\n     */\n    Animation.applyAnimation = function (model) {\n        var _this = this;\n        model.timeStamp = 0;\n        var step = 0;\n        var timerId = 0;\n        var startTime = 0;\n        var prevTimeStamp = 0;\n        var duration = model.duration;\n        model.element.setAttribute('e-animate', 'true');\n        var startAnimation = function (timeStamp) {\n            try {\n                if (timeStamp) {\n                    // let step: number = model.timeStamp = timeStamp - startTime;\n                    /** phantomjs workaround for timestamp fix */\n                    prevTimeStamp = prevTimeStamp === 0 ? timeStamp : prevTimeStamp;\n                    model.timeStamp = (timeStamp + model.timeStamp) - prevTimeStamp;\n                    prevTimeStamp = timeStamp;\n                    /** phantomjs workaround end */\n                    // trigger animation begin event\n                    if (!step && model.begin) {\n                        model.begin.call(_this, model);\n                    }\n                    step = step + 1;\n                    var avg = model.timeStamp / step;\n                    if (model.timeStamp < duration && model.timeStamp + avg < duration && model.element.getAttribute('e-animate')) {\n                        // apply animation effect to the current element                \n                        model.element.style.animation = model.name + ' ' + model.duration + 'ms ' + model.timingFunction;\n                        if (model.progress) {\n                            model.progress.call(_this, model);\n                        }\n                        // repeat requestAnimationFrame \n                        requestAnimationFrame(startAnimation);\n                    }\n                    else {\n                        // clear requestAnimationFrame\n                        cancelAnimationFrame(timerId);\n                        model.element.removeAttribute('e-animation-id');\n                        model.element.removeAttribute('e-animate');\n                        model.element.style.animation = '';\n                        if (model.end) {\n                            model.end.call(_this, model);\n                        }\n                    }\n                }\n                else {\n                    startTime = performance.now();\n                    // set initial requestAnimationFrame\n                    timerId = requestAnimationFrame(startAnimation);\n                    model.element.setAttribute('e-animation-id', timerId.toString());\n                }\n            }\n            catch (e) {\n                cancelAnimationFrame(timerId);\n                model.element.removeAttribute('e-animation-id');\n                if (model.fail) {\n                    model.fail.call(_this, e);\n                }\n            }\n        };\n        startAnimation();\n    };\n    /**\n     * Returns Animation Model\n     * @param {AnimationModel} options\n     * @returns {AnimationModel}\n     */\n    Animation.prototype.getModel = function (options) {\n        return {\n            name: options.name || this.name,\n            delay: options.delay || this.delay,\n            duration: (options.duration !== undefined ? options.duration : this.duration),\n            begin: options.begin || this.begin,\n            end: options.end || this.end,\n            fail: options.fail || this.fail,\n            progress: options.progress || this.progress,\n            timingFunction: this.easing[options.timingFunction] ? this.easing[options.timingFunction] :\n                (options.timingFunction || this.easing[this.timingFunction])\n        };\n    };\n    /**\n     * @private\n     */\n    Animation.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // no code needed\n    };\n    /**\n     * Returns module name as animation\n     * @private\n     */\n    Animation.prototype.getModuleName = function () {\n        return 'animation';\n    };\n    /**\n     * @private\n     */\n    Animation.prototype.destroy = function () {\n        //Override base destroy;\n    };\n    __decorate([\n        Property('FadeIn')\n    ], Animation.prototype, \"name\", void 0);\n    __decorate([\n        Property(400)\n    ], Animation.prototype, \"duration\", void 0);\n    __decorate([\n        Property('ease')\n    ], Animation.prototype, \"timingFunction\", void 0);\n    __decorate([\n        Property(0)\n    ], Animation.prototype, \"delay\", void 0);\n    __decorate([\n        Event()\n    ], Animation.prototype, \"progress\", void 0);\n    __decorate([\n        Event()\n    ], Animation.prototype, \"begin\", void 0);\n    __decorate([\n        Event()\n    ], Animation.prototype, \"end\", void 0);\n    __decorate([\n        Event()\n    ], Animation.prototype, \"fail\", void 0);\n    Animation = Animation_1 = __decorate([\n        NotifyPropertyChanges\n    ], Animation);\n    return Animation;\n    var Animation_1;\n}(Base));\nexport { Animation };\n/**\n * Ripple provides material theme's wave effect when an element is clicked\n * ```html\n * <div id='ripple'></div>\n * <script>\n *   rippleEffect(document.getElementById('ripple'));\n * </script>\n * ```\n * @private\n * @param HTMLElement element - Target element\n * @param RippleOptions rippleOptions - Ripple options .\n */\nexport function rippleEffect(element, rippleOptions, done) {\n    var rippleModel = getRippleModel(rippleOptions);\n    if (rippleModel.rippleFlag === false || (rippleModel.rippleFlag === undefined && !isRippleEnabled)) {\n        return Function;\n    }\n    element.setAttribute('data-ripple', 'true');\n    EventHandler.add(element, 'mousedown', rippleHandler, { parent: element, rippleOptions: rippleModel });\n    EventHandler.add(element, 'mouseup', rippleUpHandler, { parent: element, rippleOptions: rippleModel, done: done });\n    EventHandler.add(element, 'mouseleave', rippleLeaveHandler, { parent: element, rippleOptions: rippleModel });\n    if (Browser.isPointer) {\n        EventHandler.add(element, 'transitionend', rippleLeaveHandler, { parent: element, rippleOptions: rippleModel });\n    }\n    return (function () {\n        element.removeAttribute('data-ripple');\n        EventHandler.remove(element, 'mousedown', rippleHandler);\n        EventHandler.remove(element, 'mouseup', rippleUpHandler);\n        EventHandler.remove(element, 'mouseleave', rippleLeaveHandler);\n        EventHandler.remove(element, 'transitionend', rippleLeaveHandler);\n    });\n}\nfunction getRippleModel(rippleOptions) {\n    var rippleModel = {\n        selector: rippleOptions && rippleOptions.selector ? rippleOptions.selector : null,\n        ignore: rippleOptions && rippleOptions.ignore ? rippleOptions.ignore : null,\n        rippleFlag: rippleOptions && rippleOptions.rippleFlag,\n        isCenterRipple: rippleOptions && rippleOptions.isCenterRipple,\n        duration: rippleOptions && rippleOptions.duration ? rippleOptions.duration : 350\n    };\n    return rippleModel;\n}\n/**\n * Handler for ripple event\n * @param {MouseEvent} e\n * @returns {void}\n * @private\n */\nfunction rippleHandler(e) {\n    var target = (e.target);\n    var selector = this.rippleOptions.selector;\n    var element = selector ? closest(target, selector) : target;\n    if (!element || (this.rippleOptions && closest(target, this.rippleOptions.ignore))) {\n        return;\n    }\n    var offset = element.getBoundingClientRect();\n    var offsetX = e.pageX - document.body.scrollLeft;\n    var offsetY = e.pageY - document.body.scrollTop;\n    var pageX = Math.max(Math.abs(offsetX - offset.left), Math.abs(offsetX - offset.right));\n    var pageY = Math.max(Math.abs(offsetY - offset.top), Math.abs(offsetY - offset.bottom));\n    var radius = Math.sqrt(pageX * pageX + pageY * pageY);\n    var diameter = radius * 2 + 'px';\n    var x = offsetX - offset.left - radius;\n    var y = offsetY - offset.top - radius;\n    if (this.rippleOptions && this.rippleOptions.isCenterRipple) {\n        x = 0;\n        y = 0;\n        diameter = '100%';\n    }\n    element.classList.add('e-ripple');\n    var duration = this.rippleOptions.duration.toString();\n    var styles = 'width: ' + diameter + ';height: ' + diameter + ';left: ' + x + 'px;top: ' + y + 'px;' +\n        'transition-duration: ' + duration + 'ms;';\n    var rippleElement = createElement('div', { className: 'e-ripple-element', styles: styles });\n    element.appendChild(rippleElement);\n    window.getComputedStyle(rippleElement).getPropertyValue('opacity');\n    rippleElement.style.transform = 'scale(1)';\n    if (element !== this.parent) {\n        EventHandler.add(element, 'mouseleave', rippleLeaveHandler, { parent: this.parent, rippleOptions: this.rippleOptions });\n    }\n}\n/**\n * Handler for ripple element mouse up event\n * @param {MouseEvent} e\n * @returns {void}\n * @private\n */\nfunction rippleUpHandler(e) {\n    removeRipple(e, this);\n}\n/**\n * Handler for ripple element mouse move event\n * @param {MouseEvent} e\n * @returns {void}\n * @private\n */\nfunction rippleLeaveHandler(e) {\n    removeRipple(e, this);\n}\n/**\n * Handler for removing ripple element\n * @param {MouseEvent} e\n * @param {rippleArgs} eventArgs\n * @returns {void}\n * @private\n */\nfunction removeRipple(e, eventArgs) {\n    var duration = eventArgs.rippleOptions.duration;\n    var target = (e.target);\n    var selector = eventArgs.rippleOptions.selector;\n    var element = selector ? closest(target, selector) : target;\n    if (!element || (element && element.className.indexOf('e-ripple') === -1)) {\n        return;\n    }\n    var rippleElements = selectAll('.e-ripple-element', element);\n    var rippleElement = rippleElements[rippleElements.length - 1];\n    if (rippleElement) {\n        rippleElement.style.opacity = '0.5';\n    }\n    if (eventArgs.parent !== element) {\n        EventHandler.remove(element, 'mouseleave', rippleLeaveHandler);\n    }\n    /* tslint:disable:align */\n    setTimeout(function () {\n        if (rippleElement && rippleElement.parentNode) {\n            rippleElement.parentNode.removeChild(rippleElement);\n        }\n        if (!element.getElementsByClassName('e-ripple-element').length) {\n            element.classList.remove('e-ripple');\n        }\n        if (eventArgs.done) {\n            eventArgs.done(e);\n        }\n    }, duration);\n}\nexport var isRippleEnabled = false;\n/**\n * Animation Module provides support to enable ripple effect functionality to Essential JS 2 components.\n * @param {boolean} isRipple Specifies the boolean value to enable or disable ripple effect.\n * @returns {boolean}\n */\nexport function enableRipple(isRipple) {\n    isRippleEnabled = isRipple;\n    return isRippleEnabled;\n}\n","import { DateFormat } from './intl/date-formatter';\nimport { NumberFormat } from './intl/number-formatter';\nimport { DateParser } from './intl/date-parser';\nimport { NumberParser } from './intl/number-parser';\nimport { IntlBase } from './intl/intl-base';\nimport { extend, getValue } from './util';\nimport { Observer } from './observer';\n/**\n * Specifies the observer used for external change detection.\n */\nexport var onIntlChange = new Observer();\n/**\n * Specifies the default rtl status for EJ2 components.\n */\nexport var rightToLeft = false;\n/**\n * Specifies the CLDR data loaded for internationalization functionalities.\n * @private\n */\nexport var cldrData = {};\n/**\n * Specifies the default culture value to be considered.\n * @private\n */\nexport var defaultCulture = 'en-US';\n/**\n * Specifies default currency code to be considered\n * @private\n */\nexport var defaultCurrencyCode = 'USD';\nvar mapper = ['numericObject', 'dateObject'];\n/**\n * Internationalization class provides support to parse and format the number and date object to the desired format.\n * ```typescript\n * // To set the culture globally\n * setCulture('en-GB');\n *\n * // To set currency code globally\n * setCurrencyCode('EUR');\n *\n * //Load cldr data\n * loadCldr(gregorainData);\n * loadCldr(timeZoneData);\n * loadCldr(numbersData);\n * loadCldr(numberSystemData);\n *\n * // To use formatter in component side\n * let Intl:Internationalization = new Internationalization();\n *\n * // Date formatting\n * let dateFormatter: Function = Intl.getDateFormat({skeleton:'long',type:'dateTime'});\n * dateFormatter(new Date('11/2/2016'));\n * dateFormatter(new Date('25/2/2030'));\n * Intl.formatDate(new Date(),{skeleton:'E'});\n *\n * //Number formatting\n * let numberFormatter: Function = Intl.getNumberFormat({skeleton:'C5'})\n * numberFormatter(24563334);\n * Intl.formatNumber(123123,{skeleton:'p2'});\n *\n * // Date parser\n * let dateParser: Function = Intl.getDateParser({skeleton:'short',type:'time'});\n * dateParser('10:30 PM');\n * Intl.parseDate('10',{skeleton:'H'});\n * ```\n */\nvar Internationalization = /** @class */ (function () {\n    function Internationalization(cultureName) {\n        if (cultureName) {\n            this.culture = cultureName;\n        }\n    }\n    /**\n     * Returns the format function for given options.\n     * @param {DateFormatOptions} options - Specifies the format options in which the format function will return.\n     * @returns {Function}\n     */\n    Internationalization.prototype.getDateFormat = function (options) {\n        return DateFormat.dateFormat(this.getCulture(), options || { type: 'date', skeleton: 'short' }, cldrData);\n    };\n    /**\n     * Returns the format function for given options.\n     * @param {NumberFormatOptions} options - Specifies the format options in which the format function will return.\n     * @returns {Function}\n     */\n    Internationalization.prototype.getNumberFormat = function (options) {\n        if (options && !options.currency) {\n            options.currency = defaultCurrencyCode;\n        }\n        return NumberFormat.numberFormatter(this.getCulture(), options || {}, cldrData);\n    };\n    /**\n     * Returns the parser function for given options.\n     * @param {DateFormatOptions} options - Specifies the format options in which the parser function will return.\n     * @returns {Function}\n     * @private\n     */\n    Internationalization.prototype.getDateParser = function (options) {\n        return DateParser.dateParser(this.getCulture(), options || { skeleton: 'short', type: 'date' }, cldrData);\n    };\n    /**\n     * Returns the parser function for given options.\n     * @param {NumberFormatOptions} options - Specifies the format options in which the parser function will return.\n     * @returns {Function}\n     */\n    Internationalization.prototype.getNumberParser = function (options) {\n        return NumberParser.numberParser(this.getCulture(), options || { format: 'N' }, cldrData);\n    };\n    /**\n     * Returns the formatted string based on format options.\n     * @param {Number} value - Specifies the number to format.\n     * @param {NumberFormatOptions} option - Specifies the format options in which the number will be formatted.\n     * @returns {string}\n     */\n    Internationalization.prototype.formatNumber = function (value, option) {\n        return this.getNumberFormat(option)(value);\n    };\n    /**\n     * Returns the formatted date string based on format options.\n     * @param {Number} value - Specifies the number to format.\n     * @param {DateFormatOptions} option - Specifies the format options in which the number will be formatted.\n     * @returns {string}\n     */\n    Internationalization.prototype.formatDate = function (value, option) {\n        return this.getDateFormat(option)(value);\n    };\n    /**\n     * Returns the date object for given date string and options.\n     * @param {string} value - Specifies the string to parse.\n     * @param {DateFormatOptions} option - Specifies the parse options in which the date string will be parsed.\n     * @returns {Date}\n     */\n    Internationalization.prototype.parseDate = function (value, option) {\n        return this.getDateParser(option)(value);\n    };\n    /**\n     * Returns the number object from the given string value and options.\n     * @param {string} value - Specifies the string to parse.\n     * @param {NumberFormatOptions} option - Specifies the parse options in which the  string number  will be parsed.\n     * @returns {number}\n     */\n    Internationalization.prototype.parseNumber = function (value, option) {\n        return this.getNumberParser(option)(value);\n    };\n    /**\n     * Returns Native Date Time Pattern\n     * @param {DateFormatOptions} option - Specifies the parse options for resultant date time pattern.\n     * @param {boolean} isExcelFormat - Specifies format value to be converted to excel pattern.\n     * @returns {string}\n     * @private\n     */\n    Internationalization.prototype.getDatePattern = function (option, isExcelFormat) {\n        return IntlBase.getActualDateTimeFormat(this.getCulture(), option, cldrData, isExcelFormat);\n    };\n    /**\n     * Returns Native Number Pattern\n     * @param {NumberFormatOptions} option - Specifies the parse options for resultant number pattern.\n     * @returns {string}\n     * @private\n     */\n    Internationalization.prototype.getNumberPattern = function (option) {\n        return IntlBase.getActualNumberFormat(this.getCulture(), option, cldrData);\n    };\n    Internationalization.prototype.getCulture = function () {\n        return this.culture || defaultCulture;\n    };\n    return Internationalization;\n}());\nexport { Internationalization };\n/**\n * Set the default culture to all EJ2 components\n * @param {string} cultureName - Specifies the culture name to be set as default culture.\n */\nexport function setCulture(cultureName) {\n    defaultCulture = cultureName;\n    onIntlChange.notify('notifyExternalChange', { 'locale': defaultCulture });\n}\n/**\n * Set the default currency code to all EJ2 components\n * @param {string} currencyCode Specifies the culture name to be set as default culture.\n * @returns {void}\n */\nexport function setCurrencyCode(currencyCode) {\n    defaultCurrencyCode = currencyCode;\n    onIntlChange.notify('notifyExternalChange', { 'currencyCode': defaultCurrencyCode });\n}\n/**\n * Load the CLDR data into context\n * @param {Object[]} obj Specifies the CLDR data's to be used for formatting and parser.\n * @returns {void}\n */\nexport function loadCldr() {\n    var data = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        data[_i] = arguments[_i];\n    }\n    for (var _a = 0, data_1 = data; _a < data_1.length; _a++) {\n        var obj = data_1[_a];\n        extend(cldrData, obj, {}, true);\n    }\n}\n/**\n * To enable or disable RTL functionality for all components globally.\n * @param {boolean} status - Optional argument Specifies the status value to enable or disable rtl option.\n * @returns {void}\n */\nexport function enableRtl(status) {\n    if (status === void 0) { status = true; }\n    rightToLeft = status;\n    onIntlChange.notify('notifyExternalChange', { enableRtl: rightToLeft });\n}\n/**\n * To get the numeric CLDR object for given culture\n * @param {string} locale - Specifies the locale for which numericObject to be returned.\n * @ignore\n * @private\n */\nexport function getNumericObject(locale, type) {\n    /* tslint:disable no-any */\n    var numObject = IntlBase.getDependables(cldrData, locale, true)[mapper[0]];\n    var dateObject = IntlBase.getDependables(cldrData, locale)[mapper[1]];\n    var numSystem = getValue('defaultNumberingSystem', numObject);\n    var symbPattern = getValue('symbols-numberSystem-' + numSystem, numObject);\n    var pattern = IntlBase.getSymbolPattern(type || 'decimal', numSystem, numObject, false);\n    return extend(symbPattern, IntlBase.getFormatData(pattern, true, '', true), { 'dateSeparator': IntlBase.getDateSeparator(dateObject) });\n}\n/**\n * To get the default date CLDR object.\n * @ignore\n * @private\n */\nexport function getDefaultDateObject() {\n    return IntlBase.getDependables(cldrData, '', false)[mapper[1]];\n}\n","/**\n * Template Engine\n */\nvar LINES = new RegExp('\\\\n|\\\\r|\\\\s\\\\s+', 'g');\nvar QUOTES = new RegExp(/'|\"/g);\nvar IF_STMT = new RegExp('if ?\\\\(');\nvar ELSE_STMT = new RegExp('else');\nvar FOR_STMT = new RegExp('for ?\\\\(');\nvar IF_OR_FOR = new RegExp('(\\/if|\\/for)');\nvar CALL_FUNCTION = new RegExp('\\\\((.*)\\\\)', '');\nvar NOT_NUMBER = new RegExp('^[0-9]+$', 'g');\nvar WORD = new RegExp('[\\\\w\"\\'.\\\\s+]+', 'g');\nvar DBL_QUOTED_STR = new RegExp('\"(.*?)\"', 'g');\nvar exp = new RegExp('\\\\${([^}]*)}', 'g');\n// let cachedTemplate: Object = {};\n/**\n * The function to set regular expression for template expression string.\n * @param  {RegExp} value - Value expression.\n * @private\n */\nexport function expression(value) {\n    if (value) {\n        exp = value;\n    }\n    return exp;\n}\n// /**\n//  * To render the template string from the given data.\n//  * @param  {string} template - String Template.\n//  * @param  {Object[]|JSON} data - DataSource for the template.\n//  * @param  {Object} helper? - custom helper object.\n//  */\n// export function template(template: string, data: JSON, helper?: Object): string {\n//     let hash: string = hashCode(template);\n//     let tmpl: Function;\n//     if (!cachedTemplate[hash]) {\n//         tmpl = cachedTemplate[hash] = compile(template, helper);\n//     } else {\n//         tmpl = cachedTemplate[hash];\n//     }\n//     return tmpl(data);\n// }\n/**\n * Compile the template string into template function.\n * @param  {string} template - The template string which is going to convert.\n * @param  {Object} helper? - Helper functions as an object.\n * @private\n */\nexport function compile(template, helper) {\n    var argName = 'data';\n    var evalExpResult = evalExp(template, argName, helper);\n    var fnCode = \"var str=\\\"\" + evalExpResult + \"\\\"; return str;\";\n    // tslint:disable-next-line:no-function-constructor-with-string-args\n    var fn = new Function(argName, fnCode);\n    return fn.bind(helper);\n}\n// function used to evaluate the function expression\nfunction evalExp(str, nameSpace, helper) {\n    /**\n     * Variable containing Local Keys\n     */\n    var localKeys = [];\n    return str.replace(LINES, '').replace(DBL_QUOTED_STR, '\\'$1\\'').replace(exp, function (match, cnt, offset, matchStr) {\n        var matches = cnt.match(CALL_FUNCTION);\n        // matches to detect any function calls\n        if (matches) {\n            var rlStr = matches[1];\n            if (IF_STMT.test(cnt)) {\n                //handling if condition\n                cnt = '\"; ' + cnt.replace(matches[1], rlStr.replace(WORD, function (str) {\n                    str = str.trim();\n                    return addNameSpace(str, !(QUOTES.test(str)) && (localKeys.indexOf(str) === -1), nameSpace, localKeys);\n                })) + '{ \\n str = str + \"';\n            }\n            else if (FOR_STMT.test(cnt)) {\n                //handling for condition\n                var rlStr_1 = matches[1].split(' of ');\n                // replace for each into actual JavaScript\n                cnt = '\"; ' + cnt.replace(matches[1], function (mtc) {\n                    localKeys.push(rlStr_1[0]);\n                    localKeys.push(rlStr_1[0] + 'Index');\n                    return 'var i=0; i < ' + addNameSpace(rlStr_1[1], true, nameSpace, localKeys) + '.length; i++';\n                }) + '{ \\n ' + rlStr_1[0] + '= ' + addNameSpace(rlStr_1[1], true, nameSpace, localKeys)\n                    + '[i]; \\n var ' + rlStr_1[0] + 'Index=i; \\n str = str + \"';\n            }\n            else {\n                //helper function handling\n                var fnStr = cnt.split('(');\n                var fNameSpace = (helper && helper.hasOwnProperty(fnStr[0]) ? 'this.' : 'global');\n                fNameSpace = (/\\./.test(fnStr[0]) ? '' : fNameSpace);\n                cnt = '\" + ' + (fNameSpace === 'global' ? '' : fNameSpace) +\n                    cnt.replace(rlStr, addNameSpace(matches[1].replace(',', nameSpace + '.'), (fNameSpace === 'global' ? false : true), nameSpace, localKeys)) +\n                    '+\"';\n            }\n        }\n        else if (ELSE_STMT.test(cnt)) {\n            //handling else condition\n            cnt = '\"; ' + cnt.replace(ELSE_STMT, '} else { \\n str = str + \"');\n        }\n        else if (!!cnt.match(IF_OR_FOR)) {\n            // close condition \n            cnt = cnt.replace(IF_OR_FOR, '\"; \\n } \\n str = str + \"');\n        }\n        else {\n            // evaluate normal expression\n            cnt = '\"+' + addNameSpace(cnt, (localKeys.indexOf(cnt) === -1), nameSpace, localKeys) + '+\"';\n        }\n        return cnt;\n    });\n}\nfunction addNameSpace(str, addNS, nameSpace, ignoreList) {\n    return ((addNS && !(NOT_NUMBER.test(str)) && ignoreList.indexOf(str.split('.')[0]) === -1) ? nameSpace + '.' + str : str);\n}\n// // Create hashCode for template string to storeCached function\n// function hashCode(str: string): string {\n//     return str.split('').reduce((a: number, b: string) => { a = ((a << 5) - a) + b.charCodeAt(0); return a & a; }, 0).toString();\n// }\n","/**\n * Template Engine Bridge\n */\nimport { compile as render } from './template';\nimport { createElement } from './dom';\nvar HAS_ROW = /^[\\n\\r.]+\\<tr|^\\<tr/;\n/**\n * Compile the template string into template function.\n * @param  {string} templateString - The template string which is going to convert.\n * @param  {Object} helper? - Helper functions as an object.\n * @private\n */\n//tslint:disable-next-line\nexport function compile(templateString, helper) {\n    var compiler = engineObj.compile(templateString, helper);\n    //tslint:disable-next-line\n    return function (data, component, propName) {\n        var result = compiler(data, component, propName);\n        if (typeof result === 'string') {\n            var ele = createElement((HAS_ROW.test(result) ? 'table' : 'div'), { innerHTML: result });\n            return ele.childNodes;\n        }\n        else {\n            return result;\n        }\n    };\n}\n/**\n * Set your custom template engine for template rendering.\n * @param  {ITemplateEngine} classObj - Class object for custom template.\n * @private\n */\nexport function setTemplateEngine(classObj) {\n    engineObj.compile = classObj.compile;\n}\n/**\n * Get current template engine for template rendering.\n * @param  {ITemplateEngine} classObj - Class object for custom template.\n * @private\n */\nexport function getTemplateEngine() {\n    return engineObj.compile;\n}\n//Default Engine Class\nvar Engine = /** @class */ (function () {\n    function Engine() {\n    }\n    Engine.prototype.compile = function (templateString, helper) {\n        if (helper === void 0) { helper = {}; }\n        return render(templateString, helper);\n    };\n    return Engine;\n}());\nvar engineObj = { compile: new Engine().compile };\n","/**\n * Angular Utility Module\n */\n/* tslint:disable */\nexport function applyMixins(derivedClass, baseClass) {\n    baseClass.forEach(function (baseClass) {\n        Object.getOwnPropertyNames(baseClass.prototype).forEach(function (name) {\n            derivedClass.prototype[name] = baseClass.prototype[name];\n        });\n    });\n}\n/**\n * @private\n */\nexport function clearTemplate(_this, templateNames) {\n    var regTemplates = Object.keys(_this.registeredTemplate);\n    if (regTemplates.length) {\n        var regProperties = templateNames && templateNames.filter(function (val) {\n            return (/\\./g.test(val) ? false : true);\n        });\n        for (var _i = 0, _a = (regProperties && regProperties || regTemplates); _i < _a.length; _i++) {\n            var registeredTemplate = _a[_i];\n            for (var _b = 0, _c = _this.registeredTemplate[registeredTemplate]; _b < _c.length; _b++) {\n                var rt = _c[_b];\n                if (!rt.destroyed) {\n                    var pNode = rt._view.renderer.parentNode(rt.rootNodes[0]);\n                    for (var m = void 0; m < rt.rootNodes.length; m++) {\n                        pNode.appendChild(rt.rootNodes[m]);\n                    }\n                    rt.destroy();\n                }\n            }\n            delete _this.registeredTemplate[registeredTemplate];\n        }\n    }\n    var _loop_1 = function (tagObject) {\n        if (tagObject.instance) {\n            tagObject.instance.clearTemplate((templateNames && templateNames.filter(function (val) {\n                return (new RegExp(tagObject.name).test(val) ? true : false);\n            })));\n        }\n    };\n    for (var _d = 0, _e = _this.tagObjects; _d < _e.length; _d++) {\n        var tagObject = _e[_d];\n        _loop_1(tagObject);\n    }\n}\n/**\n * To set value for the nameSpace in desired object.\n * @param {string} nameSpace - String value to the get the inner object\n * @param {any} value - Value that you need to set.\n * @param {any} obj - Object to get the inner object value.\n * @return {void}\n * @private\n */\nexport function setValue(nameSpace, value, object) {\n    var keys = nameSpace.split('.');\n    var fromObj = object || {};\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (i + 1 === keys.length) {\n            fromObj[key] = value === undefined ? {} : value;\n        }\n        else if (fromObj[key] === undefined) {\n            fromObj[key] = {};\n        }\n        fromObj = fromObj[key];\n    }\n    return fromObj;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n};\n","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n\nexport interface AnonymousSubscription {\n  unsubscribe(): void;\n}\n\nexport type TeardownLogic = AnonymousSubscription | Function | void;\n\nexport interface ISubscription extends AnonymousSubscription {\n  unsubscribe(): void;\n  readonly closed: boolean;\n}\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements ISubscription {\n  public static EMPTY: Subscription = (function(empty: any){\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  protected _parent: Subscription = null;\n  protected _parents: Subscription[] = null;\n  private _subscriptions: ISubscription[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parent, _parents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    let index = -1;\n    let len = _parents ? _parents.length : 0;\n\n    // if this._parent is null, then so is this._parents, and we\n    // don't have to remove ourselves from any parent subscriptions.\n    while (_parent) {\n      _parent.remove(this);\n      // if this._parents is null or index >= len,\n      // then _parent is set to null, and the loop exits\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        errors = errors || (\n          errorObject.e instanceof UnsubscriptionError ?\n            flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]\n        );\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let subscription = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    const subscriptions = this._subscriptions || (this._subscriptions = []);\n\n    subscriptions.push(subscription);\n    subscription._addParent(this);\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n\n  private _addParent(parent: Subscription) {\n    let { _parent, _parents } = this;\n    if (!_parent || _parent === parent) {\n      // If we don't have a parent, or the new parent is the same as the\n      // current parent, then set this._parent to the new parent.\n      this._parent = parent;\n    } else if (!_parents) {\n      // If there's already one parent, but not multiple, allocate an Array to\n      // store the rest of the parent Subscriptions.\n      this._parents = [parent];\n    } else if (_parents.indexOf(parent) === -1) {\n      // Only add the new parent to the _parents list if it's not already there.\n      _parents.push(parent);\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { PartialObserver, empty as emptyObserver } from '../Observer';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { noop } from './noop';\nimport { UnaryFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(op1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>, op9: UnaryFunction<H, I>): UnaryFunction<T, I>;\n/* tslint:enable:max-line-length */\n\nexport function pipe<T, R>(...fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  return pipeFromArray(fns);\n}\n\n/* @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input);\n  };\n}\n","import { Scheduler } from '../Scheduler';\nexport function isScheduler(value: any): value is Scheduler {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","export function isPromise<T>(value: any | Promise<T>): value is Promise<T> {\n  return value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","import { root } from './root';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function subscribeToResult<T, R>(outerSubscriber: OuterSubscriber<T, R>,\n                                        result: any,\n                                        outerValue?: T,\n                                        outerIndex?: number): Subscription;\nexport function subscribeToResult<T>(outerSubscriber: OuterSubscriber<any, any>,\n                                     result: ObservableInput<T>,\n                                     outerValue?: T,\n                                     outerIndex?: number): Subscription {\n  let destination: Subscriber<any> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n\n  if (destination.closed) {\n    return null;\n  }\n\n  if (result instanceof Observable) {\n    if (result._isScalar) {\n      destination.next((<any>result).value);\n      destination.complete();\n      return null;\n    } else {\n      destination.syncErrorThrowable = true;\n      return result.subscribe(destination);\n    }\n  } else if (isArrayLike(result)) {\n    for (let i = 0, len = result.length; i < len && !destination.closed; i++) {\n      destination.next(result[i]);\n    }\n    if (!destination.closed) {\n      destination.complete();\n    }\n  } else if (isPromise(result)) {\n    result.then(\n      (value) => {\n        if (!destination.closed) {\n          destination.next(<any>value);\n          destination.complete();\n        }\n      },\n      (err: any) => destination.error(err)\n    )\n    .then(null, (err: any) => {\n      // Escaping the Promise trap: globally throw unhandled errors\n      root.setTimeout(() => { throw err; });\n    });\n    return destination;\n  } else if (result && typeof result[Symbol_iterator] === 'function') {\n    const iterator = <any>result[Symbol_iterator]();\n    do {\n      let item = iterator.next();\n      if (item.done) {\n        destination.complete();\n        break;\n      }\n      destination.next(item.value);\n      if (destination.closed) {\n        break;\n      }\n    } while (true);\n  } else if (result && typeof result[Symbol_observable] === 'function') {\n    const obs = result[Symbol_observable]();\n    if (typeof obs.subscribe !== 'function') {\n      destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n    } else {\n      return obs.subscribe(new InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n    }\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    destination.error(new TypeError(msg));\n  }\n  return null;\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>,\n                                  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                  concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, I|R> {\n  return function mergeMapOperatorFunction(source: Observable<T>) {\n    if (typeof resultSelector === 'number') {\n      concurrent = <number>resultSelector;\n      resultSelector = null;\n    }\n    return source.lift(new MergeMapOperator(project, <any>resultSelector, concurrent));\n  };\n}\n\nexport class MergeMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<I>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.resultSelector, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<I>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<I>, value: T, index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  private _notifyResultSelector(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) {\n    let result: R;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","export function identity<T>(x: T): T {\n  return x;\n}\n","\nimport { ObservableInput } from '../Observable';\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(concurrent: number = Number.POSITIVE_INFINITY): MonoTypeOperatorFunction<T> {\n  return mergeMap(identity as (value: T, index: number) => ObservableInput<{}>, null, concurrent);\n}","import { Observable, ObservableInput } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { ArrayObservable } from './ArrayObservable';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\n\n/* tslint:disable:max-line-length */\nexport function merge<T>(v1: ObservableInput<T>, scheduler?: IScheduler): Observable<T>;\nexport function merge<T>(v1: ObservableInput<T>, concurrent?: number, scheduler?: IScheduler): Observable<T>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: IScheduler): Observable<T | T2>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: IScheduler): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: (ObservableInput<T> | IScheduler | number)[]): Observable<T>;\nexport function merge<T, R>(...observables: (ObservableInput<any> | IScheduler | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | IScheduler | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: IScheduler = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <IScheduler>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return <Observable<R>>observables[0];\n  }\n\n  return mergeAll(concurrent)(new ArrayObservable(<any>observables, scheduler)) as Observable<R>;\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  };\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable, connectableObservableDescriptor } from '../observable/ConnectableObservable';\nimport { FactoryOrValue, MonoTypeOperatorFunction, OperatorFunction, UnaryFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function multicast<T>(subjectOrSubjectFactory: FactoryOrValue<Subject<T>>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function multicast<T>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: MonoTypeOperatorFunction<T>): MonoTypeOperatorFunction<T>;\nexport function multicast<T, R>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: OperatorFunction<T, R>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast<T, R>(subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n                                selector?: (source: Observable<T>) => Observable<R>): OperatorFunction<T, R> {\n  return function multicastOperatorFunction(source: Observable<T>): Observable<R> {\n    let subjectFactory: () => Subject<T>;\n    if (typeof subjectOrSubjectFactory === 'function') {\n      subjectFactory = <() => Subject<T>>subjectOrSubjectFactory;\n    } else {\n      subjectFactory = function subjectFactory() {\n        return <Subject<T>>subjectOrSubjectFactory;\n      };\n    }\n\n    if (typeof selector === 'function') {\n      return source.lift(new MulticastOperator(subjectFactory, selector));\n    }\n\n    const connectable: any = Object.create(source, connectableObservableDescriptor);\n    connectable.source = source;\n    connectable.subjectFactory = subjectFactory;\n\n    return <ConnectableObservable<R>> connectable;\n  };\n}\n\nexport class MulticastOperator<T, R> implements Operator<T, R> {\n  constructor(private subjectFactory: () => Subject<T>,\n              private selector: (source: Observable<T>) => Observable<R>) {\n  }\n  call(subscriber: Subscriber<R>, source: any): any {\n    const { selector } = this;\n    const subject = this.subjectFactory();\n    const subscription = selector(subject).subscribe(subscriber);\n    subscription.add(source.subscribe(subject));\n    return subscription;\n  }\n}\n","import { Observable } from '../Observable';\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\nfunction shareSubjectFactory() {\n  return new Subject();\n}\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .multicast(() => new Subject()).refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share<T>(): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => refCount()(multicast(shareSubjectFactory)(source)) as Observable<T>;\n};\n","import { Observable } from '../Observable';\nimport { share as higherOrder } from '../operators/share';\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n *\n * This behaves similarly to .publish().refCount(), with a behavior difference when the source observable emits complete.\n * .publish().refCount() will not resubscribe to the original source, however .share() will resubscribe to the original source.\n * Observable.of(\"test\").publish().refCount() will not re-emit \"test\" on new subscriptions, Observable.of(\"test\").share() will\n * re-emit \"test\" to new subscriptions.\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share<T>(this: Observable<T>): Observable<T> {\n  return higherOrder()(this) as Observable<T>;\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Import zero symbols from zone.js. This causes the zone ambient type to be\n// added to the type-checker, without emitting any runtime module load statement\n\nimport {} from 'zone.js';\n\n// TODO(jteplitz602): Load WorkerGlobalScope from lib.webworker.d.ts file #3492\ndeclare var WorkerGlobalScope: any /** TODO #9100 */;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\ndeclare var global: any /** TODO #9100 */;\nconst /** @type {?} */ __window = typeof window !== 'undefined' && window;\nconst /** @type {?} */ __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst /** @type {?} */ __global = typeof global !== 'undefined' && global;\nconst /** @type {?} */ _global: {[name: string]: any} = __window || __global || __self;\nexport {_global as global};\n\n// When Symbol.iterator doesn't exist, retrieves the key used in es6-shim\ndeclare const Symbol: any;\nlet /** @type {?} */ _symbolIterator: any = null;\n/**\n * @return {?}\n */\nexport function getSymbolIterator(): string|symbol {\n  if (!_symbolIterator) {\n    const /** @type {?} */ Symbol = _global['Symbol'];\n    if (Symbol && Symbol.iterator) {\n      _symbolIterator = Symbol.iterator;\n    } else {\n      // es6-shim specific logic\n      const /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let /** @type {?} */ i = 0; i < keys.length; ++i) {\n        const /** @type {?} */ key = keys[i];\n        if (key !== 'entries' && key !== 'size' &&\n            ( /** @type {?} */((Map as any))).prototype[key] === Map.prototype['entries']) {\n          _symbolIterator = key;\n        }\n      }\n    }\n  }\n  return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nexport function scheduleMicroTask(fn: Function) {\n  Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function looseIdentical(a: any, b: any): boolean {\n  return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nexport function stringify(token: any): string {\n  if (typeof token === 'string') {\n    return token;\n  }\n\n  if (token == null) {\n    return '' + token;\n  }\n\n  if (token.overriddenName) {\n    return `${token.overriddenName}`;\n  }\n\n  if (token.name) {\n    return `${token.name}`;\n  }\n\n  const /** @type {?} */ res = token.toString();\n\n  if (res == null) {\n    return '' + res;\n  }\n\n  const /** @type {?} */ newLineIndex = res.indexOf('\\n');\n  return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type} from '../type';\nimport {global, stringify} from '../util';\n\nlet /** @type {?} */ _nextClassId = 0;\nconst /** @type {?} */ Reflect = global['Reflect'];\n\n/**\n * Declares the interface to be used with {@link Class}.\n *\n * @stable\n */\nexport type ClassDefinition = {\n  /**\n   * Optional argument for specifying the superclass.\n   */\n  extends?: Type<any>;\n\n  /**\n   * Required constructor function for a class.\n   *\n   * The function may be optionally wrapped in an `Array`, in which case additional parameter\n   * annotations may be specified.\n   * The number of arguments and the number of parameter annotations must match.\n   *\n   * See {@link Class} for example of usage.\n   */\n  constructor: Function | any[];\n} &\n{\n  /**\n   * Other methods on the class. Note that values should have type 'Function' but TS requires\n   * all properties to have a narrower type than the index signature.\n   */\n  [x: string]: Type<any>|Function|any[];\n};\n\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * DSL syntax:\n *\n * ```\n * var MyClass = ng\n *   .Component({...})\n *   .Class({...});\n * ```\n *\n * ES7 syntax:\n *\n * ```\n * @ng.Component({...})\n * class MyClass {...}\n * ```\n * @stable\n */\nexport interface TypeDecorator {\n  /**\n   * Invoke as ES7 decorator.\n   */\n  <T extends Type<any>>(type: T): T;\n\n  // Make TypeDecorator assignable to built-in ParameterDecorator type.\n  // ParameterDecorator is declared in lib.d.ts as a `declare type`\n  // so we cannot declare this interface as a subtype.\n  // see https://github.com/angular/angular/issues/3379#issuecomment-126169417\n  (target: Object, propertyKey?: string|symbol, parameterIndex?: number): void;\n\n  /**\n   * Storage for the accumulated annotations so far used by the DSL syntax.\n   *\n   * Used by {@link Class} to annotate the generated class.\n   */\n  annotations: any[];\n\n  /**\n   * Generate a class from the definition and annotate it with {@link TypeDecorator#annotations}.\n   */\n  Class(obj: ClassDefinition): Type<any>;\n}\n/**\n * @param {?} annotation\n * @return {?}\n */\nfunction extractAnnotation(annotation: any): any {\n  if (typeof annotation === 'function' && annotation.hasOwnProperty('annotation')) {\n    // it is a decorator, extract annotation\n    annotation = annotation.annotation;\n  }\n  return annotation;\n}\n/**\n * @param {?} fnOrArray\n * @param {?} key\n * @return {?}\n */\nfunction applyParams(fnOrArray: Function | any[] | undefined, key: string): Function {\n  if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function ||\n      fnOrArray === Number || fnOrArray === Array) {\n    throw new Error(`Can not use native ${stringify(fnOrArray)} as constructor`);\n  }\n\n  if (typeof fnOrArray === 'function') {\n    return fnOrArray;\n  }\n\n  if (Array.isArray(fnOrArray)) {\n    const /** @type {?} */ annotations: any[] = /** @type {?} */(( fnOrArray as any[]));\n    const /** @type {?} */ annoLength = annotations.length - 1;\n    const /** @type {?} */ fn: Function = fnOrArray[annoLength];\n    if (typeof fn !== 'function') {\n      throw new Error(\n          `Last position of Class method array must be Function in key ${key} was '${stringify(fn)}'`);\n    }\n    if (annoLength != fn.length) {\n      throw new Error(\n          `Number of annotations (${annoLength}) does not match number of arguments (${fn.length}) in the function: ${stringify(fn)}`);\n    }\n    const /** @type {?} */ paramsAnnotations: any[][] = [];\n    for (let /** @type {?} */ i = 0, /** @type {?} */ ii = annotations.length - 1; i < ii; i++) {\n      const /** @type {?} */ paramAnnotations: any[] = [];\n      paramsAnnotations.push(paramAnnotations);\n      const /** @type {?} */ annotation = annotations[i];\n      if (Array.isArray(annotation)) {\n        for (let /** @type {?} */ j = 0; j < annotation.length; j++) {\n          paramAnnotations.push(extractAnnotation(annotation[j]));\n        }\n      } else if (typeof annotation === 'function') {\n        paramAnnotations.push(extractAnnotation(annotation));\n      } else {\n        paramAnnotations.push(annotation);\n      }\n    }\n    Reflect.defineMetadata('parameters', paramsAnnotations, fn);\n    return fn;\n  }\n\n  throw new Error(\n      `Only Function or Array is supported in Class definition for key '${key}' is '${stringify(fnOrArray)}'`);\n}\n/**\n * Provides a way for expressing ES6 classes with parameter annotations in ES5.\n * \n * ## Basic Example\n * \n * ```\n * var Greeter = ng.Class({\n *   constructor: function(name) {\n *     this.name = name;\n *   },\n * \n *   greet: function() {\n *     alert('Hello ' + this.name + '!');\n *   }\n * });\n * ```\n * \n * is equivalent to ES6:\n * \n * ```\n * class Greeter {\n *   constructor(name) {\n *     this.name = name;\n *   }\n * \n *   greet() {\n *     alert('Hello ' + this.name + '!');\n *   }\n * }\n * ```\n * \n * or equivalent to ES5:\n * \n * ```\n * var Greeter = function (name) {\n *   this.name = name;\n * }\n * \n * Greeter.prototype.greet = function () {\n *   alert('Hello ' + this.name + '!');\n * }\n * ```\n * \n * ### Example with parameter annotations\n * \n * ```\n * var MyService = ng.Class({\n *   constructor: [String, [new Optional(), Service], function(name, myService) {\n *     ...\n *   }]\n * });\n * ```\n * \n * is equivalent to ES6:\n * \n * ```\n * class MyService {\n *   constructor(name: string, \\@Optional() myService: Service) {\n *     ...\n *   }\n * }\n * ```\n * \n * ### Example with inheritance\n * \n * ```\n * var Shape = ng.Class({\n *   constructor: (color) {\n *     this.color = color;\n *   }\n * });\n * \n * var Square = ng.Class({\n *   extends: Shape,\n *   constructor: function(color, size) {\n *     Shape.call(this, color);\n *     this.size = size;\n *   }\n * });\n * ```\n * @suppress {globalThis}\n * \\@stable\n * @param {?} clsDef\n * @return {?}\n */\nexport function Class(clsDef: ClassDefinition): Type<any> {\n  const /** @type {?} */ constructor = applyParams(\n      clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');\n\n  let /** @type {?} */ proto = constructor.prototype;\n\n  if (clsDef.hasOwnProperty('extends')) {\n    if (typeof clsDef.extends === 'function') {\n      ( /** @type {?} */((<Function>constructor))).prototype = proto =\n          Object.create(( /** @type {?} */((<Function>clsDef.extends))).prototype);\n    } else {\n      throw new Error(\n          `Class definition 'extends' property must be a constructor function was: ${stringify(clsDef.extends)}`);\n    }\n  }\n\n  for (const /** @type {?} */ key in clsDef) {\n    if (key !== 'extends' && key !== 'prototype' && clsDef.hasOwnProperty(key)) {\n      proto[key] = applyParams(clsDef[key], key);\n    }\n  }\n\n  if (this && this.annotations instanceof Array) {\n    Reflect.defineMetadata('annotations', this.annotations, constructor);\n  }\n\n  const /** @type {?} */ constructorName = constructor['name'];\n  if (!constructorName || constructorName === 'constructor') {\n    ( /** @type {?} */((constructor as any)))['overriddenName'] = `class${_nextClassId++}`;\n  }\n\n  return /** @type {?} */(( <Type<any>>constructor));\n}\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @return {?}\n */\nexport function makeDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any,\n    chainFn?: (fn: Function) => void): (...args: any[]) => (cls: any) => any {\n  const /** @type {?} */ metaCtor = makeMetadataCtor(props);\n/**\n * @param {?} objOrType\n * @return {?}\n */\nfunction DecoratorFactory(objOrType: any): (cls: any) => any {\n    if (!(Reflect && Reflect.getOwnMetadata)) {\n      throw 'reflect-metadata shim is required when using class decorators';\n    }\n\n    if (this instanceof DecoratorFactory) {\n      metaCtor.call(this, objOrType);\n      return this;\n    }\n\n    const /** @type {?} */ annotationInstance = new ( /** @type {?} */((<any>DecoratorFactory)))(objOrType);\n    const /** @type {?} */ chainAnnotation =\n        typeof this === 'function' && Array.isArray(this.annotations) ? this.annotations : [];\n    chainAnnotation.push(annotationInstance);\n    const /** @type {?} */ TypeDecorator: TypeDecorator = /** @type {?} */(( <TypeDecorator>function TypeDecorator(cls: Type<any>) {\n      const /** @type {?} */ annotations = Reflect.getOwnMetadata('annotations', cls) || [];\n      annotations.push(annotationInstance);\n      Reflect.defineMetadata('annotations', annotations, cls);\n      return cls;\n    }));\n    TypeDecorator.annotations = chainAnnotation;\n    TypeDecorator.Class = Class;\n    if (chainFn) chainFn(TypeDecorator);\n    return TypeDecorator;\n  }\n\n  if (parentClass) {\n    DecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  DecoratorFactory.prototype.toString = () => `@${name}`;\n  ( /** @type {?} */((<any>DecoratorFactory))).annotationCls = DecoratorFactory;\n  return DecoratorFactory;\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props?: (...args: any[]) => any): any {\n  return function ctor(...args: any[]) {\n    if (props) {\n      const /** @type {?} */ values = props(...args);\n      for (const /** @type {?} */ propName in values) {\n        this[propName] = values[propName];\n      }\n    }\n  };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nexport function makeParamDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any): any {\n  const /** @type {?} */ metaCtor = makeMetadataCtor(props);\n/**\n * @param {...?} args\n * @return {?}\n */\nfunction ParamDecoratorFactory(...args: any[]): any {\n    if (this instanceof ParamDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n    const /** @type {?} */ annotationInstance = new ( /** @type {?} */((<any>ParamDecoratorFactory)))(...args);\n\n    ( /** @type {?} */((<any>ParamDecorator))).annotation = annotationInstance;\n    return ParamDecorator;\n/**\n * @param {?} cls\n * @param {?} unusedKey\n * @param {?} index\n * @return {?}\n */\nfunction ParamDecorator(cls: any, unusedKey: any, index: number): any {\n      const /** @type {?} */ parameters: (any[] | null)[] = Reflect.getOwnMetadata('parameters', cls) || [];\n\n      // there might be gaps if some in between parameters do not have annotations.\n      // we pad with nulls.\n      while (parameters.length <= index) {\n        parameters.push(null);\n      }\n\n      parameters[index] = parameters[index] || []; /** @type {?} */((\n      parameters[index])).push(annotationInstance);\n\n      Reflect.defineMetadata('parameters', parameters, cls);\n      return cls;\n    }\n  }\n  if (parentClass) {\n    ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n  ParamDecoratorFactory.prototype.toString = () => `@${name}`;\n  ( /** @type {?} */((<any>ParamDecoratorFactory))).annotationCls = ParamDecoratorFactory;\n  return ParamDecoratorFactory;\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nexport function makePropDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any): any {\n  const /** @type {?} */ metaCtor = makeMetadataCtor(props);\n/**\n * @param {...?} args\n * @return {?}\n */\nfunction PropDecoratorFactory(...args: any[]): any {\n    if (this instanceof PropDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n\n    const /** @type {?} */ decoratorInstance = new ( /** @type {?} */((<any>PropDecoratorFactory)))(...args);\n\n    return function PropDecorator(target: any, name: string) {\n      const /** @type {?} */ meta = Reflect.getOwnMetadata('propMetadata', target.constructor) || {};\n      meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n      meta[name].unshift(decoratorInstance);\n      Reflect.defineMetadata('propMetadata', meta, target.constructor);\n    };\n  }\n\n  if (parentClass) {\n    PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  PropDecoratorFactory.prototype.toString = () => `@${name}`;\n  ( /** @type {?} */((<any>PropDecoratorFactory))).annotationCls = PropDecoratorFactory;\n  return PropDecoratorFactory;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken} from '../di/injection_token';\nimport {Type} from '../type';\nimport {makeParamDecorator, makePropDecorator} from '../util/decorators';\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n * \n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n * \n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n * \n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n * \n * \\@NgModule({ \n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n * \n * \\@experimental\n */\nexport const ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken<any>('AnalyzeForEntryComponents');\n\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * @stable\n */\nexport interface AttributeDecorator {\n  /**\n   * Specifies that a constant attribute value should be injected.\n   *\n   * The directive can inject constant string literals of host element attributes.\n   *\n   * ### Example\n   *\n   * Suppose we have an `<input>` element and want to know its `type`.\n   *\n   * ```html\n   * <input type=\"text\">\n   * ```\n   *\n   * A decorator can inject string literal `text` like so:\n   *\n   * {@example core/ts/metadata/metadata.ts region='attributeMetadata'}\n   *\n   * ### Example as TypeScript Decorator\n   *\n   * {@example core/ts/metadata/metadata.ts region='attributeFactory'}\n   *\n   * ### Example as ES5 DSL\n   *\n   * ```\n   * var MyComponent = ng\n   *   .Component({...})\n   *   .Class({\n   *     constructor: [new ng.Attribute('title'), function(title) {\n   *       ...\n   *     }]\n   *   })\n   * ```\n   *\n   * ### Example as ES5 annotation\n   *\n   * ```\n   * var MyComponent = function(title) {\n   *   ...\n   * };\n   *\n   * MyComponent.annotations = [\n   *   new ng.Component({...})\n   * ]\n   * MyComponent.parameters = [\n   *   [new ng.Attribute('title')]\n   * ]\n   * ```\n   *\n   * @stable\n   */\n  (name: string): any;\n  new (name: string): Attribute;\n}\n\n\n/**\n * Type of the Attribute metadata.\n */\nexport interface Attribute { attributeName?: string; }\n/**\n * Attribute decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const Attribute: AttributeDecorator =\n    makeParamDecorator('Attribute', (attributeName?: string) => ({attributeName}));\n\n/**\n * Type of the Query metadata.\n *\n * @stable\n */\nexport interface Query {\n  descendants: boolean;\n  first: boolean;\n  read: any;\n  isViewQuery: boolean;\n  selector: any;\n}\n/**\n * Base class for query metadata.\n * \n * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n * more information.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class Query {}\n\n/**\n * Type of the ContentChildren decorator / constructor function.\n *\n * See {@link ContentChildren}.\n *\n * @stable\n */\nexport interface ContentChildrenDecorator {\n  /**\n   * @whatItDoes Configures a content query.\n   *\n   * @howToUse\n   *\n   * {@example core/di/ts/contentChildren/content_children_howto.ts region='HowTo'}\n   *\n   * @description\n   *\n   * You can use ContentChildren to get the {@link QueryList} of elements or directives from the\n   * content DOM. Any time a child element is added, removed, or moved, the query list will be\n   * updated,\n   * and the changes observable of the query list will emit a new value.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **descendants** - include only direct children or all descendants.\n   * * **read** - read a different token from the queried elements.\n   *\n   * Let's look at an example:\n   *\n   * {@example core/di/ts/contentChildren/content_children_example.ts region='Component'}\n   *\n   * **npm package**: `@angular/core`\n   *\n   * @stable\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {descendants?: boolean, read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {descendants?: boolean, read?: any}): Query;\n}\n\n/**\n * Type of the ContentChildren metadata.\n *\n * @stable\n * @Annotation\n */\nexport type ContentChildren = Query;\n/**\n * ContentChildren decorator and metadata.\n * \n *  \\@stable\n *  \\@Annotation\n */\nexport const ContentChildren: ContentChildrenDecorator =\n    <ContentChildrenDecorator>makePropDecorator(\n        'ContentChildren',\n        (selector?: any, data: any = {}) =>\n            ({selector, first: false, isViewQuery: false, descendants: false, ...data}),\n        Query);\n\n/**\n * Type of the ContentChild decorator / constructor function.\n *\n *\n * @stable\n */\nexport interface ContentChildDecorator {\n  /**\n   * @whatItDoes Configures a content query.\n   *\n   * @howToUse\n   *\n   * {@example core/di/ts/contentChild/content_child_howto.ts region='HowTo'}\n   *\n   * @description\n   *\n   * You can use ContentChild to get the first element or the directive matching the selector from\n   * the content DOM. If the content DOM changes, and a new child matches the selector,\n   * the property will be updated.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried element.\n   *\n   * Let's look at an example:\n   *\n   * {@example core/di/ts/contentChild/content_child_example.ts region='Component'}\n   *\n   * **npm package**: `@angular/core`\n   *\n   * @stable\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ContentChild;\n}\n\n/**\n * Type of the ContentChild metadata.\n *\n * See {@link ContentChild}.\n *\n * @stable\n */\nexport type ContentChild = Query;\n/**\n * ContentChild decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const ContentChild: ContentChildDecorator = makePropDecorator(\n    'ContentChild', (selector?: any, data: any = {}) =>\n                        ({selector, first: true, isViewQuery: false, descendants: true, ...data}),\n    Query);\n\n/**\n * Type of the ViewChildren decorator / constructor function.\n *\n * See {@link ViewChildren}.\n *\n * @stable\n */\nexport interface ViewChildrenDecorator {\n  /**\n   * @whatItDoes Configures a view query.\n   *\n   * @howToUse\n   *\n   * {@example core/di/ts/viewChildren/view_children_howto.ts region='HowTo'}\n   *\n   * @description\n   *\n   * You can use ViewChildren to get the {@link QueryList} of elements or directives from the\n   * view DOM. Any time a child element is added, removed, or moved, the query list will be updated,\n   * and the changes observable of the query list will emit a new value.\n   *\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried elements.\n   *\n   * Let's look at an example:\n   *\n   * {@example core/di/ts/viewChildren/view_children_example.ts region='Component'}\n   *\n   * **npm package**: `@angular/core`\n   *\n   * @stable\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ViewChildren;\n}\n\n/**\n * Type of the ViewChildren metadata.\n *\n * @stable\n */\nexport type ViewChildren = Query;\n/**\n * ViewChildren decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const ViewChildren: ViewChildrenDecorator = makePropDecorator(\n    'ViewChildren', (selector?: any, data: any = {}) =>\n                        ({selector, first: false, isViewQuery: true, descendants: true, ...data}),\n    Query);\n\n/**\n * Type of the ViewChild decorator / constructor function.\n *\n * See {@link ViewChild}\n *\n * @stable\n */\nexport interface ViewChildDecorator {\n  /**\n   * @whatItDoes Configures a view query.\n   *\n   * @howToUse\n   *\n   * {@example core/di/ts/viewChild/view_child_howto.ts region='HowTo'}\n   *\n   * @description\n   *\n   * You can use ViewChild to get the first element or the directive matching the selector from the\n   * view DOM. If the view DOM changes, and a new child matches the selector,\n   * the property will be updated.\n   *\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried elements.\n   *\n   * {@example core/di/ts/viewChild/view_child_example.ts region='Component'}\n   *\n   * **npm package**: `@angular/core`\n   *\n   * @stable\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ViewChild;\n}\n\n/**\n * Type of the ViewChild metadata.\n *\n * @stable\n */\nexport type ViewChild = Query;\n/**\n * ViewChild decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const ViewChild: ViewChildDecorator = makePropDecorator(\n    'ViewChild', (selector: any, data: any) =>\n                     ({selector, first: true, isViewQuery: true, descendants: true, ...data}),\n    Query);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\n\n\n/**\n * An interface that a function passed into {@link forwardRef} has to implement.\n *\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * @experimental\n */\nexport interface ForwardRefFn { (): any; }\n/**\n * Allows to refer to references which are not yet defined.\n * \n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n * \n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nexport function forwardRef(forwardRefFn: ForwardRefFn): Type<any> {\n  ( /** @type {?} */((<any>forwardRefFn))).__forward_ref__ = forwardRef;\n  ( /** @type {?} */((<any>forwardRefFn))).toString = function() { return stringify(this()); };\n  return ( /** @type {?} */((<Type<any>> /** @type {?} */((<any>forwardRefFn)))));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * \n * Acts as the identity function when given a non-forward-ref value.\n * \n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n * \n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n * \n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nexport function resolveForwardRef(type: any): any {\n  if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n      type.__forward_ref__ === forwardRef) {\n    return ( /** @type {?} */((<ForwardRefFn>type)))();\n  } else {\n    return type;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ERROR_ORIGINAL_ERROR, getDebugContext, getErrorLogger, getOriginalError} from './errors';\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n * \n * \\@description \n * \n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n * \n * ### Example\n * \n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n * \n * \\@NgModule({ \n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n * \n * \\@stable\n */\nexport class ErrorHandler {\n/**\n * \\@internal\n */\n_console: Console = console;\n/**\n * @param {?=} deprecatedParameter\n */\nconstructor(\n      /**\n       * @deprecated since v4.0 parameter no longer has an effect, as ErrorHandler will never\n       * rethrow.\n       */\n      deprecatedParameter?: boolean) {}\n/**\n * @param {?} error\n * @return {?}\n */\nhandleError(error: any): void {\n    const /** @type {?} */ originalError = this._findOriginalError(error);\n    const /** @type {?} */ context = this._findContext(error);\n    // Note: Browser consoles show the place from where console.error was called.\n    // We can use this to give users additional information about the error.\n    const /** @type {?} */ errorLogger = getErrorLogger(error);\n\n    errorLogger(this._console, `ERROR`, error);\n    if (originalError) {\n      errorLogger(this._console, `ORIGINAL ERROR`, originalError);\n    }\n    if (context) {\n      errorLogger(this._console, 'ERROR CONTEXT', context);\n    }\n  }\n/**\n * \\@internal\n * @param {?} error\n * @return {?}\n */\n_findContext(error: any): any {\n    if (error) {\n      return getDebugContext(error) ? getDebugContext(error) :\n                                      this._findContext(getOriginalError(error));\n    }\n\n    return null;\n  }\n/**\n * \\@internal\n * @param {?} error\n * @return {?}\n */\n_findOriginalError(error: Error): any {\n    let /** @type {?} */ e = getOriginalError(error);\n    while (e && getOriginalError(e)) {\n      e = getOriginalError(e);\n    }\n\n    return e;\n  }\n}\n\nfunction ErrorHandler_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nErrorHandler.prototype._console;\n}\n\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nexport function wrappedError(message: string, originalError: any): Error {\n  const /** @type {?} */ msg =\n      `${message} caused by: ${originalError instanceof Error ? originalError.message: originalError }`;\n  const /** @type {?} */ error = Error(msg);\n  ( /** @type {?} */((error as any)))[ERROR_ORIGINAL_ERROR] = originalError;\n  return error;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {wrappedError} from '../error_handler';\nimport {ERROR_ORIGINAL_ERROR, getOriginalError} from '../errors';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {ReflectiveInjector} from './reflective_injector';\nimport {ReflectiveKey} from './reflective_key';\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys: any[]): any[] {\n  const /** @type {?} */ res: any[] = [];\n  for (let /** @type {?} */ i = 0; i < keys.length; ++i) {\n    if (res.indexOf(keys[i]) > -1) {\n      res.push(keys[i]);\n      return res;\n    }\n    res.push(keys[i]);\n  }\n  return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys: any[]): string {\n  if (keys.length > 1) {\n    const /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n    const /** @type {?} */ tokenStrs = reversed.map(k => stringify(k.token));\n    return ' (' + tokenStrs.join(' -> ') + ')';\n  }\n\n  return '';\n}\n\nexport interface InjectionError extends Error {\n  keys: ReflectiveKey[];\n  injectors: ReflectiveInjector[];\n  constructResolvingMessage: (keys: ReflectiveKey[]) => string;\n  addKey(injector: ReflectiveInjector, key: ReflectiveKey): void;\n}\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(\n    injector: ReflectiveInjector, key: ReflectiveKey,\n    constructResolvingMessage: (keys: ReflectiveKey[]) => string,\n    originalError?: Error): InjectionError {\n  const /** @type {?} */ keys = [key];\n  const /** @type {?} */ errMsg = constructResolvingMessage(keys);\n  const /** @type {?} */ error = /** @type {?} */((\n      (originalError ? wrappedError(errMsg, originalError) : Error(errMsg)) as InjectionError));\n  error.addKey = addKey;\n  error.keys = keys;\n  error.injectors = [injector];\n  error.constructResolvingMessage = constructResolvingMessage;\n  ( /** @type {?} */((error as any)))[ERROR_ORIGINAL_ERROR] = originalError;\n  return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(this: InjectionError, injector: ReflectiveInjector, key: ReflectiveKey): void {\n  this.injectors.push(injector);\n  this.keys.push(key);\n  // Note: This updated message won't be reflected in the `.stack` property\n  this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n * \n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n * \n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n * \n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nexport function noProviderError(injector: ReflectiveInjector, key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(keys: ReflectiveKey[]) {\n    const /** @type {?} */ first = stringify(keys[0].token);\n    return `No provider for ${first}!${constructResolvingPath(keys)}`;\n  });\n}\n/**\n * Thrown when dependencies form a cycle.\n * \n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n * \n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n * \n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n * \n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nexport function cyclicDependencyError(\n    injector: ReflectiveInjector, key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(keys: ReflectiveKey[]) {\n    return `Cannot instantiate cyclic dependency!${constructResolvingPath(keys)}`;\n  });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n * \n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n * \n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n * \n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n * \n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nexport function instantiationError(\n    injector: ReflectiveInjector, originalException: any, originalStack: any,\n    key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(keys: ReflectiveKey[]) {\n    const /** @type {?} */ first = stringify(keys[0].token);\n    return `${originalException.message}: Error during instantiation of ${first}!${constructResolvingPath(keys)}.`;\n  }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n * \n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n * \n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nexport function invalidProviderError(provider: any) {\n  return Error(\n      `Invalid provider - only instances of Provider and Type are allowed, got: ${provider}`);\n}\n/**\n * Thrown when the class has no annotation information.\n * \n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n * \n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n * \n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n * \n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * \n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n * \n * ```typescript\n * class B {}\n * \n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n * \n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nexport function noAnnotationError(typeOrFunc: Type<any>| Function, params: any[][]): Error {\n  const /** @type {?} */ signature: string[] = [];\n  for (let /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n    const /** @type {?} */ parameter = params[i];\n    if (!parameter || parameter.length == 0) {\n      signature.push('?');\n    } else {\n      signature.push(parameter.map(stringify).join(' '));\n    }\n  }\n  return Error(\n      'Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n      signature.join(', ') + '). ' +\n      'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n      stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n * \n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n * \n * ```typescript\n * class A {}\n * \n * var injector = Injector.resolveAndCreate([A]);\n * \n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nexport function outOfBoundsError(index: number) {\n  return Error(`Index ${index} is out-of-bounds.`);\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n * \n * ### Example\n * \n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nexport function mixingMultiProvidersWithRegularProvidersError(\n    provider1: any, provider2: any): Error {\n  return Error(`Cannot mix multi providers and regular providers, got: ${provider1} ${provider2}`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type, isType} from '../type';\nimport {global, stringify} from '../util';\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nexport const DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nexport class ReflectionCapabilities implements PlatformReflectionCapabilities {\nprivate _reflect: any;\n/**\n * @param {?=} reflect\n */\nconstructor(reflect?: any) { this._reflect = reflect || global['Reflect']; }\n/**\n * @return {?}\n */\nisReflectionEnabled(): boolean { return true; }\n/**\n * @template T\n * @param {?} t\n * @return {?}\n */\nfactory<T>(t: Type<T>): (args: any[]) => T { return (...args: any[]) => new t(...args); }\n/**\n * \\@internal\n * @param {?} paramTypes\n * @param {?} paramAnnotations\n * @return {?}\n */\n_zipTypesAndAnnotations(paramTypes: any[], paramAnnotations: any[]): any[][] {\n    let /** @type {?} */ result: any[][];\n\n    if (typeof paramTypes === 'undefined') {\n      result = new Array(paramAnnotations.length);\n    } else {\n      result = new Array(paramTypes.length);\n    }\n\n    for (let /** @type {?} */ i = 0; i < result.length; i++) {\n      // TS outputs Object for parameters without types, while Traceur omits\n      // the annotations. For now we preserve the Traceur behavior to aid\n      // migration, but this can be revisited.\n      if (typeof paramTypes === 'undefined') {\n        result[i] = [];\n      } else if (paramTypes[i] != Object) {\n        result[i] = [paramTypes[i]];\n      } else {\n        result[i] = [];\n      }\n      if (paramAnnotations && paramAnnotations[i] != null) {\n        result[i] = result[i].concat(paramAnnotations[i]);\n      }\n    }\n    return result;\n  }\n/**\n * @param {?} type\n * @param {?} parentCtor\n * @return {?}\n */\nprivate _ownParameters(type: Type<any>, parentCtor: any): any[][]|null {\n    // If we have no decorators, we only have function.length as metadata.\n    // In that case, to detect whether a child class declared an own constructor or not,\n    // we need to look inside of that constructor to check whether it is\n    // just calling the parent.\n    // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n    // that sets 'design:paramtypes' to []\n    // if a class inherits from another class but has no ctor declared itself.\n    if (DELEGATE_CTOR.exec(type.toString())) {\n      return null;\n    }\n\n    // Prefer the direct API.\n    if (( /** @type {?} */((<any>type))).parameters && ( /** @type {?} */((<any>type))).parameters !== parentCtor.parameters) {\n      return ( /** @type {?} */((<any>type))).parameters;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    const /** @type {?} */ tsickleCtorParams = ( /** @type {?} */((<any>type))).ctorParameters;\n    if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n      // Newer tsickle uses a function closure\n      // Retain the non-function case for compatibility with older tsickle\n      const /** @type {?} */ ctorParameters =\n          typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n      const /** @type {?} */ paramTypes = ctorParameters.map((ctorParam: any) => ctorParam && ctorParam.type);\n      const /** @type {?} */ paramAnnotations = ctorParameters.map(\n          (ctorParam: any) =>\n              ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators));\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (this._reflect != null && this._reflect.getOwnMetadata != null) {\n      const /** @type {?} */ paramAnnotations = this._reflect.getOwnMetadata('parameters', type);\n      const /** @type {?} */ paramTypes = this._reflect.getOwnMetadata('design:paramtypes', type);\n      if (paramTypes || paramAnnotations) {\n        return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n      }\n    }\n\n    // If a class has no decorators, at least create metadata\n    // based on function.length.\n    // Note: We know that this is a real constructor as we checked\n    // the content of the constructor above.\n    return new Array(( /** @type {?} */((<any>type.length)))).fill(undefined);\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nparameters(type: Type<any>): any[][] {\n    // Note: only report metadata if we have at least one class decorator\n    // to stay in sync with the static reflector.\n    if (!isType(type)) {\n      return [];\n    }\n    const /** @type {?} */ parentCtor = getParentCtor(type);\n    let /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n    if (!parameters && parentCtor !== Object) {\n      parameters = this.parameters(parentCtor);\n    }\n    return parameters || [];\n  }\n/**\n * @param {?} typeOrFunc\n * @param {?} parentCtor\n * @return {?}\n */\nprivate _ownAnnotations(typeOrFunc: Type<any>, parentCtor: any): any[]|null {\n    // Prefer the direct API.\n    if (( /** @type {?} */((<any>typeOrFunc))).annotations && ( /** @type {?} */((<any>typeOrFunc))).annotations !== parentCtor.annotations) {\n      let /** @type {?} */ annotations = ( /** @type {?} */((<any>typeOrFunc))).annotations;\n      if (typeof annotations === 'function' && annotations.annotations) {\n        annotations = annotations.annotations;\n      }\n      return annotations;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if (( /** @type {?} */((<any>typeOrFunc))).decorators && ( /** @type {?} */((<any>typeOrFunc))).decorators !== parentCtor.decorators) {\n      return convertTsickleDecoratorIntoMetadata(( /** @type {?} */((<any>typeOrFunc))).decorators);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (this._reflect && this._reflect.getOwnMetadata) {\n      return this._reflect.getOwnMetadata('annotations', typeOrFunc);\n    }\n    return null;\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nannotations(typeOrFunc: Type<any>): any[] {\n    if (!isType(typeOrFunc)) {\n      return [];\n    }\n    const /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n    const /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n    const /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n    return parentAnnotations.concat(ownAnnotations);\n  }\n/**\n * @param {?} typeOrFunc\n * @param {?} parentCtor\n * @return {?}\n */\nprivate _ownPropMetadata(typeOrFunc: any, parentCtor: any): {[key: string]: any[]}|null {\n    // Prefer the direct API.\n    if (( /** @type {?} */((<any>typeOrFunc))).propMetadata &&\n        ( /** @type {?} */((<any>typeOrFunc))).propMetadata !== parentCtor.propMetadata) {\n      let /** @type {?} */ propMetadata = ( /** @type {?} */((<any>typeOrFunc))).propMetadata;\n      if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n        propMetadata = propMetadata.propMetadata;\n      }\n      return propMetadata;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if (( /** @type {?} */((<any>typeOrFunc))).propDecorators &&\n        ( /** @type {?} */((<any>typeOrFunc))).propDecorators !== parentCtor.propDecorators) {\n      const /** @type {?} */ propDecorators = ( /** @type {?} */((<any>typeOrFunc))).propDecorators;\n      const /** @type {?} */ propMetadata = /** @type {?} */(( <{[key: string]: any[]}>{}));\n      Object.keys(propDecorators).forEach(prop => {\n        propMetadata[prop] = convertTsickleDecoratorIntoMetadata(propDecorators[prop]);\n      });\n      return propMetadata;\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (this._reflect && this._reflect.getOwnMetadata) {\n      return this._reflect.getOwnMetadata('propMetadata', typeOrFunc);\n    }\n    return null;\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\npropMetadata(typeOrFunc: any): {[key: string]: any[]} {\n    if (!isType(typeOrFunc)) {\n      return {};\n    }\n    const /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n    const /** @type {?} */ propMetadata: {[key: string]: any[]} = {};\n    if (parentCtor !== Object) {\n      const /** @type {?} */ parentPropMetadata = this.propMetadata(parentCtor);\n      Object.keys(parentPropMetadata).forEach((propName) => {\n        propMetadata[propName] = parentPropMetadata[propName];\n      });\n    }\n    const /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n    if (ownPropMetadata) {\n      Object.keys(ownPropMetadata).forEach((propName) => {\n        const /** @type {?} */ decorators: any[] = [];\n        if (propMetadata.hasOwnProperty(propName)) {\n          decorators.push(...propMetadata[propName]);\n        }\n        decorators.push(...ownPropMetadata[propName]);\n        propMetadata[propName] = decorators;\n      });\n    }\n    return propMetadata;\n  }\n/**\n * @param {?} type\n * @param {?} lcProperty\n * @return {?}\n */\nhasLifecycleHook(type: any, lcProperty: string): boolean {\n    return type instanceof Type && lcProperty in type.prototype;\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetter(name: string): GetterFn { return /** @type {?} */(( <GetterFn>new Function('o', 'return o.' + name + ';'))); }\n/**\n * @param {?} name\n * @return {?}\n */\nsetter(name: string): SetterFn {\n    return /** @type {?} */(( <SetterFn>new Function('o', 'v', 'return o.' + name + ' = v;')));\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nmethod(name: string): MethodFn {\n    const /** @type {?} */ functionBody = `if (!o.${name}) throw new Error('\"${name}\" is undefined');\n        return o.${name}.apply(o, args);`;\n    return /** @type {?} */(( <MethodFn>new Function('o', 'args', functionBody)));\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nimportUri(type: any): string {\n    // StaticSymbol\n    if (typeof type === 'object' && type['filePath']) {\n      return type['filePath'];\n    }\n    // Runtime type\n    return `./${stringify(type)}`;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nresourceUri(type: any): string { return `./${stringify(type)}`; }\n/**\n * @param {?} name\n * @param {?} moduleUrl\n * @param {?} members\n * @param {?} runtime\n * @return {?}\n */\nresolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return runtime;\n  }\n/**\n * @param {?} enumIdentifier\n * @param {?} name\n * @return {?}\n */\nresolveEnum(enumIdentifier: any, name: string): any { return enumIdentifier[name]; }\n}\n\nfunction ReflectionCapabilities_tsickle_Closure_declarations() {\n/** @type {?} */\nReflectionCapabilities.prototype._reflect;\n}\n\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations: any[]): any[] {\n  if (!decoratorInvocations) {\n    return [];\n  }\n  return decoratorInvocations.map(decoratorInvocation => {\n    const /** @type {?} */ decoratorType = decoratorInvocation.type;\n    const /** @type {?} */ annotationCls = decoratorType.annotationCls;\n    const /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n    return new annotationCls(...annotationArgs);\n  });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor: Function): Type<any> {\n  const /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n  const /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n  // Note: We always use `Object` as the null value\n  // to simplify checking later on.\n  return parentCtor || Object;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {reflector} from '../reflection/reflection';\nimport {Type} from '../type';\n\nimport {resolveForwardRef} from './forward_ref';\nimport {InjectionToken} from './injection_token';\nimport {Inject, Optional, Self, SkipSelf} from './metadata';\nimport {ClassProvider, ExistingProvider, FactoryProvider, Provider, TypeProvider, ValueProvider} from './provider';\nimport {invalidProviderError, mixingMultiProvidersWithRegularProvidersError, noAnnotationError} from './reflective_errors';\nimport {ReflectiveKey} from './reflective_key';\n\n\ninterface NormalizedProvider extends TypeProvider, ValueProvider, ClassProvider, ExistingProvider,\n    FactoryProvider {}\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nexport class ReflectiveDependency {\n/**\n * @param {?} key\n * @param {?} optional\n * @param {?} visibility\n */\nconstructor(\npublic key: ReflectiveKey,\npublic optional: boolean,\npublic visibility: Self|SkipSelf|null) {}\n/**\n * @param {?} key\n * @return {?}\n */\nstatic fromKey(key: ReflectiveKey): ReflectiveDependency {\n    return new ReflectiveDependency(key, false, null);\n  }\n}\n\nfunction ReflectiveDependency_tsickle_Closure_declarations() {\n/** @type {?} */\nReflectiveDependency.prototype.key;\n/** @type {?} */\nReflectiveDependency.prototype.optional;\n/** @type {?} */\nReflectiveDependency.prototype.visibility;\n}\n\n\nconst /** @type {?} */ _EMPTY_LIST: any[] = [];\n\n/**\n * An internal resolved representation of a {@link Provider} used by the {@link Injector}.\n *\n * It is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example ([live demo](http://plnkr.co/edit/RfEnhh8kUEI0G3qsnIeT?p%3Dpreview&p=preview))\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * @experimental\n */\nexport interface ResolvedReflectiveProvider {\n  /**\n   * A key, usually a `Type<any>`.\n   */\n  key: ReflectiveKey;\n\n  /**\n   * Factory function which can return an instance of an object represented by a key.\n   */\n  resolvedFactories: ResolvedReflectiveFactory[];\n\n  /**\n   * Indicates if the provider is a multi-provider or a regular provider.\n   */\n  multiProvider: boolean;\n}\nexport class ResolvedReflectiveProvider_ implements ResolvedReflectiveProvider {\n/**\n * @param {?} key\n * @param {?} resolvedFactories\n * @param {?} multiProvider\n */\nconstructor(\npublic key: ReflectiveKey,\npublic resolvedFactories: ResolvedReflectiveFactory[],\npublic multiProvider: boolean) {}\n/**\n * @return {?}\n */\nget resolvedFactory(): ResolvedReflectiveFactory { return this.resolvedFactories[0]; }\n}\n\nfunction ResolvedReflectiveProvider__tsickle_Closure_declarations() {\n/** @type {?} */\nResolvedReflectiveProvider_.prototype.key;\n/** @type {?} */\nResolvedReflectiveProvider_.prototype.resolvedFactories;\n/** @type {?} */\nResolvedReflectiveProvider_.prototype.multiProvider;\n}\n\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nexport class ResolvedReflectiveFactory {\n/**\n * @param {?} factory\n * @param {?} dependencies\n */\nconstructor(\npublic factory: Function,\npublic dependencies: ReflectiveDependency[]) {}\n}\n\nfunction ResolvedReflectiveFactory_tsickle_Closure_declarations() {\n/**\n * Factory function which can return an instance of an object represented by a key.\n * @type {?}\n */\nResolvedReflectiveFactory.prototype.factory;\n/**\n * Arguments (dependencies) to the `factory` function.\n * @type {?}\n */\nResolvedReflectiveFactory.prototype.dependencies;\n}\n\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider: NormalizedProvider): ResolvedReflectiveFactory {\n  let /** @type {?} */ factoryFn: Function;\n  let /** @type {?} */ resolvedDeps: ReflectiveDependency[];\n  if (provider.useClass) {\n    const /** @type {?} */ useClass = resolveForwardRef(provider.useClass);\n    factoryFn = reflector.factory(useClass);\n    resolvedDeps = _dependenciesFor(useClass);\n  } else if (provider.useExisting) {\n    factoryFn = (aliasInstance: any) => aliasInstance;\n    resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n  } else if (provider.useFactory) {\n    factoryFn = provider.useFactory;\n    resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n  } else {\n    factoryFn = () => provider.useValue;\n    resolvedDeps = _EMPTY_LIST;\n  }\n  return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n * \n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider: NormalizedProvider): ResolvedReflectiveProvider {\n  return new ResolvedReflectiveProvider_(\n      ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)],\n      provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nexport function resolveReflectiveProviders(providers: Provider[]): ResolvedReflectiveProvider[] {\n  const /** @type {?} */ normalized = _normalizeProviders(providers, []);\n  const /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n  const /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n  return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nexport function mergeResolvedReflectiveProviders(\n    providers: ResolvedReflectiveProvider[],\n    normalizedProvidersMap: Map<number, ResolvedReflectiveProvider>):\n    Map<number, ResolvedReflectiveProvider> {\n  for (let /** @type {?} */ i = 0; i < providers.length; i++) {\n    const /** @type {?} */ provider = providers[i];\n    const /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n    if (existing) {\n      if (provider.multiProvider !== existing.multiProvider) {\n        throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n      }\n      if (provider.multiProvider) {\n        for (let /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n          existing.resolvedFactories.push(provider.resolvedFactories[j]);\n        }\n      } else {\n        normalizedProvidersMap.set(provider.key.id, provider);\n      }\n    } else {\n      let /** @type {?} */ resolvedProvider: ResolvedReflectiveProvider;\n      if (provider.multiProvider) {\n        resolvedProvider = new ResolvedReflectiveProvider_(\n            provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n      } else {\n        resolvedProvider = provider;\n      }\n      normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n    }\n  }\n  return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers: Provider[], res: Provider[]): Provider[] {\n  providers.forEach(b => {\n    if (b instanceof Type) {\n      res.push({provide: b, useClass: b});\n\n    } else if (b && typeof b == 'object' && ( /** @type {?} */((b as any))).provide !== undefined) {\n      res.push( /** @type {?} */((b as NormalizedProvider)));\n\n    } else if (b instanceof Array) {\n      _normalizeProviders(b, res);\n\n    } else {\n      throw invalidProviderError(b);\n    }\n  });\n\n  return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nexport function constructDependencies(\n    typeOrFunc: any, dependencies?: any[]): ReflectiveDependency[] {\n  if (!dependencies) {\n    return _dependenciesFor(typeOrFunc);\n  } else {\n    const /** @type {?} */ params: any[][] = dependencies.map(t => [t]);\n    return dependencies.map(t => _extractToken(typeOrFunc, t, params));\n  }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc: any): ReflectiveDependency[] {\n  const /** @type {?} */ params = reflector.parameters(typeOrFunc);\n\n  if (!params) return [];\n  if (params.some(p => p == null)) {\n    throw noAnnotationError(typeOrFunc, params);\n  }\n  return params.map(p => _extractToken(typeOrFunc, p, params));\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(\n    typeOrFunc: any, metadata: any[] | any, params: any[][]): ReflectiveDependency {\n  let /** @type {?} */ token: any = null;\n  let /** @type {?} */ optional = false;\n\n  if (!Array.isArray(metadata)) {\n    if (metadata instanceof Inject) {\n      return _createDependency(metadata.token, optional, null);\n    } else {\n      return _createDependency(metadata, optional, null);\n    }\n  }\n\n  let /** @type {?} */ visibility: Self|SkipSelf|null = null;\n\n  for (let /** @type {?} */ i = 0; i < metadata.length; ++i) {\n    const /** @type {?} */ paramMetadata = metadata[i];\n\n    if (paramMetadata instanceof Type) {\n      token = paramMetadata;\n\n    } else if (paramMetadata instanceof Inject) {\n      token = paramMetadata.token;\n\n    } else if (paramMetadata instanceof Optional) {\n      optional = true;\n\n    } else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n      visibility = paramMetadata;\n    } else if (paramMetadata instanceof InjectionToken) {\n      token = paramMetadata;\n    }\n  }\n\n  token = resolveForwardRef(token);\n\n  if (token != null) {\n    return _createDependency(token, optional, visibility);\n  } else {\n    throw noAnnotationError(typeOrFunc, params);\n  }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(\n    token: any, optional: boolean, visibility: Self | SkipSelf | null): ReflectiveDependency {\n  return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector, THROW_IF_NOT_FOUND} from './injector';\nimport {Self, SkipSelf} from './metadata';\nimport {Provider} from './provider';\nimport {cyclicDependencyError, instantiationError, noProviderError, outOfBoundsError} from './reflective_errors';\nimport {ReflectiveKey} from './reflective_key';\nimport {ReflectiveDependency, ResolvedReflectiveFactory, ResolvedReflectiveProvider, resolveReflectiveProviders} from './reflective_provider';\n\n// Threshold for the dynamic version\nconst /** @type {?} */ UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n * \n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n * \n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n * \n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n * \n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n * \n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class ReflectiveInjector implements Injector {\n/**\n * Turns an array of provider definitions into an array of resolved providers.\n * \n * A resolution is a process of flattening multiple nested arrays and converting individual\n * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n * \n * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n * \n * expect(providers.length).toEqual(2);\n * \n * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n * expect(providers[0].key.displayName).toBe(\"Car\");\n * expect(providers[0].dependencies.length).toEqual(1);\n * expect(providers[0].factory).toBeDefined();\n * \n * expect(providers[1].key.displayName).toBe(\"Engine\");\n * });\n * ```\n * \n * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n * @param {?} providers\n * @return {?}\n */\nstatic resolve(providers: Provider[]): ResolvedReflectiveProvider[] {\n    return resolveReflectiveProviders(providers);\n  }\n/**\n * Resolves an array of providers and creates an injector from those providers.\n * \n * The passed-in providers can be an array of `Type`, {\\@link Provider},\n * or a recursive array of more providers.\n * \n * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * expect(injector.get(Car) instanceof Car).toBe(true);\n * ```\n * \n * This function is slower than the corresponding `fromResolvedProviders`\n * because it needs to resolve the passed-in providers first.\n * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#fromResolvedProviders}.\n * @param {?} providers\n * @param {?=} parent\n * @return {?}\n */\nstatic resolveAndCreate(providers: Provider[], parent?: Injector): ReflectiveInjector {\n    const /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n    return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n  }\n/**\n * Creates an injector from previously resolved providers.\n * \n * This API is the recommended way to construct injectors in performance-sensitive parts.\n * \n * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var providers = ReflectiveInjector.resolve([Car, Engine]);\n * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n * expect(injector.get(Car) instanceof Car).toBe(true);\n * ```\n * \\@experimental\n * @param {?} providers\n * @param {?=} parent\n * @return {?}\n */\nstatic fromResolvedProviders(providers: ResolvedReflectiveProvider[], parent?: Injector):\n      ReflectiveInjector {\n    return new ReflectiveInjector_(providers, parent);\n  }\n/**\n * Parent of this injector.\n * \n * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n * -->\n * \n * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))\n * \n * ```typescript\n * var parent = ReflectiveInjector.resolveAndCreate([]);\n * var child = parent.resolveAndCreateChild([]);\n * expect(child.parent).toBe(parent);\n * ```\n * @abstract\n * @return {?}\n */\nparent() {}\n/**\n * Resolves an array of providers and creates a child injector from those providers.\n * \n * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n * -->\n * \n * The passed-in providers can be an array of `Type`, {\\@link Provider},\n * or a recursive array of more providers.\n * \n * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview))\n * \n * ```typescript\n * class ParentProvider {}\n * class ChildProvider {}\n * \n * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n * var child = parent.resolveAndCreateChild([ChildProvider]);\n * \n * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n * ```\n * \n * This function is slower than the corresponding `createChildFromResolved`\n * because it needs to resolve the passed-in providers first.\n * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#createChildFromResolved}.\n * @abstract\n * @param {?} providers\n * @return {?}\n */\nresolveAndCreateChild(providers: Provider[]) {}\n/**\n * Creates a child injector from previously resolved providers.\n * \n * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n * -->\n * \n * This API is the recommended way to construct injectors in performance-sensitive parts.\n * \n * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview))\n * \n * ```typescript\n * class ParentProvider {}\n * class ChildProvider {}\n * \n * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n * \n * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n * var child = parent.createChildFromResolved(childProviders);\n * \n * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n * ```\n * @abstract\n * @param {?} providers\n * @return {?}\n */\ncreateChildFromResolved(providers: ResolvedReflectiveProvider[]) {}\n/**\n * Resolves a provider and instantiates an object in the context of the injector.\n * \n * The created object does not get cached by the injector.\n * \n * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n * \n * var car = injector.resolveAndInstantiate(Car);\n * expect(car.engine).toBe(injector.get(Engine));\n * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n * ```\n * @abstract\n * @param {?} provider\n * @return {?}\n */\nresolveAndInstantiate(provider: Provider) {}\n/**\n * Instantiates an object using a resolved provider in the context of the injector.\n * \n * The created object does not get cached by the injector.\n * \n * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n * var carProvider = ReflectiveInjector.resolve([Car])[0];\n * var car = injector.instantiateResolved(carProvider);\n * expect(car.engine).toBe(injector.get(Engine));\n * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n * ```\n * @abstract\n * @param {?} provider\n * @return {?}\n */\ninstantiateResolved(provider: ResolvedReflectiveProvider) {}\n/**\n * @abstract\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue?: any) {}\n}\nexport class ReflectiveInjector_ implements ReflectiveInjector {\n/**\n * \\@internal\n */\n_constructionCounter: number = 0;\n/**\n * \\@internal\n */\npublic _providers: ResolvedReflectiveProvider[];\n/**\n * \\@internal\n */\npublic _parent: Injector|null;\n\n  keyIds: number[];\n  objs: any[];\n/**\n * Private\n * @param {?} _providers\n * @param {?=} _parent\n */\nconstructor(_providers: ResolvedReflectiveProvider[], _parent?: Injector) {\n    this._providers = _providers;\n    this._parent = _parent || null;\n\n    const len = _providers.length;\n\n    this.keyIds = new Array(len);\n    this.objs = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.keyIds[i] = _providers[i].key.id;\n      this.objs[i] = UNDEFINED;\n    }\n  }\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = THROW_IF_NOT_FOUND): any {\n    return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n  }\n/**\n * @return {?}\n */\nget parent(): Injector|null { return this._parent; }\n/**\n * @param {?} providers\n * @return {?}\n */\nresolveAndCreateChild(providers: Provider[]): ReflectiveInjector {\n    const /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n    return this.createChildFromResolved(ResolvedReflectiveProviders);\n  }\n/**\n * @param {?} providers\n * @return {?}\n */\ncreateChildFromResolved(providers: ResolvedReflectiveProvider[]): ReflectiveInjector {\n    const /** @type {?} */ inj = new ReflectiveInjector_(providers);\n    inj._parent = this;\n    return inj;\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\nresolveAndInstantiate(provider: Provider): any {\n    return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\ninstantiateResolved(provider: ResolvedReflectiveProvider): any {\n    return this._instantiateProvider(provider);\n  }\n/**\n * @param {?} index\n * @return {?}\n */\ngetProviderAtIndex(index: number): ResolvedReflectiveProvider {\n    if (index < 0 || index >= this._providers.length) {\n      throw outOfBoundsError(index);\n    }\n    return this._providers[index];\n  }\n/**\n * \\@internal\n * @param {?} provider\n * @return {?}\n */\n_new(provider: ResolvedReflectiveProvider): any {\n    if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n      throw cyclicDependencyError(this, provider.key);\n    }\n    return this._instantiateProvider(provider);\n  }\n/**\n * @return {?}\n */\nprivate _getMaxNumberOfObjects(): number { return this.objs.length; }\n/**\n * @param {?} provider\n * @return {?}\n */\nprivate _instantiateProvider(provider: ResolvedReflectiveProvider): any {\n    if (provider.multiProvider) {\n      const /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n      for (let /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n        res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n      }\n      return res;\n    } else {\n      return this._instantiate(provider, provider.resolvedFactories[0]);\n    }\n  }\n/**\n * @param {?} provider\n * @param {?} ResolvedReflectiveFactory\n * @return {?}\n */\nprivate _instantiate(\n      provider: ResolvedReflectiveProvider,\n      ResolvedReflectiveFactory: ResolvedReflectiveFactory): any {\n    const /** @type {?} */ factory = ResolvedReflectiveFactory.factory;\n\n    let /** @type {?} */ deps: any[];\n    try {\n      deps =\n          ResolvedReflectiveFactory.dependencies.map(dep => this._getByReflectiveDependency(dep));\n    } catch ( /** @type {?} */e) {\n      if (e.addKey) {\n        e.addKey(this, provider.key);\n      }\n      throw e;\n    }\n\n    let /** @type {?} */ obj: any;\n    try {\n      obj = factory(...deps);\n    } catch ( /** @type {?} */e) {\n      throw instantiationError(this, e, e.stack, provider.key);\n    }\n\n    return obj;\n  }\n/**\n * @param {?} dep\n * @return {?}\n */\nprivate _getByReflectiveDependency(dep: ReflectiveDependency): any {\n    return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n  }\n/**\n * @param {?} key\n * @param {?} visibility\n * @param {?} notFoundValue\n * @return {?}\n */\nprivate _getByKey(key: ReflectiveKey, visibility: Self|SkipSelf|null, notFoundValue: any): any {\n    if (key === INJECTOR_KEY) {\n      return this;\n    }\n\n    if (visibility instanceof Self) {\n      return this._getByKeySelf(key, notFoundValue);\n\n    } else {\n      return this._getByKeyDefault(key, notFoundValue, visibility);\n    }\n  }\n/**\n * @param {?} keyId\n * @return {?}\n */\nprivate _getObjByKeyId(keyId: number): any {\n    for (let /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n      if (this.keyIds[i] === keyId) {\n        if (this.objs[i] === UNDEFINED) {\n          this.objs[i] = this._new(this._providers[i]);\n        }\n\n        return this.objs[i];\n      }\n    }\n\n    return UNDEFINED;\n  }\n/**\n * \\@internal\n * @param {?} key\n * @param {?} notFoundValue\n * @return {?}\n */\n_throwOrNull(key: ReflectiveKey, notFoundValue: any): any {\n    if (notFoundValue !== THROW_IF_NOT_FOUND) {\n      return notFoundValue;\n    } else {\n      throw noProviderError(this, key);\n    }\n  }\n/**\n * \\@internal\n * @param {?} key\n * @param {?} notFoundValue\n * @return {?}\n */\n_getByKeySelf(key: ReflectiveKey, notFoundValue: any): any {\n    const /** @type {?} */ obj = this._getObjByKeyId(key.id);\n    return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n  }\n/**\n * \\@internal\n * @param {?} key\n * @param {?} notFoundValue\n * @param {?} visibility\n * @return {?}\n */\n_getByKeyDefault(key: ReflectiveKey, notFoundValue: any, visibility: Self|SkipSelf|null): any {\n    let /** @type {?} */ inj: Injector|null;\n\n    if (visibility instanceof SkipSelf) {\n      inj = this._parent;\n    } else {\n      inj = this;\n    }\n\n    while (inj instanceof ReflectiveInjector_) {\n      const /** @type {?} */ inj_ = /** @type {?} */(( <ReflectiveInjector_>inj));\n      const /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n      if (obj !== UNDEFINED) return obj;\n      inj = inj_._parent;\n    }\n    if (inj !== null) {\n      return inj.get(key.token, notFoundValue);\n    } else {\n      return this._throwOrNull(key, notFoundValue);\n    }\n  }\n/**\n * @return {?}\n */\nget displayName(): string {\n    const /** @type {?} */ providers =\n        _mapProviders(this, (b: ResolvedReflectiveProvider) => ' \"' + b.key.displayName + '\" ')\n            .join(', ');\n    return `ReflectiveInjector(providers: [${providers}])`;\n  }\n/**\n * @return {?}\n */\ntoString(): string { return this.displayName; }\n}\n\nfunction ReflectiveInjector__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nReflectiveInjector_.prototype._constructionCounter;\n/**\n * \\@internal\n * @type {?}\n */\nReflectiveInjector_.prototype._providers;\n/**\n * \\@internal\n * @type {?}\n */\nReflectiveInjector_.prototype._parent;\n/** @type {?} */\nReflectiveInjector_.prototype.keyIds;\n/** @type {?} */\nReflectiveInjector_.prototype.objs;\n}\n\n\nconst /** @type {?} */ INJECTOR_KEY = ReflectiveKey.get(Injector);\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector: ReflectiveInjector_, fn: Function): any[] {\n  const /** @type {?} */ res: any[] = new Array(injector._providers.length);\n  for (let /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n    res[i] = fn(injector.getProviderAtIndex(i));\n  }\n  return res;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\nexport {InjectDecorator,Inject,OptionalDecorator,Optional,InjectableDecorator,Injectable,SelfDecorator,Self,SkipSelfDecorator,SkipSelf,HostDecorator,Host} from './di/metadata';\n\nexport {forwardRef, resolveForwardRef, ForwardRefFn} from './di/forward_ref';\n\nexport {Injector} from './di/injector';\nexport {ReflectiveInjector} from './di/reflective_injector';\nexport {Provider, TypeProvider, ValueProvider, ClassProvider, ExistingProvider, FactoryProvider} from './di/provider';\nexport {ResolvedReflectiveFactory, ResolvedReflectiveProvider} from './di/reflective_provider';\nexport {ReflectiveKey} from './di/reflective_key';\nexport {InjectionToken, OpaqueToken} from './di/injection_token';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {ComponentFactory, ComponentRef} from './component_factory';\nimport {NgModuleRef} from './ng_module_factory';\n/**\n * @param {?} component\n * @return {?}\n */\nexport function noComponentFactoryError(component: Function) {\n  const /** @type {?} */ error = Error(\n      `No component factory found for ${stringify(component)}. Did you add it to @NgModule.entryComponents?`);\n  ( /** @type {?} */((error as any)))[ERROR_COMPONENT] = component;\n  return error;\n}\n\nconst /** @type {?} */ ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getComponent(error: Error): Type<any> {\n  return ( /** @type {?} */((error as any)))[ERROR_COMPONENT];\n}\nclass _NullComponentFactoryResolver implements ComponentFactoryResolver {\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\nresolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    throw noComponentFactoryError(component);\n  }\n}\n/**\n * \\@stable\n * @abstract\n */\nexport abstract class ComponentFactoryResolver {\n  static NULL: ComponentFactoryResolver = new _NullComponentFactoryResolver();\n/**\n * @abstract\n * @template T\n * @param {?} component\n * @return {?}\n */\nresolveComponentFactory<T>(component: Type<T>) {}\n}\n\nfunction ComponentFactoryResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nComponentFactoryResolver.NULL;\n}\n\nexport class CodegenComponentFactoryResolver implements ComponentFactoryResolver {\nprivate _factories = new Map<any, ComponentFactory<any>>();\n/**\n * @param {?} factories\n * @param {?} _parent\n * @param {?} _ngModule\n */\nconstructor(\n      factories: ComponentFactory<any>[],\nprivate _parent: ComponentFactoryResolver,\nprivate _ngModule: NgModuleRef<any>) {\n    for (let i = 0; i < factories.length; i++) {\n      const factory = factories[i];\n      this._factories.set(factory.componentType, factory);\n    }\n  }\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\nresolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    let /** @type {?} */ factory = this._factories.get(component);\n    if (!factory && this._parent) {\n      factory = this._parent.resolveComponentFactory(component);\n    }\n    if (!factory) {\n      throw noComponentFactoryError(component);\n    }\n    return new ComponentFactoryBoundToModule(factory, this._ngModule);\n  }\n}\n\nfunction CodegenComponentFactoryResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nCodegenComponentFactoryResolver.prototype._factories;\n/** @type {?} */\nCodegenComponentFactoryResolver.prototype._parent;\n/** @type {?} */\nCodegenComponentFactoryResolver.prototype._ngModule;\n}\n\nexport class ComponentFactoryBoundToModule<C> extends ComponentFactory<C> {\n/**\n * @param {?} factory\n * @param {?} ngModule\n */\nconstructor(private factory: ComponentFactory<C>,\nprivate ngModule: NgModuleRef<any>) { super(); }\n/**\n * @return {?}\n */\nget selector() { return this.factory.selector; }\n/**\n * @return {?}\n */\nget componentType() { return this.factory.componentType; }\n/**\n * @return {?}\n */\nget ngContentSelectors() { return this.factory.ngContentSelectors; }\n/**\n * @return {?}\n */\nget inputs() { return this.factory.inputs; }\n/**\n * @return {?}\n */\nget outputs() { return this.factory.outputs; }\n/**\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @param {?=} ngModule\n * @return {?}\n */\ncreate(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<C> {\n    return this.factory.create(\n        injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n  }\n}\n\nfunction ComponentFactoryBoundToModule_tsickle_Closure_declarations() {\n/** @type {?} */\nComponentFactoryBoundToModule.prototype.factory;\n/** @type {?} */\nComponentFactoryBoundToModule.prototype.ngModule;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Import zero symbols from zone.js. This causes the zone ambient type to be\n// added to the type-checker, without emitting any runtime module load statement\n\nimport {} from 'zone.js';\nimport {EventEmitter} from '../event_emitter';\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n * \n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n * \n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n * \n * ### Example\n * \n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n * \n * \\@Component({ \n *   selector: 'ng-zone-demo'.\n *   template: `\n *     <h2>Demo: NgZone</h2>\n * \n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n * \n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n * \n *   constructor(private _ngZone: NgZone) {}\n * \n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n * \n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *       // reenter the Angular zone and display done\n *       this._ngZone.run(() => {console.log('Outside Done!') });\n *     }}));\n *   }\n * \n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n * \n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n * \n * \\@experimental\n */\nexport class NgZone {\n  readonly hasPendingMicrotasks: boolean = false;\n  readonly hasPendingMacrotasks: boolean = false;\n/**\n * Whether there are no outstanding microtasks or macrotasks.\n */\nreadonly isStable: boolean = true;\n/**\n * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n */\nreadonly onUnstable: EventEmitter<any> = new EventEmitter(false);\n/**\n * Notifies when there is no more microtasks enqueue in the current VM Turn.\n * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n * For this reason this event can fire multiple times per VM Turn.\n */\nreadonly onMicrotaskEmpty: EventEmitter<any> = new EventEmitter(false);\n/**\n * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n * implies we are about to relinquish VM turn.\n * This event gets called just once.\n */\nreadonly onStable: EventEmitter<any> = new EventEmitter(false);\n/**\n * Notifies that an error has been delivered.\n */\nreadonly onError: EventEmitter<any> = new EventEmitter(false);\n/**\n * @param {?} __0\n */\nconstructor({enableLongStackTrace = false}) {\n    if (typeof Zone == 'undefined') {\n      throw new Error('Angular requires Zone.js prolyfill.');\n    }\n\n    Zone.assertZonePatched();\n    const self = this as any as NgZonePrivate;\n    self._nesting = 0;\n\n    self._outer = self._inner = Zone.current;\n\n    if ((Zone as any)['wtfZoneSpec']) {\n      self._inner = self._inner.fork((Zone as any)['wtfZoneSpec']);\n    }\n\n    if (enableLongStackTrace && (Zone as any)['longStackTraceZoneSpec']) {\n      self._inner = self._inner.fork((Zone as any)['longStackTraceZoneSpec']);\n    }\n\n    forkInnerZoneWithAngularBehavior(self);\n  }\n/**\n * @return {?}\n */\nstatic isInAngularZone(): boolean { return Zone.current.get('isAngularZone') === true; }\n/**\n * @return {?}\n */\nstatic assertInAngularZone(): void {\n    if (!NgZone.isInAngularZone()) {\n      throw new Error('Expected to be in Angular Zone, but it is not!');\n    }\n  }\n/**\n * @return {?}\n */\nstatic assertNotInAngularZone(): void {\n    if (NgZone.isInAngularZone()) {\n      throw new Error('Expected to not be in Angular Zone, but it is!');\n    }\n  }\n/**\n * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n * the function.\n * \n * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n * \n * Any future tasks or microtasks scheduled from within this function will continue executing from\n * within the Angular zone.\n * \n * If a synchronous error happens it will be rethrown and not reported via `onError`.\n * @param {?} fn\n * @return {?}\n */\nrun(fn: () => any): any { return ( /** @type {?} */(( /** @type {?} */((this as any)) as NgZonePrivate)))._inner.run(fn); }\n/**\n * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n * rethrown.\n * @param {?} fn\n * @return {?}\n */\nrunGuarded(fn: () => any): any { return ( /** @type {?} */(( /** @type {?} */((this as any)) as NgZonePrivate)))._inner.runGuarded(fn); }\n/**\n * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n * the function.\n * \n * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n * work that\n * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n * \n * Any future tasks or microtasks scheduled from within this function will continue executing from\n * outside of the Angular zone.\n * \n * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n * @param {?} fn\n * @return {?}\n */\nrunOutsideAngular(fn: () => any): any { return ( /** @type {?} */(( /** @type {?} */((this as any)) as NgZonePrivate)))._outer.run(fn); }\n}\n\nfunction NgZone_tsickle_Closure_declarations() {\n/** @type {?} */\nNgZone.prototype.hasPendingMicrotasks;\n/** @type {?} */\nNgZone.prototype.hasPendingMacrotasks;\n/**\n * Whether there are no outstanding microtasks or macrotasks.\n * @type {?}\n */\nNgZone.prototype.isStable;\n/**\n * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n * @type {?}\n */\nNgZone.prototype.onUnstable;\n/**\n * Notifies when there is no more microtasks enqueue in the current VM Turn.\n * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n * For this reason this event can fire multiple times per VM Turn.\n * @type {?}\n */\nNgZone.prototype.onMicrotaskEmpty;\n/**\n * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n * implies we are about to relinquish VM turn.\n * This event gets called just once.\n * @type {?}\n */\nNgZone.prototype.onStable;\n/**\n * Notifies that an error has been delivered.\n * @type {?}\n */\nNgZone.prototype.onError;\n}\n\n\ninterface NgZonePrivate extends NgZone {\n  _outer: Zone;\n  _inner: Zone;\n  _nesting: number;\n\n  hasPendingMicrotasks: boolean;\n  hasPendingMacrotasks: boolean;\n  isStable: boolean;\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone: NgZonePrivate) {\n  if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n    try {\n      zone._nesting++;\n      zone.onMicrotaskEmpty.emit(null);\n    } finally {\n      zone._nesting--;\n      if (!zone.hasPendingMicrotasks) {\n        try {\n          zone.runOutsideAngular(() => zone.onStable.emit(null));\n        } finally {\n          zone.isStable = true;\n        }\n      }\n    }\n  }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone: NgZonePrivate) {\n  zone._inner = zone._inner.fork({\n    name: 'angular',\n    properties: /** @type {?} */(( <any>{'isAngularZone': true})),\n    onInvokeTask: (delegate: ZoneDelegate, current: Zone, target: Zone, task: Task, applyThis: any,\n                   applyArgs: any): any => {\n      try {\n        onEnter(zone);\n        return delegate.invokeTask(target, task, applyThis, applyArgs);\n      } finally {\n        onLeave(zone);\n      }\n    },\n\n\n    onInvoke: (delegate: ZoneDelegate, current: Zone, target: Zone, callback: Function,\n               applyThis: any, applyArgs: any[], source: string): any => {\n      try {\n        onEnter(zone);\n        return delegate.invoke(target, callback, applyThis, applyArgs, source);\n      } finally {\n        onLeave(zone);\n      }\n    },\n\n    onHasTask:\n        (delegate: ZoneDelegate, current: Zone, target: Zone, hasTaskState: HasTaskState) => {\n          delegate.hasTask(target, hasTaskState);\n          if (current === target) {\n            // We are only interested in hasTask events which originate from our zone\n            // (A child hasTask event is not interesting to us)\n            if (hasTaskState.change == 'microTask') {\n              zone.hasPendingMicrotasks = hasTaskState.microTask;\n              checkStable(zone);\n            } else if (hasTaskState.change == 'macroTask') {\n              zone.hasPendingMacrotasks = hasTaskState.macroTask;\n            }\n          }\n        },\n\n    onHandleError: (delegate: ZoneDelegate, current: Zone, target: Zone, error: any): boolean => {\n      delegate.handleError(target, error);\n      zone.runOutsideAngular(() => zone.onError.emit(error));\n      return false;\n    }\n  });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone: NgZonePrivate) {\n  zone._nesting++;\n  if (zone.isStable) {\n    zone.isStable = false;\n    zone.onUnstable.emit(null);\n  }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone: NgZonePrivate) {\n  zone._nesting--;\n  checkStable(zone);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable} from '../di';\nimport {scheduleMicroTask} from '../util';\nimport {NgZone} from '../zone/ng_zone';\n\n/**\n * Testability API.\n * `declare` keyword causes tsickle to generate externs, so these methods are\n * not renamed by Closure Compiler.\n * @experimental\n */\nexport declare interface PublicTestability {\n  isStable(): boolean;\n  whenStable(callback: Function): void;\n  findProviders(using: any, provider: string, exactMatch: boolean): any[];\n}\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nexport class Testability implements PublicTestability {\n/**\n * \\@internal\n */\n_pendingCount: number = 0;\n/**\n * \\@internal\n */\n_isZoneStable: boolean = true;\n/**\n * Whether any work was done since the last 'whenStable' callback. This is\n * useful to detect if this could have potentially destabilized another\n * component while it is stabilizing.\n * \\@internal\n */\n_didWork: boolean = false;\n/**\n * \\@internal\n */\n_callbacks: Function[] = [];\n/**\n * @param {?} _ngZone\n */\nconstructor(private _ngZone: NgZone) { this._watchAngularEvents(); }\n/**\n * \\@internal\n * @return {?}\n */\n_watchAngularEvents(): void {\n    this._ngZone.onUnstable.subscribe({\n      next: () => {\n        this._didWork = true;\n        this._isZoneStable = false;\n      }\n    });\n\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.subscribe({\n        next: () => {\n          NgZone.assertNotInAngularZone();\n          scheduleMicroTask(() => {\n            this._isZoneStable = true;\n            this._runCallbacksIfReady();\n          });\n        }\n      });\n    });\n  }\n/**\n * @return {?}\n */\nincreasePendingRequestCount(): number {\n    this._pendingCount += 1;\n    this._didWork = true;\n    return this._pendingCount;\n  }\n/**\n * @return {?}\n */\ndecreasePendingRequestCount(): number {\n    this._pendingCount -= 1;\n    if (this._pendingCount < 0) {\n      throw new Error('pending async requests below zero');\n    }\n    this._runCallbacksIfReady();\n    return this._pendingCount;\n  }\n/**\n * @return {?}\n */\nisStable(): boolean {\n    return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_runCallbacksIfReady(): void {\n    if (this.isStable()) {\n      // Schedules the call backs in a new frame so that it is always async.\n      scheduleMicroTask(() => {\n        while (this._callbacks.length !== 0) {\n          ( /** @type {?} */((this._callbacks.pop())))(this._didWork);\n        }\n        this._didWork = false;\n      });\n    } else {\n      // Not Ready\n      this._didWork = true;\n    }\n  }\n/**\n * @param {?} callback\n * @return {?}\n */\nwhenStable(callback: Function): void {\n    this._callbacks.push(callback);\n    this._runCallbacksIfReady();\n  }\n/**\n * @return {?}\n */\ngetPendingRequestCount(): number { return this._pendingCount; }\n/**\n * @deprecated use findProviders\n * @param {?} using\n * @param {?} provider\n * @param {?} exactMatch\n * @return {?}\n */\nfindBindings(using: any, provider: string, exactMatch: boolean): any[] {\n    // TODO(juliemr): implement.\n    return [];\n  }\n/**\n * @param {?} using\n * @param {?} provider\n * @param {?} exactMatch\n * @return {?}\n */\nfindProviders(using: any, provider: string, exactMatch: boolean): any[] {\n    // TODO(juliemr): implement.\n    return [];\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgZone, },\n];\n}\n\nfunction Testability_tsickle_Closure_declarations() {\n/** @type {?} */\nTestability.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTestability.ctorParameters;\n/**\n * \\@internal\n * @type {?}\n */\nTestability.prototype._pendingCount;\n/**\n * \\@internal\n * @type {?}\n */\nTestability.prototype._isZoneStable;\n/**\n * Whether any work was done since the last 'whenStable' callback. This is\n * useful to detect if this could have potentially destabilized another\n * component while it is stabilizing.\n * \\@internal\n * @type {?}\n */\nTestability.prototype._didWork;\n/**\n * \\@internal\n * @type {?}\n */\nTestability.prototype._callbacks;\n/** @type {?} */\nTestability.prototype._ngZone;\n}\n\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nexport class TestabilityRegistry {\n/**\n * \\@internal\n */\n_applications = new Map<any, Testability>();\nconstructor() { _testabilityGetter.addToWindow(this); }\n/**\n * @param {?} token\n * @param {?} testability\n * @return {?}\n */\nregisterApplication(token: any, testability: Testability) {\n    this._applications.set(token, testability);\n  }\n/**\n * @param {?} elem\n * @return {?}\n */\ngetTestability(elem: any): Testability|null { return this._applications.get(elem) || null; }\n/**\n * @return {?}\n */\ngetAllTestabilities(): Testability[] { return Array.from(this._applications.values()); }\n/**\n * @return {?}\n */\ngetAllRootElements(): any[] { return Array.from(this._applications.keys()); }\n/**\n * @param {?} elem\n * @param {?=} findInAncestors\n * @return {?}\n */\nfindTestabilityInTree(elem: Node, findInAncestors: boolean = true): Testability|null {\n    return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TestabilityRegistry_tsickle_Closure_declarations() {\n/** @type {?} */\nTestabilityRegistry.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTestabilityRegistry.ctorParameters;\n/**\n * \\@internal\n * @type {?}\n */\nTestabilityRegistry.prototype._applications;\n}\n\n\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * @experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n */\nexport interface GetTestability {\n  addToWindow(registry: TestabilityRegistry): void;\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null;\n}\nclass _NoopGetTestability implements GetTestability {\n/**\n * @param {?} registry\n * @return {?}\n */\naddToWindow(registry: TestabilityRegistry): void {}\n/**\n * @param {?} registry\n * @param {?} elem\n * @param {?} findInAncestors\n * @return {?}\n */\nfindTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null {\n    return null;\n  }\n}\n/**\n * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n * \\@experimental\n * @param {?} getter\n * @return {?}\n */\nexport function setTestabilityGetter(getter: GetTestability): void {\n  _testabilityGetter = getter;\n}\n\nlet /** @type {?} */ _testabilityGetter: GetTestability = new _NoopGetTestability();\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\nimport {Subscription} from 'rxjs/Subscription';\nimport {merge} from 'rxjs/observable/merge';\nimport {share} from 'rxjs/operator/share';\n\nimport {ErrorHandler} from '../src/error_handler';\nimport {scheduleMicroTask, stringify} from '../src/util';\nimport {isPromise} from '../src/util/lang';\n\nimport {ApplicationInitStatus} from './application_init';\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_INITIALIZER} from './application_tokens';\nimport {Console} from './console';\nimport {Injectable, InjectionToken, Injector, Provider, ReflectiveInjector} from './di';\nimport {CompilerFactory, CompilerOptions} from './linker/compiler';\nimport {ComponentFactory, ComponentRef} from './linker/component_factory';\nimport {ComponentFactoryBoundToModule, ComponentFactoryResolver} from './linker/component_factory_resolver';\nimport {InternalNgModuleRef, NgModuleFactory, NgModuleRef} from './linker/ng_module_factory';\nimport {InternalViewRef, ViewRef} from './linker/view_ref';\nimport {WtfScopeFn, wtfCreateScope, wtfLeave} from './profile/profile';\nimport {Testability, TestabilityRegistry} from './testability/testability';\nimport {Type} from './type';\nimport {NgZone} from './zone/ng_zone';\n\nlet /** @type {?} */ _devMode: boolean = true;\nlet /** @type {?} */ _runModeLocked: boolean = false;\nlet /** @type {?} */ _platform: PlatformRef;\n\nexport const /** @type {?} */ ALLOW_MULTIPLE_PLATFORMS = new InjectionToken<boolean>('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n * \n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n * \n * \\@stable\n * @return {?}\n */\nexport function enableProdMode(): void {\n  if (_runModeLocked) {\n    throw new Error('Cannot enable prod mode after platform setup.');\n  }\n  _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n * \n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nexport function isDevMode(): boolean {\n  _runModeLocked = true;\n  return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n * \n * \\@experimental\n */\nexport class NgProbeToken {\n/**\n * @param {?} name\n * @param {?} token\n */\nconstructor(public name: string,\npublic token: any) {}\n}\n\nfunction NgProbeToken_tsickle_Closure_declarations() {\n/** @type {?} */\nNgProbeToken.prototype.name;\n/** @type {?} */\nNgProbeToken.prototype.token;\n}\n\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nexport function createPlatform(injector: Injector): PlatformRef {\n  if (_platform && !_platform.destroyed &&\n      !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n    throw new Error(\n        'There can be only one platform. Destroy the previous one to create a new one.');\n  }\n  _platform = injector.get(PlatformRef);\n  const /** @type {?} */ inits = injector.get(PLATFORM_INITIALIZER, null);\n  if (inits) inits.forEach((init: any) => init());\n  return _platform;\n}\n/**\n * Creates a factory for a platform\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nexport function createPlatformFactory(\n    parentPlatformFactory: ((extraProviders?: Provider[]) => PlatformRef) | null, name: string,\n    providers: Provider[] = []): (extraProviders?: Provider[]) => PlatformRef {\n  const /** @type {?} */ marker = new InjectionToken(`Platform: ${name}`);\n  return (extraProviders: Provider[] = []) => {\n    let /** @type {?} */ platform = getPlatform();\n    if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n      if (parentPlatformFactory) {\n        parentPlatformFactory(\n            providers.concat(extraProviders).concat({provide: marker, useValue: true}));\n      } else {\n        createPlatform(ReflectiveInjector.resolveAndCreate(\n            providers.concat(extraProviders).concat({provide: marker, useValue: true})));\n      }\n    }\n    return assertPlatform(marker);\n  };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nexport function assertPlatform(requiredToken: any): PlatformRef {\n  const /** @type {?} */ platform = getPlatform();\n\n  if (!platform) {\n    throw new Error('No platform exists!');\n  }\n\n  if (!platform.injector.get(requiredToken, null)) {\n    throw new Error(\n        'A platform with a different configuration has been created. Please destroy it first.');\n  }\n\n  return platform;\n}\n/**\n * Destroy the existing platform.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nexport function destroyPlatform(): void {\n  if (_platform && !_platform.destroyed) {\n    _platform.destroy();\n  }\n}\n/**\n * Returns the current platform.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nexport function getPlatform(): PlatformRef|null {\n  return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n * \n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class PlatformRef {\n/**\n * Creates an instance of an `\\@NgModule` for the given platform\n * for offline compilation.\n * \n * ## Simple Example\n * \n * ```typescript\n * my_module.ts:\n * \n * \\@NgModule({ \n *   imports: [BrowserModule]\n * })\n * class MyModule {}\n * \n * main.ts:\n * import {MyModuleNgFactory} from './my_module.ngfactory';\n * import {platformBrowser} from '\\@angular/platform-browser';\n * \n * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n * ```\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @abstract\n * @template M\n * @param {?} moduleFactory\n * @return {?}\n */\nbootstrapModuleFactory<M>(moduleFactory: NgModuleFactory<M>) {}\n/**\n * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n * \n * ## Simple Example\n * \n * ```typescript\n * \\@NgModule({ \n *   imports: [BrowserModule]\n * })\n * class MyModule {}\n * \n * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n * ```\n * \\@stable\n * @abstract\n * @template M\n * @param {?} moduleType\n * @param {?=} compilerOptions\n * @return {?}\n */\nbootstrapModule<M>(\n      moduleType: Type<M>,\n      compilerOptions?: CompilerOptions|CompilerOptions[]) {}\n/**\n * Register a listener to be called when the platform is disposed.\n * @abstract\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: () => void) {}\n/**\n * Retrieve the platform {\\@link Injector}, which is the parent injector for\n * every Angular application on the page and provides singleton providers.\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * Destroy the Angular platform and all Angular applications on the page.\n * @abstract\n * @return {?}\n */\ndestroy() {}\n/**\n * @abstract\n * @return {?}\n */\ndestroyed() {}\n}\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(\n    errorHandler: ErrorHandler, ngZone: NgZone, callback: () => any): any {\n  try {\n    const /** @type {?} */ result = callback();\n    if (isPromise(result)) {\n      return result.catch((e: any) => {\n        ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n        // rethrow as the exception handler might not do it\n        throw e;\n      });\n    }\n\n    return result;\n  } catch ( /** @type {?} */e) {\n    ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n    // rethrow as the exception handler might not do it\n    throw e;\n  }\n}\n/**\n * workaround https://github.com/angular/tsickle/issues/350\n * @suppress {checkTypes}\n */\nexport class PlatformRef_ extends PlatformRef {\nprivate _modules: NgModuleRef<any>[] = [];\nprivate _destroyListeners: Function[] = [];\nprivate _destroyed: boolean = false;\n/**\n * @param {?} _injector\n */\nconstructor(private _injector: Injector) { super(); }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n/**\n * @return {?}\n */\nget injector(): Injector { return this._injector; }\n/**\n * @return {?}\n */\nget destroyed() { return this._destroyed; }\n/**\n * @return {?}\n */\ndestroy() {\n    if (this._destroyed) {\n      throw new Error('The platform has already been destroyed!');\n    }\n    this._modules.slice().forEach(module => module.destroy());\n    this._destroyListeners.forEach(listener => listener());\n    this._destroyed = true;\n  }\n/**\n * @template M\n * @param {?} moduleFactory\n * @return {?}\n */\nbootstrapModuleFactory<M>(moduleFactory: NgModuleFactory<M>): Promise<NgModuleRef<M>> {\n    return this._bootstrapModuleFactoryWithZone(moduleFactory);\n  }\n/**\n * @template M\n * @param {?} moduleFactory\n * @param {?=} ngZone\n * @return {?}\n */\nprivate _bootstrapModuleFactoryWithZone<M>(moduleFactory: NgModuleFactory<M>, ngZone?: NgZone):\n      Promise<NgModuleRef<M>> {\n    // Note: We need to create the NgZone _before_ we instantiate the module,\n    // as instantiating the module creates some providers eagerly.\n    // So we create a mini parent injector that just contains the new NgZone and\n    // pass that as parent to the NgModuleFactory.\n    if (!ngZone) ngZone = new NgZone({enableLongStackTrace: isDevMode()});\n    // Attention: Don't use ApplicationRef.run here,\n    // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n    return ngZone.run(() => {\n      const /** @type {?} */ ngZoneInjector =\n          ReflectiveInjector.resolveAndCreate([{provide: NgZone, useValue: ngZone}], this.injector);\n      const /** @type {?} */ moduleRef = /** @type {?} */(( <InternalNgModuleRef<M>>moduleFactory.create(ngZoneInjector)));\n      const /** @type {?} */ exceptionHandler: ErrorHandler = moduleRef.injector.get(ErrorHandler, null);\n      if (!exceptionHandler) {\n        throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n      }\n      moduleRef.onDestroy(() => remove(this._modules, moduleRef)); /** @type {?} */((\n      ngZone)).runOutsideAngular(\n          () => /** @type {?} */(( ngZone)).onError.subscribe(\n              {next: (error: any) => { exceptionHandler.handleError(error); }}));\n      return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */(( ngZone)), () => {\n        const /** @type {?} */ initStatus: ApplicationInitStatus = moduleRef.injector.get(ApplicationInitStatus);\n        initStatus.runInitializers();\n        return initStatus.donePromise.then(() => {\n          this._moduleDoBootstrap(moduleRef);\n          return moduleRef;\n        });\n      });\n    });\n  }\n/**\n * @template M\n * @param {?} moduleType\n * @param {?=} compilerOptions\n * @return {?}\n */\nbootstrapModule<M>(moduleType: Type<M>, compilerOptions: CompilerOptions|CompilerOptions[] = []):\n      Promise<NgModuleRef<M>> {\n    return this._bootstrapModuleWithZone(moduleType, compilerOptions);\n  }\n/**\n * @template M\n * @param {?} moduleType\n * @param {?=} compilerOptions\n * @param {?=} ngZone\n * @return {?}\n */\nprivate _bootstrapModuleWithZone<M>(\n      moduleType: Type<M>, compilerOptions: CompilerOptions|CompilerOptions[] = [],\n      ngZone?: NgZone): Promise<NgModuleRef<M>> {\n    const /** @type {?} */ compilerFactory: CompilerFactory = this.injector.get(CompilerFactory);\n    const /** @type {?} */ compiler = compilerFactory.createCompiler(\n        Array.isArray(compilerOptions) ? compilerOptions : [compilerOptions]);\n\n    return compiler.compileModuleAsync(moduleType)\n        .then((moduleFactory) => this._bootstrapModuleFactoryWithZone(moduleFactory, ngZone));\n  }\n/**\n * @param {?} moduleRef\n * @return {?}\n */\nprivate _moduleDoBootstrap(moduleRef: InternalNgModuleRef<any>): void {\n    const /** @type {?} */ appRef = /** @type {?} */(( moduleRef.injector.get(ApplicationRef) as ApplicationRef));\n    if (moduleRef._bootstrapComponents.length > 0) {\n      moduleRef._bootstrapComponents.forEach(f => appRef.bootstrap(f));\n    } else if (moduleRef.instance.ngDoBootstrap) {\n      moduleRef.instance.ngDoBootstrap(appRef);\n    } else {\n      throw new Error(\n          `The module ${stringify(moduleRef.instance.constructor)} was bootstrapped, but it does not declare \"@NgModule.bootstrap\" components nor a \"ngDoBootstrap\" method. ` +\n          `Please define one of these.`);\n    }\n    this._modules.push(moduleRef);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Injector, },\n];\n}\n\nfunction PlatformRef__tsickle_Closure_declarations() {\n/** @type {?} */\nPlatformRef_.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPlatformRef_.ctorParameters;\n/** @type {?} */\nPlatformRef_.prototype._modules;\n/** @type {?} */\nPlatformRef_.prototype._destroyListeners;\n/** @type {?} */\nPlatformRef_.prototype._destroyed;\n/** @type {?} */\nPlatformRef_.prototype._injector;\n}\n\n/**\n * A reference to an Angular application running on a page.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class ApplicationRef {\n/**\n * Bootstrap a new component at the root level of the application.\n * \n * ### Bootstrap process\n * \n * When bootstrapping a new root component into an application, Angular mounts the\n * specified application component onto DOM elements identified by the [componentType]'s\n * selector and kicks off automatic change detection to finish initializing the component.\n * \n * Optionally, a component can be mounted onto a DOM element that does not match the\n * [componentType]'s selector.\n * \n * ### Example\n * {\\@example core/ts/platform/platform.ts region='longform'}\n * @abstract\n * @template C\n * @param {?} componentFactory\n * @param {?=} rootSelectorOrNode\n * @return {?}\n */\nbootstrap<C>(\n      componentFactory: ComponentFactory<C>|Type<C>,\n      rootSelectorOrNode?: string|any) {}\n/**\n * Invoke this method to explicitly process change detection and its side-effects.\n * \n * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n * further changes are detected. If additional changes are picked up during this second cycle,\n * bindings in the app have side-effects that cannot be resolved in a single change detection\n * pass.\n * In this case, Angular throws an error, since an Angular application can only have one change\n * detection pass during which all change detection must complete.\n * @abstract\n * @return {?}\n */\ntick() {}\n/**\n * Get a list of component types registered to this application.\n * This list is populated even before the component is created.\n * @abstract\n * @return {?}\n */\ncomponentTypes() {}\n/**\n * Get a list of components registered to this application.\n * @abstract\n * @return {?}\n */\ncomponents() {}\n/**\n * Attaches a view so that it will be dirty checked.\n * The view will be automatically detached when it is destroyed.\n * This will throw if the view is already attached to a ViewContainer.\n * @abstract\n * @param {?} view\n * @return {?}\n */\nattachView(view: ViewRef) {}\n/**\n * Detaches a view from dirty checking again.\n * @abstract\n * @param {?} view\n * @return {?}\n */\ndetachView(view: ViewRef) {}\n/**\n * Returns the number of attached views.\n * @abstract\n * @return {?}\n */\nviewCount() {}\n/**\n * Returns an Observable that indicates when the application is stable or unstable.\n * @abstract\n * @return {?}\n */\nisStable() {}\n}\n/**\n * workaround https://github.com/angular/tsickle/issues/350\n * @suppress {checkTypes}\n */\nexport class ApplicationRef_ extends ApplicationRef {\n/**\n * \\@internal\n */\nstatic _tickScope: WtfScopeFn = wtfCreateScope('ApplicationRef#tick()');\nprivate _bootstrapListeners: ((compRef: ComponentRef<any>) => void)[] = [];\nprivate _rootComponents: ComponentRef<any>[] = [];\nprivate _rootComponentTypes: Type<any>[] = [];\nprivate _views: InternalViewRef[] = [];\nprivate _runningTick: boolean = false;\nprivate _enforceNoNewChanges: boolean = false;\nprivate _isStable: Observable<boolean>;\nprivate _stable = true;\n/**\n * @param {?} _zone\n * @param {?} _console\n * @param {?} _injector\n * @param {?} _exceptionHandler\n * @param {?} _componentFactoryResolver\n * @param {?} _initStatus\n */\nconstructor(\nprivate _zone: NgZone,\nprivate _console: Console,\nprivate _injector: Injector,\nprivate _exceptionHandler: ErrorHandler,\nprivate _componentFactoryResolver: ComponentFactoryResolver,\nprivate _initStatus: ApplicationInitStatus) {\n    super();\n    this._enforceNoNewChanges = isDevMode();\n\n    this._zone.onMicrotaskEmpty.subscribe(\n        {next: () => { this._zone.run(() => { this.tick(); }); }});\n\n    const isCurrentlyStable = new Observable<boolean>((observer: Observer<boolean>) => {\n      this._stable = this._zone.isStable && !this._zone.hasPendingMacrotasks &&\n          !this._zone.hasPendingMicrotasks;\n      this._zone.runOutsideAngular(() => {\n        observer.next(this._stable);\n        observer.complete();\n      });\n    });\n\n    const isStable = new Observable<boolean>((observer: Observer<boolean>) => {\n      // Create the subscription to onStable outside the Angular Zone so that\n      // the callback is run outside the Angular Zone.\n      let stableSub: Subscription;\n      this._zone.runOutsideAngular(() => {\n        stableSub = this._zone.onStable.subscribe(() => {\n          NgZone.assertNotInAngularZone();\n\n          // Check whether there are no pending macro/micro tasks in the next tick\n          // to allow for NgZone to update the state.\n          scheduleMicroTask(() => {\n            if (!this._stable && !this._zone.hasPendingMacrotasks &&\n                !this._zone.hasPendingMicrotasks) {\n              this._stable = true;\n              observer.next(true);\n            }\n          });\n        });\n      });\n\n      const unstableSub: Subscription = this._zone.onUnstable.subscribe(() => {\n        NgZone.assertInAngularZone();\n        if (this._stable) {\n          this._stable = false;\n          this._zone.runOutsideAngular(() => { observer.next(false); });\n        }\n      });\n\n      return () => {\n        stableSub.unsubscribe();\n        unstableSub.unsubscribe();\n      };\n    });\n\n    this._isStable = merge(isCurrentlyStable, share.call(isStable));\n  }\n/**\n * @param {?} viewRef\n * @return {?}\n */\nattachView(viewRef: ViewRef): void {\n    const /** @type {?} */ view = ( /** @type {?} */((viewRef as InternalViewRef)));\n    this._views.push(view);\n    view.attachToAppRef(this);\n  }\n/**\n * @param {?} viewRef\n * @return {?}\n */\ndetachView(viewRef: ViewRef): void {\n    const /** @type {?} */ view = ( /** @type {?} */((viewRef as InternalViewRef)));\n    remove(this._views, view);\n    view.detachFromAppRef();\n  }\n/**\n * @template C\n * @param {?} componentOrFactory\n * @param {?=} rootSelectorOrNode\n * @return {?}\n */\nbootstrap<C>(componentOrFactory: ComponentFactory<C>|Type<C>, rootSelectorOrNode?: string|any):\n      ComponentRef<C> {\n    if (!this._initStatus.done) {\n      throw new Error(\n          'Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n    }\n    let /** @type {?} */ componentFactory: ComponentFactory<C>;\n    if (componentOrFactory instanceof ComponentFactory) {\n      componentFactory = componentOrFactory;\n    } else {\n      componentFactory = /** @type {?} */((\n          this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n    }\n    this._rootComponentTypes.push(componentFactory.componentType);\n\n    // Create a factory associated with the current module if it's not bound to some other\n    const /** @type {?} */ ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n        null :\n        this._injector.get(NgModuleRef);\n    const /** @type {?} */ selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n    const /** @type {?} */ compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n\n    compRef.onDestroy(() => { this._unloadComponent(compRef); });\n    const /** @type {?} */ testability = compRef.injector.get(Testability, null);\n    if (testability) {\n      compRef.injector.get(TestabilityRegistry)\n          .registerApplication(compRef.location.nativeElement, testability);\n    }\n\n    this._loadComponent(compRef);\n    if (isDevMode()) {\n      this._console.log(\n          `Angular is running in the development mode. Call enableProdMode() to enable the production mode.`);\n    }\n    return compRef;\n  }\n/**\n * @param {?} componentRef\n * @return {?}\n */\nprivate _loadComponent(componentRef: ComponentRef<any>): void {\n    this.attachView(componentRef.hostView);\n    this.tick();\n    this._rootComponents.push(componentRef);\n    // Get the listeners lazily to prevent DI cycles.\n    const /** @type {?} */ listeners =\n        this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n    listeners.forEach((listener) => listener(componentRef));\n  }\n/**\n * @param {?} componentRef\n * @return {?}\n */\nprivate _unloadComponent(componentRef: ComponentRef<any>): void {\n    this.detachView(componentRef.hostView);\n    remove(this._rootComponents, componentRef);\n  }\n/**\n * @return {?}\n */\ntick(): void {\n    if (this._runningTick) {\n      throw new Error('ApplicationRef.tick is called recursively');\n    }\n\n    const /** @type {?} */ scope = ApplicationRef_._tickScope();\n    try {\n      this._runningTick = true;\n      this._views.forEach((view) => view.detectChanges());\n      if (this._enforceNoNewChanges) {\n        this._views.forEach((view) => view.checkNoChanges());\n      }\n    } catch ( /** @type {?} */e) {\n      // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n      this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(e));\n    } finally {\n      this._runningTick = false;\n      wtfLeave(scope);\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    // TODO(alxhub): Dispose of the NgZone.\n    this._views.slice().forEach((view) => view.destroy());\n  }\n/**\n * @return {?}\n */\nget viewCount() { return this._views.length; }\n/**\n * @return {?}\n */\nget componentTypes(): Type<any>[] { return this._rootComponentTypes; }\n/**\n * @return {?}\n */\nget components(): ComponentRef<any>[] { return this._rootComponents; }\n/**\n * @return {?}\n */\nget isStable(): Observable<boolean> { return this._isStable; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgZone, },\n{type: Console, },\n{type: Injector, },\n{type: ErrorHandler, },\n{type: ComponentFactoryResolver, },\n{type: ApplicationInitStatus, },\n];\n}\n\nfunction ApplicationRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nApplicationRef_._tickScope;\n/** @type {?} */\nApplicationRef_.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nApplicationRef_.ctorParameters;\n/** @type {?} */\nApplicationRef_.prototype._bootstrapListeners;\n/** @type {?} */\nApplicationRef_.prototype._rootComponents;\n/** @type {?} */\nApplicationRef_.prototype._rootComponentTypes;\n/** @type {?} */\nApplicationRef_.prototype._views;\n/** @type {?} */\nApplicationRef_.prototype._runningTick;\n/** @type {?} */\nApplicationRef_.prototype._enforceNoNewChanges;\n/** @type {?} */\nApplicationRef_.prototype._isStable;\n/** @type {?} */\nApplicationRef_.prototype._stable;\n/** @type {?} */\nApplicationRef_.prototype._zone;\n/** @type {?} */\nApplicationRef_.prototype._console;\n/** @type {?} */\nApplicationRef_.prototype._injector;\n/** @type {?} */\nApplicationRef_.prototype._exceptionHandler;\n/** @type {?} */\nApplicationRef_.prototype._componentFactoryResolver;\n/** @type {?} */\nApplicationRef_.prototype._initStatus;\n}\n\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove<T>(list: T[], el: T): void {\n  const /** @type {?} */ index = list.indexOf(el);\n  if (index > -1) {\n    list.splice(index, 1);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Public API for Zone\nexport {NgZone} from './zone/ng_zone';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Observable} from 'rxjs/Observable';\n\nimport {EventEmitter} from '../event_emitter';\nimport {getSymbolIterator} from '../util';\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n * \n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n * \n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n * \n * Changes can be observed by subscribing to the changes `Observable`.\n * \n * NOTE: In the future this class will implement an `Observable` interface.\n * \n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...}) \n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nexport class QueryList<T>/* implements Iterable<T> */ {\nprivate _dirty = true;\nprivate _results: Array<T> = [];\nprivate _emitter = new EventEmitter();\n/**\n * @return {?}\n */\nget changes(): Observable<any> { return this._emitter; }\n/**\n * @return {?}\n */\nget length(): number { return this._results.length; }\n/**\n * @return {?}\n */\nget first(): T { return this._results[0]; }\n/**\n * @return {?}\n */\nget last(): T { return this._results[this.length - 1]; }\n/**\n * See\n * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n * @template U\n * @param {?} fn\n * @return {?}\n */\nmap<U>(fn: (item: T, index: number, array: T[]) => U): U[] { return this._results.map(fn); }\n/**\n * See\n * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n * @param {?} fn\n * @return {?}\n */\nfilter(fn: (item: T, index: number, array: T[]) => boolean): T[] {\n    return this._results.filter(fn);\n  }\n/**\n * See\n * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n * @param {?} fn\n * @return {?}\n */\nfind(fn: (item: T, index: number, array: T[]) => boolean): T|undefined {\n    return this._results.find(fn);\n  }\n/**\n * See\n * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n * @template U\n * @param {?} fn\n * @param {?} init\n * @return {?}\n */\nreduce<U>(fn: (prevValue: U, curValue: T, curIndex: number, array: T[]) => U, init: U): U {\n    return this._results.reduce(fn, init);\n  }\n/**\n * See\n * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n * @param {?} fn\n * @return {?}\n */\nforEach(fn: (item: T, index: number, array: T[]) => void): void { this._results.forEach(fn); }\n/**\n * See\n * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n * @param {?} fn\n * @return {?}\n */\nsome(fn: (value: T, index: number, array: T[]) => boolean): boolean {\n    return this._results.some(fn);\n  }\n/**\n * @return {?}\n */\ntoArray(): T[] { return this._results.slice(); }\n/**\n * @return {?}\n */\n[getSymbolIterator()](): Iterator<T> { return ( /** @type {?} */((this._results as any)))[getSymbolIterator()](); }\n/**\n * @return {?}\n */\ntoString(): string { return this._results.toString(); }\n/**\n * @param {?} res\n * @return {?}\n */\nreset(res: Array<T|any[]>): void {\n    this._results = flatten(res);\n    this._dirty = false;\n  }\n/**\n * @return {?}\n */\nnotifyOnChanges(): void { this._emitter.emit(this); }\n/**\n * internal\n * @return {?}\n */\nsetDirty() { this._dirty = true; }\n/**\n * internal\n * @return {?}\n */\nget dirty() { return this._dirty; }\n/**\n * internal\n * @return {?}\n */\ndestroy(): void {\n    this._emitter.complete();\n    this._emitter.unsubscribe();\n  }\n}\n\nfunction QueryList_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryList.prototype._dirty;\n/** @type {?} */\nQueryList.prototype._results;\n/** @type {?} */\nQueryList.prototype._emitter;\n}\n\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten<T>(list: Array<T|T[]>): T[] {\n  return list.reduce((flat: any[], item: T | T[]): T[] => {\n    const /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n    return ( /** @type {?} */((<T[]>flat))).concat(flatItem);\n  }, []);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n\nimport {Injectable, Optional} from '../di';\n\nimport {Compiler} from './compiler';\nimport {NgModuleFactory} from './ng_module_factory';\nimport {NgModuleFactoryLoader} from './ng_module_factory_loader';\n\nconst /** @type {?} */ _SEPARATOR = '#';\n\nconst /** @type {?} */ FACTORY_CLASS_SUFFIX = 'NgFactory';\ndeclare var System: any;\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class SystemJsNgModuleLoaderConfig {\n/**\n * Prefix to add when computing the name of the factory module for a given module name.\n */\nfactoryPathPrefix: string;\n/**\n * Suffix to add when computing the name of the factory module for a given module name.\n */\nfactoryPathSuffix: string;\n}\n\nfunction SystemJsNgModuleLoaderConfig_tsickle_Closure_declarations() {\n/**\n * Prefix to add when computing the name of the factory module for a given module name.\n * @type {?}\n */\nSystemJsNgModuleLoaderConfig.prototype.factoryPathPrefix;\n/**\n * Suffix to add when computing the name of the factory module for a given module name.\n * @type {?}\n */\nSystemJsNgModuleLoaderConfig.prototype.factoryPathSuffix;\n}\n\n\nconst /** @type {?} */ DEFAULT_CONFIG: SystemJsNgModuleLoaderConfig = {\n  factoryPathPrefix: '',\n  factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * \\@experimental\n */\nexport class SystemJsNgModuleLoader implements NgModuleFactoryLoader {\nprivate _config: SystemJsNgModuleLoaderConfig;\n/**\n * @param {?} _compiler\n * @param {?=} config\n */\nconstructor(private _compiler: Compiler,  config?: SystemJsNgModuleLoaderConfig) {\n    this._config = config || DEFAULT_CONFIG;\n  }\n/**\n * @param {?} path\n * @return {?}\n */\nload(path: string): Promise<NgModuleFactory<any>> {\n    const /** @type {?} */ offlineMode = this._compiler instanceof Compiler;\n    return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n  }\n/**\n * @param {?} path\n * @return {?}\n */\nprivate loadAndCompile(path: string): Promise<NgModuleFactory<any>> {\n    let [module, exportName] = path.split(_SEPARATOR);\n    if (exportName === undefined) {\n      exportName = 'default';\n    }\n\n    return System.import(module)\n        .then((module: any) => module[exportName])\n        .then((type: any) => checkNotEmpty(type, module, exportName))\n        .then((type: any) => this._compiler.compileModuleAsync(type));\n  }\n/**\n * @param {?} path\n * @return {?}\n */\nprivate loadFactory(path: string): Promise<NgModuleFactory<any>> {\n    let [module, exportName] = path.split(_SEPARATOR);\n    let /** @type {?} */ factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n    if (exportName === undefined) {\n      exportName = 'default';\n      factoryClassSuffix = '';\n    }\n\n    return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n        .then((module: any) => module[exportName + factoryClassSuffix])\n        .then((factory: any) => checkNotEmpty(factory, module, exportName));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Compiler, },\n{type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional }, ]},\n];\n}\n\nfunction SystemJsNgModuleLoader_tsickle_Closure_declarations() {\n/** @type {?} */\nSystemJsNgModuleLoader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSystemJsNgModuleLoader.ctorParameters;\n/** @type {?} */\nSystemJsNgModuleLoader.prototype._config;\n/** @type {?} */\nSystemJsNgModuleLoader.prototype._compiler;\n}\n\n/**\n * @param {?} value\n * @param {?} modulePath\n * @param {?} exportName\n * @return {?}\n */\nfunction checkNotEmpty(value: any, modulePath: string, exportName: string): any {\n  if (!value) {\n    throw new Error(`Cannot find '${exportName}' in '${modulePath}'`);\n  }\n  return value;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector} from '../di';\nimport {DebugContext} from '../view/index';\nexport class EventListener {\n/**\n * @param {?} name\n * @param {?} callback\n */\nconstructor(public name: string,\npublic callback: Function) {}\n}\n\nfunction EventListener_tsickle_Closure_declarations() {\n/** @type {?} */\nEventListener.prototype.name;\n/** @type {?} */\nEventListener.prototype.callback;\n}\n\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nexport class DebugNode {\n  nativeNode: any;\n  listeners: EventListener[];\n  parent: DebugElement|null;\n/**\n * @param {?} nativeNode\n * @param {?} parent\n * @param {?} _debugContext\n */\nconstructor(nativeNode: any, parent: DebugNode|null,\nprivate _debugContext: DebugContext) {\n    this.nativeNode = nativeNode;\n    if (parent && parent instanceof DebugElement) {\n      parent.addChild(this);\n    } else {\n      this.parent = null;\n    }\n    this.listeners = [];\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return this._debugContext.injector; }\n/**\n * @return {?}\n */\nget componentInstance(): any { return this._debugContext.component; }\n/**\n * @return {?}\n */\nget context(): any { return this._debugContext.context; }\n/**\n * @return {?}\n */\nget references(): {[key: string]: any} { return this._debugContext.references; }\n/**\n * @return {?}\n */\nget providerTokens(): any[] { return this._debugContext.providerTokens; }\n/**\n * @deprecated since v4\n * @return {?}\n */\nget source(): string { return 'Deprecated since v4'; }\n}\n\nfunction DebugNode_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugNode.prototype.nativeNode;\n/** @type {?} */\nDebugNode.prototype.listeners;\n/** @type {?} */\nDebugNode.prototype.parent;\n/** @type {?} */\nDebugNode.prototype._debugContext;\n}\n\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nexport class DebugElement extends DebugNode {\n  name: string;\n  properties: {[key: string]: any};\n  attributes: {[key: string]: string | null};\n  classes: {[key: string]: boolean};\n  styles: {[key: string]: string | null};\n  childNodes: DebugNode[];\n  nativeElement: any;\n/**\n * @param {?} nativeNode\n * @param {?} parent\n * @param {?} _debugContext\n */\nconstructor(nativeNode: any, parent: any, _debugContext: DebugContext) {\n    super(nativeNode, parent, _debugContext);\n    this.properties = {};\n    this.attributes = {};\n    this.classes = {};\n    this.styles = {};\n    this.childNodes = [];\n    this.nativeElement = nativeNode;\n  }\n/**\n * @param {?} child\n * @return {?}\n */\naddChild(child: DebugNode) {\n    if (child) {\n      this.childNodes.push(child);\n      child.parent = this;\n    }\n  }\n/**\n * @param {?} child\n * @return {?}\n */\nremoveChild(child: DebugNode) {\n    const /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n    if (childIndex !== -1) {\n      child.parent = null;\n      this.childNodes.splice(childIndex, 1);\n    }\n  }\n/**\n * @param {?} child\n * @param {?} newChildren\n * @return {?}\n */\ninsertChildrenAfter(child: DebugNode, newChildren: DebugNode[]) {\n    const /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n    if (siblingIndex !== -1) {\n      this.childNodes.splice(siblingIndex + 1, 0, ...newChildren);\n      newChildren.forEach(c => {\n        if (c.parent) {\n          c.parent.removeChild(c);\n        }\n        c.parent = this;\n      });\n    }\n  }\n/**\n * @param {?} refChild\n * @param {?} newChild\n * @return {?}\n */\ninsertBefore(refChild: DebugNode, newChild: DebugNode): void {\n    const /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n    if (refIndex === -1) {\n      this.addChild(newChild);\n    } else {\n      if (newChild.parent) {\n        newChild.parent.removeChild(newChild);\n      }\n      newChild.parent = this;\n      this.childNodes.splice(refIndex, 0, newChild);\n    }\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nquery(predicate: Predicate<DebugElement>): DebugElement {\n    const /** @type {?} */ results = this.queryAll(predicate);\n    return results[0] || null;\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nqueryAll(predicate: Predicate<DebugElement>): DebugElement[] {\n    const /** @type {?} */ matches: DebugElement[] = [];\n    _queryElementChildren(this, predicate, matches);\n    return matches;\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nqueryAllNodes(predicate: Predicate<DebugNode>): DebugNode[] {\n    const /** @type {?} */ matches: DebugNode[] = [];\n    _queryNodeChildren(this, predicate, matches);\n    return matches;\n  }\n/**\n * @return {?}\n */\nget children(): DebugElement[] {\n    return /** @type {?} */(( this.childNodes.filter((node) => node instanceof DebugElement) as DebugElement[]));\n  }\n/**\n * @param {?} eventName\n * @param {?} eventObj\n * @return {?}\n */\ntriggerEventHandler(eventName: string, eventObj: any) {\n    this.listeners.forEach((listener) => {\n      if (listener.name == eventName) {\n        listener.callback(eventObj);\n      }\n    });\n  }\n}\n\nfunction DebugElement_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugElement.prototype.name;\n/** @type {?} */\nDebugElement.prototype.properties;\n/** @type {?} */\nDebugElement.prototype.attributes;\n/** @type {?} */\nDebugElement.prototype.classes;\n/** @type {?} */\nDebugElement.prototype.styles;\n/** @type {?} */\nDebugElement.prototype.childNodes;\n/** @type {?} */\nDebugElement.prototype.nativeElement;\n}\n\n/**\n * \\@experimental\n * @param {?} debugEls\n * @return {?}\n */\nexport function asNativeElements(debugEls: DebugElement[]): any {\n  return debugEls.map((el) => el.nativeElement);\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(\n    element: DebugElement, predicate: Predicate<DebugElement>, matches: DebugElement[]) {\n  element.childNodes.forEach(node => {\n    if (node instanceof DebugElement) {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      _queryElementChildren(node, predicate, matches);\n    }\n  });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(\n    parentNode: DebugNode, predicate: Predicate<DebugNode>, matches: DebugNode[]) {\n  if (parentNode instanceof DebugElement) {\n    parentNode.childNodes.forEach(node => {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      if (node instanceof DebugElement) {\n        _queryNodeChildren(node, predicate, matches);\n      }\n    });\n  }\n}\n\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nconst /** @type {?} */ _nativeNodeToDebugNode = new Map<any, DebugNode>();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nexport function getDebugNode(nativeNode: any): DebugNode|null {\n  return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @return {?}\n */\nexport function getAllDebugNodes(): DebugNode[] {\n  return Array.from(_nativeNodeToDebugNode.values());\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function indexDebugNode(node: DebugNode) {\n  _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function removeDebugNodeFromIndex(node: DebugNode) {\n  _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * @experimental All debugging apis are currently experimental.\n */\nexport interface Predicate<T> { (value: T): boolean; }\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {getSymbolIterator, looseIdentical} from '../util';\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function devModeEqual(a: any, b: any): boolean {\n  const /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n  const /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n  if (isListLikeIterableA && isListLikeIterableB) {\n    return areIterablesEqual(a, b, devModeEqual);\n  } else {\n    const /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n    const /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n    if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n      return true;\n    } else {\n      return looseIdentical(a, b);\n    }\n  }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference\n * has not changed.\n * \n * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n * \n * Example:\n * \n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nexport class WrappedValue {\n/**\n * @param {?} wrapped\n */\nconstructor(public wrapped: any) {}\n/**\n * @param {?} value\n * @return {?}\n */\nstatic wrap(value: any): WrappedValue { return new WrappedValue(value); }\n}\n\nfunction WrappedValue_tsickle_Closure_declarations() {\n/** @type {?} */\nWrappedValue.prototype.wrapped;\n}\n\n/**\n * Helper class for unwrapping WrappedValue s\n */\nexport class ValueUnwrapper {\npublic hasWrappedValue = false;\n/**\n * @param {?} value\n * @return {?}\n */\nunwrap(value: any): any {\n    if (value instanceof WrappedValue) {\n      this.hasWrappedValue = true;\n      return value.wrapped;\n    }\n    return value;\n  }\n/**\n * @return {?}\n */\nreset() { this.hasWrappedValue = false; }\n}\n\nfunction ValueUnwrapper_tsickle_Closure_declarations() {\n/** @type {?} */\nValueUnwrapper.prototype.hasWrappedValue;\n}\n\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nexport class SimpleChange {\n/**\n * @param {?} previousValue\n * @param {?} currentValue\n * @param {?} firstChange\n */\nconstructor(public previousValue: any,\npublic currentValue: any,\npublic firstChange: boolean) {}\n/**\n * Check whether the new value is the first value assigned.\n * @return {?}\n */\nisFirstChange(): boolean { return this.firstChange; }\n}\n\nfunction SimpleChange_tsickle_Closure_declarations() {\n/** @type {?} */\nSimpleChange.prototype.previousValue;\n/** @type {?} */\nSimpleChange.prototype.currentValue;\n/** @type {?} */\nSimpleChange.prototype.firstChange;\n}\n\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isListLikeIterable(obj: any): boolean {\n  if (!isJsObject(obj)) return false;\n  return Array.isArray(obj) ||\n      (!(obj instanceof Map) &&      // JS Map are iterables but return entries as [k, v]\n       getSymbolIterator() in obj);  // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nexport function areIterablesEqual(\n    a: any, b: any, comparator: (a: any, b: any) => boolean): boolean {\n  const /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n  const /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n\n  while (true) {\n    const /** @type {?} */ item1 = iterator1.next();\n    const /** @type {?} */ item2 = iterator2.next();\n    if (item1.done && item2.done) return true;\n    if (item1.done || item2.done) return false;\n    if (!comparator(item1.value, item2.value)) return false;\n  }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nexport function iterateListLike(obj: any, fn: (p: any) => any) {\n  if (Array.isArray(obj)) {\n    for (let /** @type {?} */ i = 0; i < obj.length; i++) {\n      fn(obj[i]);\n    }\n  } else {\n    const /** @type {?} */ iterator = obj[getSymbolIterator()]();\n    let /** @type {?} */ item: any;\n    while (!((item = iterator.next()).done)) {\n      fn(item.value);\n    }\n  }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nexport function isJsObject(o: any): boolean {\n  return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {looseIdentical, stringify} from '../../util';\nimport {isListLikeIterable, iterateListLike} from '../change_detection_util';\nimport {ChangeDetectorRef} from '../change_detector_ref';\n\nimport {IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, NgIterable, TrackByFunction} from './iterable_differs';\nexport class DefaultIterableDifferFactory implements IterableDifferFactory {\nconstructor() {}\n/**\n * @param {?} obj\n * @return {?}\n */\nsupports(obj: Object|null|undefined): boolean { return isListLikeIterable(obj); }\n\n  create<V>(trackByFn?: TrackByFunction<V>): DefaultIterableDiffer<V>;\n/**\n * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n * @template V\n * @param {?=} cdRefOrTrackBy\n * @param {?=} trackByFn\n * @return {?}\n */\ncreate<V>(cdRefOrTrackBy?: ChangeDetectorRef|TrackByFunction<V>, trackByFn?: TrackByFunction<V>):\n      DefaultIterableDiffer<V> {\n    return new DefaultIterableDiffer<V>(trackByFn || /** @type {?} */(( <TrackByFunction<any>>cdRefOrTrackBy)));\n  }\n}\n\nconst /** @type {?} */ trackByIdentity = (index: number, item: any) => item;\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nexport class DefaultIterableDiffer<V> implements IterableDiffer<V>, IterableChanges<V> {\nprivate _length: number = 0;\nprivate _collection: NgIterable<V>|null = null;\nprivate _linkedRecords: _DuplicateMap<V>|null = null;\nprivate _unlinkedRecords: _DuplicateMap<V>|null = null;\nprivate _previousItHead: IterableChangeRecord_<V>|null = null;\nprivate _itHead: IterableChangeRecord_<V>|null = null;\nprivate _itTail: IterableChangeRecord_<V>|null = null;\nprivate _additionsHead: IterableChangeRecord_<V>|null = null;\nprivate _additionsTail: IterableChangeRecord_<V>|null = null;\nprivate _movesHead: IterableChangeRecord_<V>|null = null;\nprivate _movesTail: IterableChangeRecord_<V>|null = null;\nprivate _removalsHead: IterableChangeRecord_<V>|null = null;\nprivate _removalsTail: IterableChangeRecord_<V>|null = null;\nprivate _identityChangesHead: IterableChangeRecord_<V>|null = null;\nprivate _identityChangesTail: IterableChangeRecord_<V>|null = null;\nprivate _trackByFn: TrackByFunction<V>;\n/**\n * @param {?=} trackByFn\n */\nconstructor(trackByFn?: TrackByFunction<V>) { this._trackByFn = trackByFn || trackByIdentity; }\n/**\n * @return {?}\n */\nget collection() { return this._collection; }\n/**\n * @return {?}\n */\nget length(): number { return this._length; }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._itHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachOperation(\n      fn: (item: IterableChangeRecord<V>, previousIndex: number|null, currentIndex: number|null) =>\n          void) {\n    let /** @type {?} */ nextIt = this._itHead;\n    let /** @type {?} */ nextRemove = this._removalsHead;\n    let /** @type {?} */ addRemoveOffset = 0;\n    let /** @type {?} */ moveOffsets: number[]|null = null;\n    while (nextIt || nextRemove) {\n      // Figure out which is the next record to process\n      // Order: remove, add, move\n      const /** @type {?} */ record: IterableChangeRecord<V> = !nextRemove ||\n              nextIt && /** @type {?} */((\n                  nextIt.currentIndex)) <\n                      getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ? /** @type {?} */((\n          nextIt)) :\n          nextRemove;\n      const /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n      const /** @type {?} */ currentIndex = record.currentIndex;\n\n      // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n      if (record === nextRemove) {\n        addRemoveOffset--;\n        nextRemove = nextRemove._nextRemoved;\n      } else {\n        nextIt = /** @type {?} */(( nextIt))._next;\n        if (record.previousIndex == null) {\n          addRemoveOffset++;\n        } else {\n          // INVARIANT:  currentIndex < previousIndex\n          if (!moveOffsets) moveOffsets = [];\n          const /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n          const /** @type {?} */ localCurrentIndex = /** @type {?} */(( currentIndex)) - addRemoveOffset;\n          if (localMovePreviousIndex != localCurrentIndex) {\n            for (let /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n              const /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n              const /** @type {?} */ index = offset + i;\n              if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                moveOffsets[i] = offset + 1;\n              }\n            }\n            const /** @type {?} */ previousIndex = record.previousIndex;\n            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n          }\n        }\n      }\n\n      if (adjPreviousIndex !== currentIndex) {\n        fn(record, adjPreviousIndex, currentIndex);\n      }\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachPreviousItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachAddedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachMovedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._movesHead; record !== null; record = record._nextMoved) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachRemovedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachIdentityChange(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} collection\n * @return {?}\n */\ndiff(collection: NgIterable<V>): DefaultIterableDiffer<V>|null {\n    if (collection == null) collection = [];\n    if (!isListLikeIterable(collection)) {\n      throw new Error(\n          `Error trying to diff '${stringify(collection)}'. Only arrays and iterables are allowed`);\n    }\n\n    if (this.check(collection)) {\n      return this;\n    } else {\n      return null;\n    }\n  }\n/**\n * @return {?}\n */\nonDestroy() {}\n/**\n * @param {?} collection\n * @return {?}\n */\ncheck(collection: NgIterable<V>): boolean {\n    this._reset();\n\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null = this._itHead;\n    let /** @type {?} */ mayBeDirty: boolean = false;\n    let /** @type {?} */ index: number;\n    let /** @type {?} */ item: V;\n    let /** @type {?} */ itemTrackBy: any;\n    if (Array.isArray(collection)) {\n      this._length = collection.length;\n\n      for (let /** @type {?} */ index = 0; index < this._length; index++) {\n        item = collection[index];\n        itemTrackBy = this._trackByFn(index, item);\n        if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n          record = this._mismatch(record, item, itemTrackBy, index);\n          mayBeDirty = true;\n        } else {\n          if (mayBeDirty) {\n            // TODO(misko): can we limit this to duplicates only?\n            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n          }\n          if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n        }\n\n        record = record._next;\n      }\n    } else {\n      index = 0;\n      iterateListLike(collection, (item: V) => {\n        itemTrackBy = this._trackByFn(index, item);\n        if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n          record = this._mismatch(record, item, itemTrackBy, index);\n          mayBeDirty = true;\n        } else {\n          if (mayBeDirty) {\n            // TODO(misko): can we limit this to duplicates only?\n            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n          }\n          if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n        }\n        record = record._next;\n        index++;\n      });\n      this._length = index;\n    }\n\n    this._truncate(record);\n    this._collection = collection;\n    return this.isDirty;\n  }\n/**\n * @return {?}\n */\nget isDirty(): boolean {\n    return this._additionsHead !== null || this._movesHead !== null ||\n        this._removalsHead !== null || this._identityChangesHead !== null;\n  }\n/**\n * Reset the state of the change objects to show no changes. This means set previousKey to\n * currentKey, and clear all of the queues (additions, moves, removals).\n * Set the previousIndexes of moved and added items to their currentIndexes\n * Reset the list of additions, moves and removals\n * \n * \\@internal\n * @return {?}\n */\n_reset() {\n    if (this.isDirty) {\n      let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n      let /** @type {?} */ nextRecord: IterableChangeRecord_<V>|null;\n\n      for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n        record.previousIndex = record.currentIndex;\n      }\n      this._additionsHead = this._additionsTail = null;\n\n      for (record = this._movesHead; record !== null; record = nextRecord) {\n        record.previousIndex = record.currentIndex;\n        nextRecord = record._nextMoved;\n      }\n      this._movesHead = this._movesTail = null;\n      this._removalsHead = this._removalsTail = null;\n      this._identityChangesHead = this._identityChangesTail = null;\n\n      // todo(vicb) when assert gets supported\n      // assert(!this.isDirty);\n    }\n  }\n/**\n * This is the core function which handles differences between collections.\n * \n * - `record` is the record which we saw at this position last time. If null then it is a new\n *   item.\n * - `item` is the current item in the collection\n * - `index` is the position of the item in the collection\n * \n * \\@internal\n * @param {?} record\n * @param {?} item\n * @param {?} itemTrackBy\n * @param {?} index\n * @return {?}\n */\n_mismatch(record: IterableChangeRecord_<V>|null, item: V, itemTrackBy: any, index: number):\n      IterableChangeRecord_<V> {\n    // The previous record after which we will append the current one.\n    let /** @type {?} */ previousRecord: IterableChangeRecord_<V>|null;\n\n    if (record === null) {\n      previousRecord = this._itTail;\n    } else {\n      previousRecord = record._prev;\n      // Remove the record from the collection since we know it does not match the item.\n      this._remove(record);\n    }\n\n    // Attempt to see if we have seen the item before.\n    record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n    if (record !== null) {\n      // We have seen this before, we need to move it forward in the collection.\n      // But first we need to check if identity changed, so we can update in view if necessary\n      if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n\n      this._moveAfter(record, previousRecord, index);\n    } else {\n      // Never seen it, check evicted list.\n      record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n      if (record !== null) {\n        // It is an item which we have evicted earlier: reinsert it back into the list.\n        // But first we need to check if identity changed, so we can update in view if necessary\n        if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n\n        this._reinsertAfter(record, previousRecord, index);\n      } else {\n        // It is a new item: add it.\n        record =\n            this._addAfter(new IterableChangeRecord_<V>(item, itemTrackBy), previousRecord, index);\n      }\n    }\n    return record;\n  }\n/**\n * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n * \n * Use case: `[a, a]` => `[b, a, a]`\n * \n * If we did not have this check then the insertion of `b` would:\n *   1) evict first `a`\n *   2) insert `b` at `0` index.\n *   3) leave `a` at index `1` as is. <-- this is wrong!\n *   3) reinsert `a` at index 2. <-- this is wrong!\n * \n * The correct behavior is:\n *   1) evict first `a`\n *   2) insert `b` at `0` index.\n *   3) reinsert `a` at index 1.\n *   3) move `a` at from `1` to `2`.\n * \n * \n * Double check that we have not evicted a duplicate item. We need to check if the item type may\n * have already been removed:\n * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n * at the end.\n * \n * \\@internal\n * @param {?} record\n * @param {?} item\n * @param {?} itemTrackBy\n * @param {?} index\n * @return {?}\n */\n_verifyReinsertion(record: IterableChangeRecord_<V>, item: V, itemTrackBy: any, index: number):\n      IterableChangeRecord_<V> {\n    let /** @type {?} */ reinsertRecord: IterableChangeRecord_<V>|null =\n        this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n    if (reinsertRecord !== null) {\n      record = this._reinsertAfter(reinsertRecord, /** @type {?} */(( record._prev)), index);\n    } else if (record.currentIndex != index) {\n      record.currentIndex = index;\n      this._addToMoves(record, index);\n    }\n    return record;\n  }\n/**\n * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n * \n * - `record` The first excess {\\@link IterableChangeRecord_}.\n * \n * \\@internal\n * @param {?} record\n * @return {?}\n */\n_truncate(record: IterableChangeRecord_<V>|null) {\n    // Anything after that needs to be removed;\n    while (record !== null) {\n      const /** @type {?} */ nextRecord: IterableChangeRecord_<V>|null = record._next;\n      this._addToRemovals(this._unlink(record));\n      record = nextRecord;\n    }\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.clear();\n    }\n\n    if (this._additionsTail !== null) {\n      this._additionsTail._nextAdded = null;\n    }\n    if (this._movesTail !== null) {\n      this._movesTail._nextMoved = null;\n    }\n    if (this._itTail !== null) {\n      this._itTail._next = null;\n    }\n    if (this._removalsTail !== null) {\n      this._removalsTail._nextRemoved = null;\n    }\n    if (this._identityChangesTail !== null) {\n      this._identityChangesTail._nextIdentityChange = null;\n    }\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} prevRecord\n * @param {?} index\n * @return {?}\n */\n_reinsertAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.remove(record);\n    }\n    const /** @type {?} */ prev = record._prevRemoved;\n    const /** @type {?} */ next = record._nextRemoved;\n\n    if (prev === null) {\n      this._removalsHead = next;\n    } else {\n      prev._nextRemoved = next;\n    }\n    if (next === null) {\n      this._removalsTail = prev;\n    } else {\n      next._prevRemoved = prev;\n    }\n\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} prevRecord\n * @param {?} index\n * @return {?}\n */\n_moveAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    this._unlink(record);\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} prevRecord\n * @param {?} index\n * @return {?}\n */\n_addAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    this._insertAfter(record, prevRecord, index);\n\n    if (this._additionsTail === null) {\n      // todo(vicb)\n      // assert(this._additionsHead === null);\n      this._additionsTail = this._additionsHead = record;\n    } else {\n      // todo(vicb)\n      // assert(_additionsTail._nextAdded === null);\n      // assert(record._nextAdded === null);\n      this._additionsTail = this._additionsTail._nextAdded = record;\n    }\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} prevRecord\n * @param {?} index\n * @return {?}\n */\n_insertAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    // todo(vicb)\n    // assert(record != prevRecord);\n    // assert(record._next === null);\n    // assert(record._prev === null);\n\n    const /** @type {?} */ next: IterableChangeRecord_<V>|null =\n        prevRecord === null ? this._itHead : prevRecord._next;\n    // todo(vicb)\n    // assert(next != record);\n    // assert(prevRecord != record);\n    record._next = next;\n    record._prev = prevRecord;\n    if (next === null) {\n      this._itTail = record;\n    } else {\n      next._prev = record;\n    }\n    if (prevRecord === null) {\n      this._itHead = record;\n    } else {\n      prevRecord._next = record;\n    }\n\n    if (this._linkedRecords === null) {\n      this._linkedRecords = new _DuplicateMap<V>();\n    }\n    this._linkedRecords.put(record);\n\n    record.currentIndex = index;\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @return {?}\n */\n_remove(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    return this._addToRemovals(this._unlink(record));\n  }\n/**\n * \\@internal\n * @param {?} record\n * @return {?}\n */\n_unlink(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    if (this._linkedRecords !== null) {\n      this._linkedRecords.remove(record);\n    }\n\n    const /** @type {?} */ prev = record._prev;\n    const /** @type {?} */ next = record._next;\n\n    // todo(vicb)\n    // assert((record._prev = null) === null);\n    // assert((record._next = null) === null);\n\n    if (prev === null) {\n      this._itHead = next;\n    } else {\n      prev._next = next;\n    }\n    if (next === null) {\n      this._itTail = prev;\n    } else {\n      next._prev = prev;\n    }\n\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} toIndex\n * @return {?}\n */\n_addToMoves(record: IterableChangeRecord_<V>, toIndex: number): IterableChangeRecord_<V> {\n    // todo(vicb)\n    // assert(record._nextMoved === null);\n\n    if (record.previousIndex === toIndex) {\n      return record;\n    }\n\n    if (this._movesTail === null) {\n      // todo(vicb)\n      // assert(_movesHead === null);\n      this._movesTail = this._movesHead = record;\n    } else {\n      // todo(vicb)\n      // assert(_movesTail._nextMoved === null);\n      this._movesTail = this._movesTail._nextMoved = record;\n    }\n\n    return record;\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _addToRemovals(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    if (this._unlinkedRecords === null) {\n      this._unlinkedRecords = new _DuplicateMap<V>();\n    }\n    this._unlinkedRecords.put(record);\n    record.currentIndex = null;\n    record._nextRemoved = null;\n\n    if (this._removalsTail === null) {\n      // todo(vicb)\n      // assert(_removalsHead === null);\n      this._removalsTail = this._removalsHead = record;\n      record._prevRemoved = null;\n    } else {\n      // todo(vicb)\n      // assert(_removalsTail._nextRemoved === null);\n      // assert(record._nextRemoved === null);\n      record._prevRemoved = this._removalsTail;\n      this._removalsTail = this._removalsTail._nextRemoved = record;\n    }\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} item\n * @return {?}\n */\n_addIdentityChange(record: IterableChangeRecord_<V>, item: V) {\n    record.item = item;\n    if (this._identityChangesTail === null) {\n      this._identityChangesTail = this._identityChangesHead = record;\n    } else {\n      this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n    }\n    return record;\n  }\n/**\n * @return {?}\n */\ntoString(): string {\n    const /** @type {?} */ list: IterableChangeRecord_<V>[] = [];\n    this.forEachItem((record: IterableChangeRecord_<V>) => list.push(record));\n\n    const /** @type {?} */ previous: IterableChangeRecord_<V>[] = [];\n    this.forEachPreviousItem((record: IterableChangeRecord_<V>) => previous.push(record));\n\n    const /** @type {?} */ additions: IterableChangeRecord_<V>[] = [];\n    this.forEachAddedItem((record: IterableChangeRecord_<V>) => additions.push(record));\n\n    const /** @type {?} */ moves: IterableChangeRecord_<V>[] = [];\n    this.forEachMovedItem((record: IterableChangeRecord_<V>) => moves.push(record));\n\n    const /** @type {?} */ removals: IterableChangeRecord_<V>[] = [];\n    this.forEachRemovedItem((record: IterableChangeRecord_<V>) => removals.push(record));\n\n    const /** @type {?} */ identityChanges: IterableChangeRecord_<V>[] = [];\n    this.forEachIdentityChange((record: IterableChangeRecord_<V>) => identityChanges.push(record));\n\n    return 'collection: ' + list.join(', ') + '\\n' +\n        'previous: ' + previous.join(', ') + '\\n' +\n        'additions: ' + additions.join(', ') + '\\n' +\n        'moves: ' + moves.join(', ') + '\\n' +\n        'removals: ' + removals.join(', ') + '\\n' +\n        'identityChanges: ' + identityChanges.join(', ') + '\\n';\n  }\n}\n\nfunction DefaultIterableDiffer_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultIterableDiffer.prototype._length;\n/** @type {?} */\nDefaultIterableDiffer.prototype._collection;\n/** @type {?} */\nDefaultIterableDiffer.prototype._linkedRecords;\n/** @type {?} */\nDefaultIterableDiffer.prototype._unlinkedRecords;\n/** @type {?} */\nDefaultIterableDiffer.prototype._previousItHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._itHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._itTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._additionsHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._additionsTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._movesHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._movesTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._removalsHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._removalsTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._identityChangesHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._identityChangesTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._trackByFn;\n}\n\n/**\n * \\@stable\n */\nexport class IterableChangeRecord_<V> implements IterableChangeRecord<V> {\n  currentIndex: number|null = null;\n  previousIndex: number|null = null;\n/**\n * \\@internal\n */\n_nextPrevious: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_prev: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_next: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_prevDup: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_nextDup: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_prevRemoved: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_nextRemoved: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_nextAdded: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_nextMoved: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_nextIdentityChange: IterableChangeRecord_<V>|null = null;\n/**\n * @param {?} item\n * @param {?} trackById\n */\nconstructor(public item: V,\npublic trackById: any) {}\n/**\n * @return {?}\n */\ntoString(): string {\n    return this.previousIndex === this.currentIndex ? stringify(this.item) :\n                                                      stringify(this.item) + '[' +\n            stringify(this.previousIndex) + '->' + stringify(this.currentIndex) + ']';\n  }\n}\n\nfunction IterableChangeRecord__tsickle_Closure_declarations() {\n/** @type {?} */\nIterableChangeRecord_.prototype.currentIndex;\n/** @type {?} */\nIterableChangeRecord_.prototype.previousIndex;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextPrevious;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._prev;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._next;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._prevDup;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextDup;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._prevRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextAdded;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextMoved;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextIdentityChange;\n/** @type {?} */\nIterableChangeRecord_.prototype.item;\n/** @type {?} */\nIterableChangeRecord_.prototype.trackById;\n}\n\nclass _DuplicateItemRecordList<V> {\n/**\n * \\@internal\n */\n_head: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_tail: IterableChangeRecord_<V>|null = null;\n/**\n * Append the record to the list of duplicates.\n * \n * Note: by design all records in the list of duplicates hold the same value in record.item.\n * @param {?} record\n * @return {?}\n */\nadd(record: IterableChangeRecord_<V>): void {\n    if (this._head === null) {\n      this._head = this._tail = record;\n      record._nextDup = null;\n      record._prevDup = null;\n    } else { /** @type {?} */((\n      // todo(vicb)\n      // assert(record.item ==  _head.item ||\n      //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n      this._tail))._nextDup = record;\n      record._prevDup = this._tail;\n      record._nextDup = null;\n      this._tail = record;\n    }\n  }\n/**\n * @param {?} trackById\n * @param {?} atOrAfterIndex\n * @return {?}\n */\nget(trackById: any, atOrAfterIndex: number|null): IterableChangeRecord_<V>|null {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._head; record !== null; record = record._nextDup) {\n      if ((atOrAfterIndex === null || atOrAfterIndex <= /** @type {?} */(( record.currentIndex))) &&\n          looseIdentical(record.trackById, trackById)) {\n        return record;\n      }\n    }\n    return null;\n  }\n/**\n * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n * \n * Returns whether the list of duplicates is empty.\n * @param {?} record\n * @return {?}\n */\nremove(record: IterableChangeRecord_<V>): boolean {\n    // todo(vicb)\n    // assert(() {\n    //  // verify that the record being removed is in the list.\n    //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n    //    if (identical(cursor, record)) return true;\n    //  }\n    //  return false;\n    //});\n\n    const /** @type {?} */ prev: IterableChangeRecord_<V>|null = record._prevDup;\n    const /** @type {?} */ next: IterableChangeRecord_<V>|null = record._nextDup;\n    if (prev === null) {\n      this._head = next;\n    } else {\n      prev._nextDup = next;\n    }\n    if (next === null) {\n      this._tail = prev;\n    } else {\n      next._prevDup = prev;\n    }\n    return this._head === null;\n  }\n}\n\nfunction _DuplicateItemRecordList_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\n_DuplicateItemRecordList.prototype._head;\n/**\n * \\@internal\n * @type {?}\n */\n_DuplicateItemRecordList.prototype._tail;\n}\n\nclass _DuplicateMap<V> {\n  map = new Map<any, _DuplicateItemRecordList<V>>();\n/**\n * @param {?} record\n * @return {?}\n */\nput(record: IterableChangeRecord_<V>) {\n    const /** @type {?} */ key = record.trackById;\n\n    let /** @type {?} */ duplicates = this.map.get(key);\n    if (!duplicates) {\n      duplicates = new _DuplicateItemRecordList<V>();\n      this.map.set(key, duplicates);\n    }\n    duplicates.add(record);\n  }\n/**\n * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n * \n * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n * have any more `a`s needs to return the second `a`.\n * @param {?} trackById\n * @param {?} atOrAfterIndex\n * @return {?}\n */\nget(trackById: any, atOrAfterIndex: number|null): IterableChangeRecord_<V>|null {\n    const /** @type {?} */ key = trackById;\n    const /** @type {?} */ recordList = this.map.get(key);\n    return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n  }\n/**\n * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n * \n * The list of duplicates also is removed from the map if it gets empty.\n * @param {?} record\n * @return {?}\n */\nremove(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    const /** @type {?} */ key = record.trackById;\n    const /** @type {?} */ recordList: _DuplicateItemRecordList<V> = /** @type {?} */(( this.map.get(key)));\n    // Remove the list of duplicates when it gets empty\n    if (recordList.remove(record)) {\n      this.map.delete(key);\n    }\n    return record;\n  }\n/**\n * @return {?}\n */\nget isEmpty(): boolean { return this.map.size === 0; }\n/**\n * @return {?}\n */\nclear() { this.map.clear(); }\n/**\n * @return {?}\n */\ntoString(): string { return '_DuplicateMap(' + stringify(this.map) + ')'; }\n}\n\nfunction _DuplicateMap_tsickle_Closure_declarations() {\n/** @type {?} */\n_DuplicateMap.prototype.map;\n}\n\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(\n    item: any, addRemoveOffset: number, moveOffsets: number[] | null): number {\n  const /** @type {?} */ previousIndex = item.previousIndex;\n  if (previousIndex === null) return previousIndex;\n  let /** @type {?} */ moveOffset = 0;\n  if (moveOffsets && previousIndex < moveOffsets.length) {\n    moveOffset = moveOffsets[previousIndex];\n  }\n  return previousIndex + addRemoveOffset + moveOffset;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {looseIdentical, stringify} from '../../util';\nimport {isJsObject} from '../change_detection_util';\nimport {ChangeDetectorRef} from '../change_detector_ref';\nimport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory} from './keyvalue_differs';\nexport class DefaultKeyValueDifferFactory<K, V> implements KeyValueDifferFactory {\nconstructor() {}\n/**\n * @param {?} obj\n * @return {?}\n */\nsupports(obj: any): boolean { return obj instanceof Map || isJsObject(obj); }\n\n  create<K, V>(): DefaultKeyValueDiffer<K, V>;\n/**\n * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n * @template K, V\n * @param {?=} cd\n * @return {?}\n */\ncreate<K, V>(cd?: ChangeDetectorRef): KeyValueDiffer<K, V> {\n    return new DefaultKeyValueDiffer<K, V>();\n  }\n}\nexport class DefaultKeyValueDiffer<K, V> implements KeyValueDiffer<K, V>, KeyValueChanges<K, V> {\nprivate _records = new Map<K, KeyValueChangeRecord_<K, V>>();\nprivate _mapHead: KeyValueChangeRecord_<K, V>|null = null;\nprivate _appendAfter: KeyValueChangeRecord_<K, V>|null = null;\nprivate _previousMapHead: KeyValueChangeRecord_<K, V>|null = null;\nprivate _changesHead: KeyValueChangeRecord_<K, V>|null = null;\nprivate _changesTail: KeyValueChangeRecord_<K, V>|null = null;\nprivate _additionsHead: KeyValueChangeRecord_<K, V>|null = null;\nprivate _additionsTail: KeyValueChangeRecord_<K, V>|null = null;\nprivate _removalsHead: KeyValueChangeRecord_<K, V>|null = null;\nprivate _removalsTail: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * @return {?}\n */\nget isDirty(): boolean {\n    return this._additionsHead !== null || this._changesHead !== null ||\n        this._removalsHead !== null;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._mapHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachPreviousItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachChangedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._changesHead; record !== null; record = record._nextChanged) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachAddedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachRemovedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n/**\n * @param {?=} map\n * @return {?}\n */\ndiff(map?: Map<any, any>|{[k: string]: any}|null): any {\n    if (!map) {\n      map = new Map();\n    } else if (!(map instanceof Map || isJsObject(map))) {\n      throw new Error(\n          `Error trying to diff '${stringify(map)}'. Only maps and objects are allowed`);\n    }\n\n    return this.check(map) ? this : null;\n  }\n/**\n * @return {?}\n */\nonDestroy() {}\n/**\n * Check the current state of the map vs the previous.\n * The algorithm is optimised for when the keys do no change.\n * @param {?} map\n * @return {?}\n */\ncheck(map: Map<any, any>|{[k: string]: any}): boolean {\n    this._reset();\n\n    let /** @type {?} */ insertBefore = this._mapHead;\n    this._appendAfter = null;\n\n    this._forEach(map, (value: any, key: any) => {\n      if (insertBefore && insertBefore.key === key) {\n        this._maybeAddToChanges(insertBefore, value);\n        this._appendAfter = insertBefore;\n        insertBefore = insertBefore._next;\n      } else {\n        const /** @type {?} */ record = this._getOrCreateRecordForKey(key, value);\n        insertBefore = this._insertBeforeOrAppend(insertBefore, record);\n      }\n    });\n\n    // Items remaining at the end of the list have been deleted\n    if (insertBefore) {\n      if (insertBefore._prev) {\n        insertBefore._prev._next = null;\n      }\n\n      this._removalsHead = insertBefore;\n\n      for (let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null = insertBefore; record !== null;\n           record = record._nextRemoved) {\n        if (record === this._mapHead) {\n          this._mapHead = null;\n        }\n        this._records.delete(record.key);\n        record._nextRemoved = record._next;\n        record.previousValue = record.currentValue;\n        record.currentValue = null;\n        record._prev = null;\n        record._next = null;\n      }\n    }\n\n    // Make sure tails have no next records from previous runs\n    if (this._changesTail) this._changesTail._nextChanged = null;\n    if (this._additionsTail) this._additionsTail._nextAdded = null;\n\n    return this.isDirty;\n  }\n/**\n * Inserts a record before `before` or append at the end of the list when `before` is null.\n * \n * Notes:\n * - This method appends at `this._appendAfter`,\n * - This method updates `this._appendAfter`,\n * - The return value is the new value for the insertion pointer.\n * @param {?} before\n * @param {?} record\n * @return {?}\n */\nprivate _insertBeforeOrAppend(\n      before: KeyValueChangeRecord_<K, V>|null,\n      record: KeyValueChangeRecord_<K, V>): KeyValueChangeRecord_<K, V>|null {\n    if (before) {\n      const /** @type {?} */ prev = before._prev;\n      record._next = before;\n      record._prev = prev;\n      before._prev = record;\n      if (prev) {\n        prev._next = record;\n      }\n      if (before === this._mapHead) {\n        this._mapHead = record;\n      }\n\n      this._appendAfter = before;\n      return before;\n    }\n\n    if (this._appendAfter) {\n      this._appendAfter._next = record;\n      record._prev = this._appendAfter;\n    } else {\n      this._mapHead = record;\n    }\n\n    this._appendAfter = record;\n    return null;\n  }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nprivate _getOrCreateRecordForKey(key: K, value: V): KeyValueChangeRecord_<K, V> {\n    if (this._records.has(key)) {\n      const /** @type {?} */ record = /** @type {?} */(( this._records.get(key)));\n      this._maybeAddToChanges(record, value);\n      const /** @type {?} */ prev = record._prev;\n      const /** @type {?} */ next = record._next;\n      if (prev) {\n        prev._next = next;\n      }\n      if (next) {\n        next._prev = prev;\n      }\n      record._next = null;\n      record._prev = null;\n\n      return record;\n    }\n\n    const /** @type {?} */ record = new KeyValueChangeRecord_<K, V>(key);\n    this._records.set(key, record);\n    record.currentValue = value;\n    this._addToAdditions(record);\n    return record;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_reset() {\n    if (this.isDirty) {\n      let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null;\n      // let `_previousMapHead` contain the state of the map before the changes\n      this._previousMapHead = this._mapHead;\n      for (record = this._previousMapHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      // Update `record.previousValue` with the value of the item before the changes\n      // We need to update all changed items (that's those which have been added and changed)\n      for (record = this._changesHead; record !== null; record = record._nextChanged) {\n        record.previousValue = record.currentValue;\n      }\n      for (record = this._additionsHead; record != null; record = record._nextAdded) {\n        record.previousValue = record.currentValue;\n      }\n\n      this._changesHead = this._changesTail = null;\n      this._additionsHead = this._additionsTail = null;\n      this._removalsHead = null;\n    }\n  }\n/**\n * @param {?} record\n * @param {?} newValue\n * @return {?}\n */\nprivate _maybeAddToChanges(record: KeyValueChangeRecord_<K, V>, newValue: any): void {\n    if (!looseIdentical(newValue, record.currentValue)) {\n      record.previousValue = record.currentValue;\n      record.currentValue = newValue;\n      this._addToChanges(record);\n    }\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _addToAdditions(record: KeyValueChangeRecord_<K, V>) {\n    if (this._additionsHead === null) {\n      this._additionsHead = this._additionsTail = record;\n    } else { /** @type {?} */((\n      this._additionsTail))._nextAdded = record;\n      this._additionsTail = record;\n    }\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _addToChanges(record: KeyValueChangeRecord_<K, V>) {\n    if (this._changesHead === null) {\n      this._changesHead = this._changesTail = record;\n    } else { /** @type {?} */((\n      this._changesTail))._nextChanged = record;\n      this._changesTail = record;\n    }\n  }\n/**\n * \\@internal\n * @template K, V\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nprivate _forEach<K, V>(obj: Map<K, V>|{[k: string]: V}, fn: (v: V, k: any) => void) {\n    if (obj instanceof Map) {\n      obj.forEach(fn);\n    } else {\n      Object.keys(obj).forEach(k => fn(obj[k], k));\n    }\n  }\n}\n\nfunction DefaultKeyValueDiffer_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._records;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._mapHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._appendAfter;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._previousMapHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._changesHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._changesTail;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._additionsHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._additionsTail;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._removalsHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._removalsTail;\n}\n\n/**\n * \\@stable\n */\nclass KeyValueChangeRecord_<K, V> implements KeyValueChangeRecord<K, V> {\n  previousValue: V|null = null;\n  currentValue: V|null = null;\n/**\n * \\@internal\n */\n_nextPrevious: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * \\@internal\n */\n_next: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * \\@internal\n */\n_prev: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * \\@internal\n */\n_nextAdded: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * \\@internal\n */\n_nextRemoved: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * \\@internal\n */\n_nextChanged: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * @param {?} key\n */\nconstructor(public key: K) {}\n}\n\nfunction KeyValueChangeRecord__tsickle_Closure_declarations() {\n/** @type {?} */\nKeyValueChangeRecord_.prototype.previousValue;\n/** @type {?} */\nKeyValueChangeRecord_.prototype.currentValue;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextPrevious;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._next;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._prev;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextAdded;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextChanged;\n/** @type {?} */\nKeyValueChangeRecord_.prototype.key;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {PlatformRef, PlatformRef_, createPlatformFactory} from './application_ref';\nimport {PLATFORM_ID} from './application_tokens';\nimport {Console} from './console';\nimport {Provider} from './di';\nimport {Reflector, reflector} from './reflection/reflection';\nimport {TestabilityRegistry} from './testability/testability';\n/**\n * @return {?}\n */\nfunction _reflector(): Reflector {\n  return reflector;\n}\n\nconst /** @type {?} */ _CORE_PLATFORM_PROVIDERS: Provider[] = [\n  // Set a default platform name for platforms that don't set it explicitly.\n  {provide: PLATFORM_ID, useValue: 'unknown'},\n  PlatformRef_,\n  {provide: PlatformRef, useExisting: PlatformRef_},\n  {provide: Reflector, useFactory: _reflector, deps: []},\n  TestabilityRegistry,\n  Console,\n];\n/**\n * This platform has to be included in any other platform\n * \n * \\@experimental\n */\nexport const platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ApplicationInitStatus} from './application_init';\nimport {ApplicationRef, ApplicationRef_} from './application_ref';\nimport {APP_ID_RANDOM_PROVIDER} from './application_tokens';\nimport {IterableDiffers, KeyValueDiffers, defaultIterableDiffers, defaultKeyValueDiffers} from './change_detection/change_detection';\nimport {Inject, Optional, SkipSelf} from './di/metadata';\nimport {LOCALE_ID} from './i18n/tokens';\nimport {Compiler} from './linker/compiler';\nimport {NgModule} from './metadata';\n/**\n * @return {?}\n */\nexport function _iterableDiffersFactory() {\n  return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nexport function _keyValueDiffersFactory() {\n  return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nexport function _localeFactory(locale?: string): string {\n  return locale || 'en-US';\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n * \n * \\@experimental\n */\nexport class ApplicationModule {\n/**\n * @param {?} appRef\n */\nconstructor(appRef: ApplicationRef) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    ApplicationRef_,\n    {provide: ApplicationRef, useExisting: ApplicationRef_},\n    ApplicationInitStatus,\n    Compiler,\n    APP_ID_RANDOM_PROVIDER,\n    {provide: IterableDiffers, useFactory: _iterableDiffersFactory},\n    {provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory},\n    {\n      provide: LOCALE_ID,\n      useFactory: _localeFactory,\n      deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n    },\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ApplicationRef, },\n];\n}\n\nfunction ApplicationModule_tsickle_Closure_declarations() {\n/** @type {?} */\nApplicationModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nApplicationModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector} from '../di';\nimport {ErrorHandler} from '../error_handler';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {QueryList} from '../linker/query_list';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {Renderer2, RendererFactory2, RendererType2} from '../render/api';\nimport {Sanitizer, SecurityContext} from '../security';\nimport {Type} from '../type';\n\n// -------------------------------------\n// Defs\n// -------------------------------------\n\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n */\nexport interface DefinitionFactory<D extends Definition<any>> { (logger: NodeLogger): D; }\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n */\nexport interface NodeLogger { (): () => void; }\n\nexport interface Definition<DF extends DefinitionFactory<any>> { factory: DF|null; }\n\nexport interface NgModuleDefinition extends Definition<NgModuleDefinitionFactory> {\n  providers: NgModuleProviderDef[];\n  providersByKey: {[tokenKey: string]: NgModuleProviderDef};\n}\n\nexport interface NgModuleDefinitionFactory extends DefinitionFactory<NgModuleDefinition> {}\n\nexport interface ViewDefinition extends Definition<ViewDefinitionFactory> {\n  flags: ViewFlags;\n  updateDirectives: ViewUpdateFn;\n  updateRenderer: ViewUpdateFn;\n  handleEvent: ViewHandleEventFn;\n  /**\n   * Order: Depth first.\n   * Especially providers are before elements / anchors.\n   */\n  nodes: NodeDef[];\n  /** aggregated NodeFlags for all nodes **/\n  nodeFlags: NodeFlags;\n  rootNodeFlags: NodeFlags;\n  lastRenderRootNode: NodeDef|null;\n  bindingCount: number;\n  outputCount: number;\n  /**\n   * Binary or of all query ids that are matched by one of the nodes.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  nodeMatchedQueries: number;\n}\n\nexport interface ViewDefinitionFactory extends DefinitionFactory<ViewDefinition> {}\n\n\nexport interface ViewUpdateFn { (check: NodeCheckFn, view: ViewData): void; }\n\n// helper functions to create an overloaded function type.\nexport interface NodeCheckFn {\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Dynamic, values: any[]): any;\n\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Inline, v0?: any, v1?: any, v2?: any,\n   v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any;\n}\n\nexport const enum ArgumentType {Inline, Dynamic}\n\nexport interface ViewHandleEventFn {\n  (view: ViewData, nodeIndex: number, eventName: string, event: any): boolean;\n}\n\n/**\n * Bitmask for ViewDefinition.flags.\n */\nexport const enum ViewFlags {\n  None = 0,\n  OnPush = 1 << 1,\n}\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n */\nexport interface NodeDef {\n  flags: NodeFlags;\n  // Index of the node in view data and view definition (those are the same)\n  nodeIndex: number;\n  // Index of the node in the check functions\n  // Differ from nodeIndex when nodes are added or removed at runtime (ie after compilation)\n  checkIndex: number;\n  parent: NodeDef|null;\n  renderParent: NodeDef|null;\n  /** this is checked against NgContentDef.index to find matched nodes */\n  ngContentIndex: number|null;\n  /** number of transitive children */\n  childCount: number;\n  /** aggregated NodeFlags for all transitive children (does not include self) **/\n  childFlags: NodeFlags;\n  /** aggregated NodeFlags for all direct children (does not include self) **/\n  directChildFlags: NodeFlags;\n\n  bindingIndex: number;\n  bindings: BindingDef[];\n  bindingFlags: BindingFlags;\n  outputIndex: number;\n  outputs: OutputDef[];\n  /**\n   * references that the user placed on the element\n   */\n  references: {[refId: string]: QueryValueType};\n  /**\n   * ids and value types of all queries that are matched by this node.\n   */\n  matchedQueries: {[queryId: number]: QueryValueType};\n  /** Binary or of all matched query ids of this node. */\n  matchedQueryIds: number;\n  /**\n   * Binary or of all query ids that are matched by one of the children.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  childMatchedQueries: number;\n  element: ElementDef|null;\n  provider: ProviderDef|null;\n  text: TextDef|null;\n  query: QueryDef|null;\n  ngContent: NgContentDef|null;\n}\n\n/**\n * Bitmask for NodeDef.flags.\n * Naming convention:\n * - `Type...`: flags that are mutually exclusive\n * - `Cat...`: union of multiple `Type...` (short for category).\n */\nexport const enum NodeFlags {\n  None = 0,\n  TypeElement = 1 << 0,\n  TypeText = 1 << 1,\n  ProjectedTemplate = 1 << 2,\n  CatRenderNode = TypeElement | TypeText,\n  TypeNgContent = 1 << 3,\n  TypePipe = 1 << 4,\n  TypePureArray = 1 << 5,\n  TypePureObject = 1 << 6,\n  TypePurePipe = 1 << 7,\n  CatPureExpression = TypePureArray | TypePureObject | TypePurePipe,\n  TypeValueProvider = 1 << 8,\n  TypeClassProvider = 1 << 9,\n  TypeFactoryProvider = 1 << 10,\n  TypeUseExistingProvider = 1 << 11,\n  LazyProvider = 1 << 12,\n  PrivateProvider = 1 << 13,\n  TypeDirective = 1 << 14,\n  Component = 1 << 15,\n  CatProviderNoDirective =\n      TypeValueProvider | TypeClassProvider | TypeFactoryProvider | TypeUseExistingProvider,\n  CatProvider = CatProviderNoDirective | TypeDirective,\n  OnInit = 1 << 16,\n  OnDestroy = 1 << 17,\n  DoCheck = 1 << 18,\n  OnChanges = 1 << 19,\n  AfterContentInit = 1 << 20,\n  AfterContentChecked = 1 << 21,\n  AfterViewInit = 1 << 22,\n  AfterViewChecked = 1 << 23,\n  EmbeddedViews = 1 << 24,\n  ComponentView = 1 << 25,\n  TypeContentQuery = 1 << 26,\n  TypeViewQuery = 1 << 27,\n  StaticQuery = 1 << 28,\n  DynamicQuery = 1 << 29,\n  CatQuery = TypeContentQuery | TypeViewQuery,\n\n  // mutually exclusive values...\n  Types = CatRenderNode | TypeNgContent | TypePipe | CatPureExpression | CatProvider | CatQuery\n}\n\nexport interface BindingDef {\n  flags: BindingFlags;\n  ns: string|null;\n  name: string|null;\n  nonMinifiedName: string|null;\n  securityContext: SecurityContext|null;\n  suffix: string|null;\n}\n\nexport const enum BindingFlags {\n  TypeElementAttribute = 1 << 0,\n  TypeElementClass = 1 << 1,\n  TypeElementStyle = 1 << 2,\n  TypeProperty = 1 << 3,\n  SyntheticProperty = 1 << 4,\n  SyntheticHostProperty = 1 << 5,\n  CatSyntheticProperty = SyntheticProperty | SyntheticHostProperty,\n\n  // mutually exclusive values...\n  Types = TypeElementAttribute | TypeElementClass | TypeElementStyle | TypeProperty\n}\n\nexport interface OutputDef {\n  type: OutputType;\n  target: 'window'|'document'|'body'|'component'|null;\n  eventName: string;\n  propName: string|null;\n}\n\nexport const enum OutputType {ElementOutput, DirectiveOutput}\n\nexport const enum QueryValueType {\n  ElementRef,\n  RenderElement,\n  TemplateRef,\n  ViewContainerRef,\n  Provider\n}\n\nexport interface ElementDef {\n  // set to null for `<ng-container>`\n  name: string|null;\n  ns: string|null;\n  /** ns, name, value */\n  attrs: [string, string, string][]|null;\n  template: ViewDefinition|null;\n  componentProvider: NodeDef|null;\n  componentRendererType: RendererType2|null;\n  // closure to allow recursive components\n  componentView: ViewDefinitionFactory|null;\n  /**\n   * visible public providers for DI in the view,\n   * as see from this element. This does not include private providers.\n   */\n  publicProviders: {[tokenKey: string]: NodeDef}|null;\n  /**\n   * same as visiblePublicProviders, but also includes private providers\n   * that are located on this element.\n   */\n  allProviders: {[tokenKey: string]: NodeDef}|null;\n  handleEvent: ElementHandleEventFn|null;\n}\n\nexport interface ElementHandleEventFn { (view: ViewData, eventName: string, event: any): boolean; }\n\nexport interface ProviderDef {\n  token: any;\n  value: any;\n  deps: DepDef[];\n}\n\nexport interface NgModuleProviderDef {\n  flags: NodeFlags;\n  index: number;\n  token: any;\n  value: any;\n  deps: DepDef[];\n}\n\nexport interface DepDef {\n  flags: DepFlags;\n  token: any;\n  tokenKey: string;\n}\n\n/**\n * Bitmask for DI flags\n */\nexport const enum DepFlags {\n  None = 0,\n  SkipSelf = 1 << 0,\n  Optional = 1 << 1,\n  Value = 2 << 2,\n}\n\nexport interface TextDef { prefix: string; }\n\nexport interface QueryDef {\n  id: number;\n  // variant of the id that can be used to check against NodeDef.matchedQueryIds, ...\n  filterId: number;\n  bindings: QueryBindingDef[];\n}\n\nexport interface QueryBindingDef {\n  propName: string;\n  bindingType: QueryBindingType;\n}\n\nexport const enum QueryBindingType {First, All}\n\nexport interface NgContentDef {\n  /**\n   * this index is checked against NodeDef.ngContentIndex to find the nodes\n   * that are matched by this ng-content.\n   * Note that a NodeDef with an ng-content can be reprojected, i.e.\n   * have a ngContentIndex on its own.\n   */\n  index: number;\n}\n\n// -------------------------------------\n// Data\n// -------------------------------------\n\nexport interface NgModuleData extends Injector, NgModuleRef<any> {\n  // Note: we are using the prefix _ as NgModuleData is an NgModuleRef and therefore directly\n  // exposed to the user.\n  _def: NgModuleDefinition;\n  _parent: Injector;\n  _providers: any[];\n}\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ViewData {\n  def: ViewDefinition;\n  root: RootData;\n  renderer: Renderer2;\n  // index of component provider / anchor.\n  parentNodeDef: NodeDef|null;\n  parent: ViewData|null;\n  viewContainerParent: ViewData|null;\n  component: any;\n  context: any;\n  // Attention: Never loop over this, as this will\n  // create a polymorphic usage site.\n  // Instead: Always loop over ViewDefinition.nodes,\n  // and call the right accessor (e.g. `elementData`) based on\n  // the NodeType.\n  nodes: {[key: number]: NodeData};\n  state: ViewState;\n  oldValues: any[];\n  disposables: DisposableFn[]|null;\n}\n\n/**\n * Bitmask of states\n */\nexport const enum ViewState {\n  BeforeFirstCheck = 1 << 0,\n  FirstCheck = 1 << 1,\n  Attached = 1 << 2,\n  ChecksEnabled = 1 << 3,\n  IsProjectedView = 1 << 4,\n  CheckProjectedView = 1 << 5,\n  CheckProjectedViews = 1 << 6,\n  Destroyed = 1 << 7,\n\n  CatDetectChanges = Attached | ChecksEnabled,\n  CatInit = BeforeFirstCheck | CatDetectChanges\n}\n\nexport interface DisposableFn { (): void; }\n/**\n * Node instance data.\n * \n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n * \n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\nexport class NodeData {\nprivate __brand: any; }\n\nfunction NodeData_tsickle_Closure_declarations() {\n/** @type {?} */\nNodeData.prototype.__brand;\n}\n\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface TextData { renderText: any; }\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asTextData(view: ViewData, index: number): TextData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ElementData {\n  renderElement: any;\n  componentView: ViewData;\n  viewContainer: ViewContainerData|null;\n  template: TemplateData;\n}\n\nexport interface ViewContainerData extends ViewContainerRef {\n  // Note: we are using the prefix _ as ViewContainerData is a ViewContainerRef and therefore\n  // directly\n  // exposed to the user.\n  _embeddedViews: ViewData[];\n}\n\nexport interface TemplateData extends TemplateRef<any> {\n  // views that have been created from the template\n  // of this element,\n  // but inserted into the embeddedViews of another element.\n  // By default, this is undefined.\n  // Note: we are using the prefix _ as TemplateData is a TemplateRef and therefore directly\n  // exposed to the user.\n  _projectedViews: ViewData[];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asElementData(view: ViewData, index: number): ElementData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ProviderData { instance: any; }\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asProviderData(view: ViewData, index: number): ProviderData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface PureExpressionData { value: any; }\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asPureExpressionData(view: ViewData, index: number): PureExpressionData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asQueryList(view: ViewData, index: number): QueryList<any> {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n\nexport interface RootData {\n  injector: Injector;\n  ngModule: NgModuleRef<any>;\n  projectableNodes: any[][];\n  selectorOrNode: any;\n  renderer: Renderer2;\n  rendererFactory: RendererFactory2;\n  errorHandler: ErrorHandler;\n  sanitizer: Sanitizer;\n}\n/**\n * @abstract\n */\nexport abstract class DebugContext {\n/**\n * @abstract\n * @return {?}\n */\nview() {}\n/**\n * @abstract\n * @return {?}\n */\nnodeIndex() {}\n/**\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * @abstract\n * @return {?}\n */\ncomponent() {}\n/**\n * @abstract\n * @return {?}\n */\nproviderTokens() {}\n/**\n * @abstract\n * @return {?}\n */\nreferences() {}\n/**\n * @abstract\n * @return {?}\n */\ncontext() {}\n/**\n * @abstract\n * @return {?}\n */\ncomponentRenderElement() {}\n/**\n * @abstract\n * @return {?}\n */\nrenderNode() {}\n/**\n * @abstract\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nlogError(console: Console, ...values: any[]) {}\n}\n\n// -------------------------------------\n// Other\n// -------------------------------------\n\nexport const enum CheckType {CheckAndUpdate, CheckNoChanges}\n\nexport interface ProviderOverride {\n  token: any;\n  flags: NodeFlags;\n  value: any;\n  deps: ([DepFlags, any]|any)[];\n  deprecatedBehavior: boolean;\n}\n\nexport interface Services {\n  setCurrentNode(view: ViewData, nodeIndex: number): void;\n  createRootView(\n      injector: Injector, projectableNodes: any[][], rootSelectorOrNode: string|any,\n      def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData;\n  createEmbeddedView(parent: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any):\n      ViewData;\n  createComponentView(\n      parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData;\n  createNgModuleRef(\n      moduleType: Type<any>, parent: Injector, bootstrapComponents: Type<any>[],\n      def: NgModuleDefinition): NgModuleRef<any>;\n  overrideProvider(override: ProviderOverride): void;\n  clearProviderOverrides(): void;\n  checkAndUpdateView(view: ViewData): void;\n  checkNoChangesView(view: ViewData): void;\n  destroyView(view: ViewData): void;\n  resolveDep(\n      view: ViewData, elDef: NodeDef|null, allowPrivateServices: boolean, depDef: DepDef,\n      notFoundValue?: any): any;\n  createDebugContext(view: ViewData, nodeIndex: number): DebugContext;\n  handleEvent: ViewHandleEventFn;\n  updateDirectives: (view: ViewData, checkType: CheckType) => void;\n  updateRenderer: (view: ViewData, checkType: CheckType) => void;\n  dirtyParentQueries: (view: ViewData) => void;\n}\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nexport const Services: Services = {\n  setCurrentNode: undefined !,\n  createRootView: undefined !,\n  createEmbeddedView: undefined !,\n  createComponentView: undefined !,\n  createNgModuleRef: undefined !,\n  overrideProvider: undefined !,\n  clearProviderOverrides: undefined !,\n  checkAndUpdateView: undefined !,\n  checkNoChangesView: undefined !,\n  destroyView: undefined !,\n  resolveDep: undefined !,\n  createDebugContext: undefined !,\n  handleEvent: undefined !,\n  updateDirectives: undefined !,\n  updateRenderer: undefined !,\n  dirtyParentQueries: undefined !,\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ERROR_DEBUG_CONTEXT, ERROR_LOGGER, getDebugContext} from '../errors';\nimport {DebugContext, ViewState} from './types';\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nexport function expressionChangedAfterItHasBeenCheckedError(\n    context: DebugContext, oldValue: any, currValue: any, isFirstCheck: boolean): Error {\n  let /** @type {?} */ msg =\n      `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '${oldValue}'. Current value: '${currValue}'.`;\n  if (isFirstCheck) {\n    msg +=\n        ` It seems like the view has been created after its parent and its children have been dirty checked.` +\n        ` Has it been created in a change detection hook ?`;\n  }\n  return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nexport function viewWrappedDebugError(err: any, context: DebugContext): Error {\n  if (!(err instanceof Error)) {\n    // errors that are not Error instances don't have a stack,\n    // so it is ok to wrap them into a new Error object...\n    err = new Error(err.toString());\n  }\n  _addDebugContext(err, context);\n  return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nexport function viewDebugError(msg: string, context: DebugContext): Error {\n  const /** @type {?} */ err = new Error(msg);\n  _addDebugContext(err, context);\n  return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err: Error, context: DebugContext) {\n  ( /** @type {?} */((err as any)))[ERROR_DEBUG_CONTEXT] = context;\n  ( /** @type {?} */((err as any)))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nexport function isViewDebugError(err: Error): boolean {\n  return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nexport function viewDestroyedError(action: string): Error {\n  return new Error(`ViewDestroyedError: Attempt to use a destroyed view: ${action}`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {WrappedValue, devModeEqual} from '../change_detection/change_detection';\nimport {ViewEncapsulation} from '../metadata/view';\nimport {RendererType2} from '../render/api';\nimport {looseIdentical, stringify} from '../util';\n\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {BindingDef, BindingFlags, Definition, DefinitionFactory, DepDef, DepFlags, ElementData, NodeDef, NodeFlags, QueryValueType, Services, ViewData, ViewDefinition, ViewDefinitionFactory, ViewFlags, ViewState, asElementData, asTextData} from './types';\n\nexport const /** @type {?} */ NOOP: any = () => {};\n\nconst /** @type {?} */ _tokenKeyCache = new Map<any, string>();\n/**\n * @param {?} token\n * @return {?}\n */\nexport function tokenKey(token: any): string {\n  let /** @type {?} */ key = _tokenKeyCache.get(token);\n  if (!key) {\n    key = stringify(token) + '_' + _tokenKeyCache.size;\n    _tokenKeyCache.set(token, key);\n  }\n  return key;\n}\n/**\n * @param {?} view\n * @param {?} nodeIdx\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function unwrapValue(view: ViewData, nodeIdx: number, bindingIdx: number, value: any): any {\n  if (value instanceof WrappedValue) {\n    value = value.wrapped;\n    let /** @type {?} */ globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n    let /** @type {?} */ oldValue = view.oldValues[globalBindingIdx];\n    if (oldValue instanceof WrappedValue) {\n      oldValue = oldValue.wrapped;\n    }\n    view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n  }\n  return value;\n}\n\nconst /** @type {?} */ UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nconst /** @type {?} */ EMPTY_RENDERER_TYPE_ID = '$$empty';\n/**\n * @param {?} values\n * @return {?}\n */\nexport function createRendererType2(values: {\n  styles: (string | any[])[],\n  encapsulation: ViewEncapsulation,\n  data: {[kind: string]: any[]}\n}): RendererType2 {\n  return {\n    id: UNDEFINED_RENDERER_TYPE_ID,\n    styles: values.styles,\n    encapsulation: values.encapsulation,\n    data: values.data\n  };\n}\n\nlet /** @type {?} */ _renderCompCount = 0;\n/**\n * @param {?=} type\n * @return {?}\n */\nexport function resolveRendererType2(type?: RendererType2 | null): RendererType2|null {\n  if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n    // first time we see this RendererType2. Initialize it...\n    const /** @type {?} */ isFilled =\n        ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n         type.styles.length || Object.keys(type.data).length);\n    if (isFilled) {\n      type.id = `c${_renderCompCount++}`;\n    } else {\n      type.id = EMPTY_RENDERER_TYPE_ID;\n    }\n  }\n  if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n    type = null;\n  }\n  return type || null;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkBinding(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any): boolean {\n  const /** @type {?} */ oldValues = view.oldValues;\n  if ((view.state & ViewState.FirstCheck) ||\n      !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n    return true;\n  }\n  return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkAndUpdateBinding(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any): boolean {\n  if (checkBinding(view, def, bindingIdx, value)) {\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return true;\n  }\n  return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkBindingNoChanges(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any) {\n  const /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n  if ((view.state & ViewState.BeforeFirstCheck) || !devModeEqual(oldValue, value)) {\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, def.nodeIndex), oldValue, value,\n        (view.state & ViewState.BeforeFirstCheck) !== 0);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function markParentViewsForCheck(view: ViewData) {\n  let /** @type {?} */ currView: ViewData|null = view;\n  while (currView) {\n    if (currView.def.flags & ViewFlags.OnPush) {\n      currView.state |= ViewState.ChecksEnabled;\n    }\n    currView = currView.viewContainerParent || currView.parent;\n  }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nexport function markParentViewsForCheckProjectedViews(view: ViewData, endView: ViewData) {\n  let /** @type {?} */ currView: ViewData|null = view;\n  while (currView && currView !== endView) {\n    currView.state |= ViewState.CheckProjectedViews;\n    currView = currView.viewContainerParent || currView.parent;\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nexport function dispatchEvent(\n    view: ViewData, nodeIndex: number, eventName: string, event: any): boolean {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  const /** @type {?} */ startView =\n      nodeDef.flags & NodeFlags.ComponentView ? asElementData(view, nodeIndex).componentView : view;\n  markParentViewsForCheck(startView);\n  return Services.handleEvent(view, nodeIndex, eventName, event);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function declaredViewContainer(view: ViewData): ElementData|null {\n  if (view.parent) {\n    const /** @type {?} */ parentView = view.parent;\n    return asElementData(parentView, /** @type {?} */(( view.parentNodeDef)).nodeIndex);\n  }\n  return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nexport function viewParentEl(view: ViewData): NodeDef|null {\n  const /** @type {?} */ parentView = view.parent;\n  if (parentView) {\n    return /** @type {?} */(( view.parentNodeDef)).parent;\n  } else {\n    return null;\n  }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function renderNode(view: ViewData, def: NodeDef): any {\n  switch (def.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      return asElementData(view, def.nodeIndex).renderElement;\n    case NodeFlags.TypeText:\n      return asTextData(view, def.nodeIndex).renderText;\n  }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nexport function elementEventFullName(target: string | null, name: string): string {\n  return target ? `${target}:${name}` : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function isComponentView(view: ViewData): boolean {\n  return !!view.parent && !!( /** @type {?} */((view.parentNodeDef)).flags & NodeFlags.Component);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function isEmbeddedView(view: ViewData): boolean {\n  return !!view.parent && !( /** @type {?} */((view.parentNodeDef)).flags & NodeFlags.Component);\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nexport function filterQueryId(queryId: number): number {\n  return 1 << (queryId % 32);\n}\n/**\n * @param {?} matchedQueriesDsl\n * @return {?}\n */\nexport function splitMatchedQueriesDsl(\n    matchedQueriesDsl: [string | number, QueryValueType][] | null): {\n  matchedQueries: {[queryId: string]: QueryValueType},\n  references: {[refId: string]: QueryValueType},\n  matchedQueryIds: number\n} {\n  const /** @type {?} */ matchedQueries: {[queryId: string]: QueryValueType} = {};\n  let /** @type {?} */ matchedQueryIds = 0;\n  const /** @type {?} */ references: {[refId: string]: QueryValueType} = {};\n  if (matchedQueriesDsl) {\n    matchedQueriesDsl.forEach(([queryId, valueType]) => {\n      if (typeof queryId === 'number') {\n        matchedQueries[queryId] = valueType;\n        matchedQueryIds |= filterQueryId(queryId);\n      } else {\n        references[queryId] = valueType;\n      }\n    });\n  }\n  return {matchedQueries, references, matchedQueryIds};\n}\n/**\n * @param {?} deps\n * @return {?}\n */\nexport function splitDepsDsl(deps: ([DepFlags, any] | any)[]): DepDef[] {\n  return deps.map(value => {\n    let /** @type {?} */ token: any;\n    let /** @type {?} */ flags: DepFlags;\n    if (Array.isArray(value)) {\n      [flags, token] = value;\n    } else {\n      flags = DepFlags.None;\n      token = value;\n    }\n    return {flags, token, tokenKey: tokenKey(token)};\n  });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function getParentRenderElement(view: ViewData, renderHost: any, def: NodeDef): any {\n  let /** @type {?} */ renderParent = def.renderParent;\n  if (renderParent) {\n    if ((renderParent.flags & NodeFlags.TypeElement) === 0 ||\n        (renderParent.flags & NodeFlags.ComponentView) === 0 ||\n        ( /** @type {?} */((renderParent.element)).componentRendererType && /** @type {?} */(( /** @type {?} */((\n         renderParent.element)).componentRendererType)).encapsulation ===\n             ViewEncapsulation.Native)) {\n      // only children of non components, or children of components with native encapsulation should\n      // be attached.\n      return asElementData(view, /** @type {?} */(( def.renderParent)).nodeIndex).renderElement;\n    }\n  } else {\n    return renderHost;\n  }\n}\n\nconst /** @type {?} */ DEFINITION_CACHE = new WeakMap<any, Definition<any>>();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nexport function resolveDefinition<D extends Definition<any>>(factory: DefinitionFactory<D>): D {\n  let /** @type {?} */ value = /** @type {?} */(( /** @type {?} */(( DEFINITION_CACHE.get(factory)))as D));\n  if (!value) {\n    value = factory(() => NOOP);\n    value.factory = factory;\n    DEFINITION_CACHE.set(factory, value);\n  }\n  return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function rootRenderNodes(view: ViewData): any[] {\n  const /** @type {?} */ renderNodes: any[] = [];\n  visitRootRenderNodes(view, RenderNodeAction.Collect, undefined, undefined, renderNodes);\n  return renderNodes;\n}\n\nexport const enum RenderNodeAction {Collect, AppendChild, InsertBefore, RemoveChild}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nexport function visitRootRenderNodes(\n    view: ViewData, action: RenderNodeAction, parentNode: any, nextSibling: any, target?: any[]) {\n  // We need to re-compute the parent node in case the nodes have been moved around manually\n  if (action === RenderNodeAction.RemoveChild) {\n    parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */(( view.def.lastRenderRootNode))));\n  }\n  visitSiblingRenderNodes(\n      view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nexport function visitSiblingRenderNodes(\n    view: ViewData, action: RenderNodeAction, startIndex: number, endIndex: number, parentNode: any,\n    nextSibling: any, target?: any[]) {\n  for (let /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & (NodeFlags.TypeElement | NodeFlags.TypeText | NodeFlags.TypeNgContent)) {\n      visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nexport function visitProjectedRenderNodes(\n    view: ViewData, ngContentIndex: number, action: RenderNodeAction, parentNode: any,\n    nextSibling: any, target?: any[]) {\n  let /** @type {?} */ compView: ViewData|null = view;\n  while (compView && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  const /** @type {?} */ hostView = /** @type {?} */(( compView)).parent;\n  const /** @type {?} */ hostElDef = viewParentEl( /** @type {?} */((compView)));\n  const /** @type {?} */ startIndex = /** @type {?} */(( hostElDef)).nodeIndex + 1;\n  const /** @type {?} */ endIndex = /** @type {?} */(( hostElDef)).nodeIndex + /** @type {?} */(( hostElDef)).childCount;\n  for (let /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n    const /** @type {?} */ nodeDef = /** @type {?} */(( hostView)).def.nodes[i];\n    if (nodeDef.ngContentIndex === ngContentIndex) {\n      visitRenderNode( /** @type {?} */((hostView)), nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n  if (! /** @type {?} */((hostView)).parent) {\n    // a root view\n    const /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n    if (projectedNodes) {\n      for (let /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n        execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n      }\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(\n    view: ViewData, nodeDef: NodeDef, action: RenderNodeAction, parentNode: any, nextSibling: any,\n    target?: any[]) {\n  if (nodeDef.flags & NodeFlags.TypeNgContent) {\n    visitProjectedRenderNodes(\n        view, /** @type {?} */(( nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n  } else {\n    const /** @type {?} */ rn = renderNode(view, nodeDef);\n    if (action === RenderNodeAction.RemoveChild && (nodeDef.flags & NodeFlags.ComponentView) &&\n        (nodeDef.bindingFlags & BindingFlags.CatSyntheticProperty)) {\n      // Note: we might need to do both actions.\n      if (nodeDef.bindingFlags & (BindingFlags.SyntheticProperty)) {\n        execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n      }\n      if (nodeDef.bindingFlags & (BindingFlags.SyntheticHostProperty)) {\n        const /** @type {?} */ compView = asElementData(view, nodeDef.nodeIndex).componentView;\n        execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n      }\n    } else {\n      execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n    }\n    if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n      const /** @type {?} */ embeddedViews = /** @type {?} */(( asElementData(view, nodeDef.nodeIndex).viewContainer))._embeddedViews;\n      for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n        visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n      }\n    }\n    if (nodeDef.flags & NodeFlags.TypeElement && ! /** @type {?} */((nodeDef.element)).name) {\n      visitSiblingRenderNodes(\n          view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode,\n          nextSibling, target);\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(\n    view: ViewData, renderNode: any, action: RenderNodeAction, parentNode: any, nextSibling: any,\n    target?: any[]) {\n  const /** @type {?} */ renderer = view.renderer;\n  switch (action) {\n    case RenderNodeAction.AppendChild:\n      renderer.appendChild(parentNode, renderNode);\n      break;\n    case RenderNodeAction.InsertBefore:\n      renderer.insertBefore(parentNode, renderNode, nextSibling);\n      break;\n    case RenderNodeAction.RemoveChild:\n      renderer.removeChild(parentNode, renderNode);\n      break;\n    case RenderNodeAction.Collect: /** @type {?} */((\n      target)).push(renderNode);\n      break;\n  }\n}\n\nconst /** @type {?} */ NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nexport function splitNamespace(name: string): string[] {\n  if (name[0] === ':') {\n    const /** @type {?} */ match = /** @type {?} */(( name.match(NS_PREFIX_RE)));\n    return [match[1], match[2]];\n  }\n  return ['', name];\n}\n/**\n * @param {?} bindings\n * @return {?}\n */\nexport function calcBindingFlags(bindings: BindingDef[]): BindingFlags {\n  let /** @type {?} */ flags = 0;\n  for (let /** @type {?} */ i = 0; i < bindings.length; i++) {\n    flags |= bindings[i].flags;\n  }\n  return flags;\n}\n/**\n * @param {?} valueCount\n * @param {?} constAndInterp\n * @return {?}\n */\nexport function interpolate(valueCount: number, constAndInterp: string[]): string {\n  let /** @type {?} */ result = '';\n  for (let /** @type {?} */ i = 0; i < valueCount * 2; i = i + 2) {\n    result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n  }\n  return result + constAndInterp[valueCount * 2];\n}\n/**\n * @param {?} valueCount\n * @param {?} c0\n * @param {?} a1\n * @param {?} c1\n * @param {?=} a2\n * @param {?=} c2\n * @param {?=} a3\n * @param {?=} c3\n * @param {?=} a4\n * @param {?=} c4\n * @param {?=} a5\n * @param {?=} c5\n * @param {?=} a6\n * @param {?=} c6\n * @param {?=} a7\n * @param {?=} c7\n * @param {?=} a8\n * @param {?=} c8\n * @param {?=} a9\n * @param {?=} c9\n * @return {?}\n */\nexport function inlineInterpolate(\n    valueCount: number, c0: string, a1: any, c1: string, a2?: any, c2?: string, a3?: any,\n    c3?: string, a4?: any, c4?: string, a5?: any, c5?: string, a6?: any, c6?: string, a7?: any,\n    c7?: string, a8?: any, c8?: string, a9?: any, c9?: string): string {\n  switch (valueCount) {\n    case 1:\n      return c0 + _toStringWithNull(a1) + c1;\n    case 2:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n    case 3:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3;\n    case 4:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4;\n    case 5:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n    case 6:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n    case 7:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7;\n    case 8:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n    case 9:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n    default:\n      throw new Error(`Does not support more than 9 expressions`);\n  }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction _toStringWithNull(v: any): string {\n  return v != null ? v.toString() : '';\n}\n\nexport const /** @type {?} */ EMPTY_ARRAY: any[] = [];\nexport const /** @type {?} */ EMPTY_MAP: {[key: string]: any} = {};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {RendererType2} from '../render/api';\nimport {SecurityContext} from '../security';\n\nimport {BindingDef, BindingFlags, ElementData, ElementHandleEventFn, NodeDef, NodeFlags, OutputDef, OutputType, QueryValueType, ViewData, ViewDefinitionFactory, asElementData} from './types';\nimport {NOOP, calcBindingFlags, checkAndUpdateBinding, dispatchEvent, elementEventFullName, getParentRenderElement, resolveDefinition, resolveRendererType2, splitMatchedQueriesDsl, splitNamespace} from './util';\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?=} handleEvent\n * @param {?=} templateFactory\n * @return {?}\n */\nexport function anchorDef(\n    flags: NodeFlags, matchedQueriesDsl: null | [string | number, QueryValueType][],\n    ngContentIndex: null | number, childCount: number, handleEvent?: null | ElementHandleEventFn,\n    templateFactory?: ViewDefinitionFactory): NodeDef {\n  flags |= NodeFlags.TypeElement;\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  const /** @type {?} */ template = templateFactory ? resolveDefinition(templateFactory) : null;\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    flags,\n    checkIndex: -1,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: {\n      ns: null,\n      name: null,\n      attrs: null, template,\n      componentProvider: null,\n      componentView: null,\n      componentRendererType: null,\n      publicProviders: null,\n      allProviders: null,\n      handleEvent: handleEvent || NOOP\n    },\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?} namespaceAndName\n * @param {?=} fixedAttrs\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} handleEvent\n * @param {?=} componentView\n * @param {?=} componentRendererType\n * @return {?}\n */\nexport function elementDef(\n    checkIndex: number, flags: NodeFlags,\n    matchedQueriesDsl: null | [string | number, QueryValueType][], ngContentIndex: null | number,\n    childCount: number, namespaceAndName: string | null, fixedAttrs: null | [string, string][] = [],\n    bindings?: null | [BindingFlags, string, string | SecurityContext | null][],\n    outputs?: null | ([string, string])[], handleEvent?: null | ElementHandleEventFn,\n    componentView?: null | ViewDefinitionFactory,\n    componentRendererType?: RendererType2 | null): NodeDef {\n  if (!handleEvent) {\n    handleEvent = NOOP;\n  }\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  let /** @type {?} */ ns: string = /** @type {?} */(( null));\n  let /** @type {?} */ name: string = /** @type {?} */(( null));\n  if (namespaceAndName) {\n    [ns, name] = splitNamespace(namespaceAndName);\n  }\n  bindings = bindings || [];\n  const /** @type {?} */ bindingDefs: BindingDef[] = new Array(bindings.length);\n  for (let /** @type {?} */ i = 0; i < bindings.length; i++) {\n    const [bindingFlags, namespaceAndName, suffixOrSecurityContext] = bindings[i];\n\n    const [ns, name] = splitNamespace(namespaceAndName);\n    let /** @type {?} */ securityContext: SecurityContext = /** @type {?} */(( undefined));\n    let /** @type {?} */ suffix: string = /** @type {?} */(( undefined));\n    switch (bindingFlags & BindingFlags.Types) {\n      case BindingFlags.TypeElementStyle:\n        suffix = /** @type {?} */(( <string>suffixOrSecurityContext));\n        break;\n      case BindingFlags.TypeElementAttribute:\n      case BindingFlags.TypeProperty:\n        securityContext = /** @type {?} */(( <SecurityContext>suffixOrSecurityContext));\n        break;\n    }\n    bindingDefs[i] =\n        {flags: bindingFlags, ns, name, nonMinifiedName: name, securityContext, suffix};\n  }\n  outputs = outputs || [];\n  const /** @type {?} */ outputDefs: OutputDef[] = new Array(outputs.length);\n  for (let /** @type {?} */ i = 0; i < outputs.length; i++) {\n    const [target, eventName] = outputs[i];\n    outputDefs[i] = {\n      type: OutputType.ElementOutput,\n      target: /** @type {?} */(( <any>target)), eventName,\n      propName: null\n    };\n  }\n  fixedAttrs = fixedAttrs || [];\n  const /** @type {?} */ attrs = /** @type {?} */(( <[string, string, string][]>fixedAttrs.map(([namespaceAndName, value]) => {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    return [ns, name, value];\n  })));\n  componentRendererType = resolveRendererType2(componentRendererType);\n  if (componentView) {\n    flags |= NodeFlags.ComponentView;\n  }\n  flags |= NodeFlags.TypeElement;\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n    bindings: bindingDefs,\n    bindingFlags: calcBindingFlags(bindingDefs),\n    outputs: outputDefs,\n    element: {\n      ns,\n      name,\n      attrs,\n      template: null,\n      // will bet set by the view definition\n      componentProvider: null,\n      componentView: componentView || null,\n      componentRendererType: componentRendererType,\n      publicProviders: null,\n      allProviders: null,\n      handleEvent: handleEvent || NOOP,\n    },\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function createElement(view: ViewData, renderHost: any, def: NodeDef): ElementData {\n  const /** @type {?} */ elDef = /** @type {?} */(( def.element));\n  const /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n  const /** @type {?} */ renderer = view.renderer;\n  let /** @type {?} */ el: any;\n  if (view.parent || !rootSelectorOrNode) {\n    if (elDef.name) {\n      el = renderer.createElement(elDef.name, elDef.ns);\n    } else {\n      el = renderer.createComment('');\n    }\n    const /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n      renderer.appendChild(parentEl, el);\n    }\n  } else {\n    el = renderer.selectRootElement(rootSelectorOrNode);\n  }\n  if (elDef.attrs) {\n    for (let /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n      const [ns, name, value] = elDef.attrs[i];\n      renderer.setAttribute(el, name, value, ns);\n    }\n  }\n  return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nexport function listenToElementOutputs(view: ViewData, compView: ViewData, def: NodeDef, el: any) {\n  for (let /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n    const /** @type {?} */ output = def.outputs[i];\n    const /** @type {?} */ handleEventClosure = renderEventHandlerClosure(\n        view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n    let /** @type {?} */ listenTarget: 'window'|'document'|'body'|'component'|null = output.target;\n    let /** @type {?} */ listenerView = view;\n    if (output.target === 'component') {\n      listenTarget = null;\n      listenerView = compView;\n    }\n    const /** @type {?} */ disposable = /** @type {?} */((\n        <any>listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure))); /** @type {?} */((\n    view.disposables))[def.outputIndex + i] = disposable;\n  }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view: ViewData, index: number, eventName: string) {\n  return (event: any) => {\n    try {\n      return dispatchEvent(view, index, eventName, event);\n    } catch ( /** @type {?} */e) {\n      // Attention: Don't rethrow, to keep in sync with directive events.\n      view.root.errorHandler.handleError(e);\n    }\n  };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateElementInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const /** @type {?} */ bindLen = def.bindings.length;\n  let /** @type {?} */ changed = false;\n  if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9)) changed = true;\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateElementDynamic(view: ViewData, def: NodeDef, values: any[]): boolean {\n  let /** @type {?} */ changed = false;\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    if (checkAndUpdateElementValue(view, def, i, values[i])) changed = true;\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view: ViewData, def: NodeDef, bindingIdx: number, value: any) {\n  if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n    return false;\n  }\n  const /** @type {?} */ binding = def.bindings[bindingIdx];\n  const /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n  const /** @type {?} */ renderNode = elData.renderElement;\n  const /** @type {?} */ name = /** @type {?} */(( binding.name));\n  switch (binding.flags & BindingFlags.Types) {\n    case BindingFlags.TypeElementAttribute:\n      setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n      break;\n    case BindingFlags.TypeElementClass:\n      setElementClass(view, renderNode, name, value);\n      break;\n    case BindingFlags.TypeElementStyle:\n      setElementStyle(view, binding, renderNode, name, value);\n      break;\n    case BindingFlags.TypeProperty:\n      const /** @type {?} */ bindView = (def.flags & NodeFlags.ComponentView &&\n                        binding.flags & BindingFlags.SyntheticHostProperty) ?\n          elData.componentView :\n          view;\n      setElementProperty(bindView, binding, renderNode, name, value);\n      break;\n  }\n  return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(\n    view: ViewData, binding: BindingDef, renderNode: any, ns: string | null, name: string,\n    value: any) {\n  const /** @type {?} */ securityContext = binding.securityContext;\n  let /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  renderValue = renderValue != null ? renderValue.toString() : null;\n  const /** @type {?} */ renderer = view.renderer;\n  if (value != null) {\n    renderer.setAttribute(renderNode, name, renderValue, ns);\n  } else {\n    renderer.removeAttribute(renderNode, name, ns);\n  }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view: ViewData, renderNode: any, name: string, value: boolean) {\n  const /** @type {?} */ renderer = view.renderer;\n  if (value) {\n    renderer.addClass(renderNode, name);\n  } else {\n    renderer.removeClass(renderNode, name);\n  }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(\n    view: ViewData, binding: BindingDef, renderNode: any, name: string, value: any) {\n  let /** @type {?} */ renderValue: string|null =\n      view.root.sanitizer.sanitize(SecurityContext.STYLE, /** @type {?} */(( value as{} | string)));\n  if (renderValue != null) {\n    renderValue = renderValue.toString();\n    const /** @type {?} */ unit = binding.suffix;\n    if (unit != null) {\n      renderValue = renderValue + unit;\n    }\n  } else {\n    renderValue = null;\n  }\n  const /** @type {?} */ renderer = view.renderer;\n  if (renderValue != null) {\n    renderer.setStyle(renderNode, name, renderValue);\n  } else {\n    renderer.removeStyle(renderNode, name);\n  }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(\n    view: ViewData, binding: BindingDef, renderNode: any, name: string, value: any) {\n  const /** @type {?} */ securityContext = binding.securityContext;\n  let /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  view.renderer.setProperty(renderNode, name, renderValue);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector} from '../di/injector';\nimport {NgModuleRef} from '../linker/ng_module_factory';\n\nimport {DepDef, DepFlags, NgModuleData, NgModuleDefinition, NgModuleProviderDef, NodeFlags} from './types';\nimport {splitDepsDsl, tokenKey} from './util';\n\nconst /** @type {?} */ UNDEFINED_VALUE = new Object();\n\nconst /** @type {?} */ InjectorRefTokenKey = tokenKey(Injector);\nconst /** @type {?} */ NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} flags\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nexport function moduleProvideDef(\n    flags: NodeFlags, token: any, value: any,\n    deps: ([DepFlags, any] | any)[]): NgModuleProviderDef {\n  const /** @type {?} */ depDefs = splitDepsDsl(deps);\n  return {\n    // will bet set by the module definition\n    index: -1,\n    deps: depDefs, flags, token, value\n  };\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nexport function moduleDef(providers: NgModuleProviderDef[]): NgModuleDefinition {\n  const /** @type {?} */ providersByKey: {[key: string]: NgModuleProviderDef} = {};\n  for (let /** @type {?} */ i = 0; i < providers.length; i++) {\n    const /** @type {?} */ provider = providers[i];\n    provider.index = i;\n    providersByKey[tokenKey(provider.token)] = provider;\n  }\n  return {\n    // Will be filled later...\n    factory: null,\n    providersByKey,\n    providers\n  };\n}\n/**\n * @param {?} data\n * @return {?}\n */\nexport function initNgModule(data: NgModuleData) {\n  const /** @type {?} */ def = data._def;\n  const /** @type {?} */ providers = data._providers = new Array(def.providers.length);\n  for (let /** @type {?} */ i = 0; i < def.providers.length; i++) {\n    const /** @type {?} */ provDef = def.providers[i];\n    if (!(provDef.flags & NodeFlags.LazyProvider)) {\n      providers[i] = _createProviderInstance(data, provDef);\n    }\n  }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nexport function resolveNgModuleDep(\n    data: NgModuleData, depDef: DepDef, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n  if (depDef.flags & DepFlags.Value) {\n    return depDef.token;\n  }\n  if (depDef.flags & DepFlags.Optional) {\n    notFoundValue = null;\n  }\n  if (depDef.flags & DepFlags.SkipSelf) {\n    return data._parent.get(depDef.token, notFoundValue);\n  }\n  const /** @type {?} */ tokenKey = depDef.tokenKey;\n  switch (tokenKey) {\n    case InjectorRefTokenKey:\n    case NgModuleRefTokenKey:\n      return data;\n  }\n  const /** @type {?} */ providerDef = data._def.providersByKey[tokenKey];\n  if (providerDef) {\n    let /** @type {?} */ providerInstance = data._providers[providerDef.index];\n    if (providerInstance === undefined) {\n      providerInstance = data._providers[providerDef.index] =\n          _createProviderInstance(data, providerDef);\n    }\n    return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n  }\n  return data._parent.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance(ngModule: NgModuleData, providerDef: NgModuleProviderDef): any {\n  let /** @type {?} */ injectable: any;\n  switch (providerDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeClassProvider:\n      injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeFactoryProvider:\n      injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeUseExistingProvider:\n      injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n      break;\n    case NodeFlags.TypeValueProvider:\n      injectable = providerDef.value;\n      break;\n  }\n  return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule: NgModuleData, ctor: any, deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  switch (len) {\n    case 0:\n      return new ctor();\n    case 1:\n      return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n    case 2:\n      return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n    case 3:\n      return new ctor(\n          resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]),\n          resolveNgModuleDep(ngModule, deps[2]));\n    default:\n      const /** @type {?} */ depValues = new Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n      }\n      return new ctor(...depValues);\n  }\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule: NgModuleData, factory: any, deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  switch (len) {\n    case 0:\n      return factory();\n    case 1:\n      return factory(resolveNgModuleDep(ngModule, deps[0]));\n    case 2:\n      return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n    case 3:\n      return factory(\n          resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]),\n          resolveNgModuleDep(ngModule, deps[2]));\n    default:\n      const /** @type {?} */ depValues = Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n      }\n      return factory(...depValues);\n  }\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nexport function callNgModuleLifecycle(ngModule: NgModuleData, lifecycles: NodeFlags) {\n  const /** @type {?} */ def = ngModule._def;\n  for (let /** @type {?} */ i = 0; i < def.providers.length; i++) {\n    const /** @type {?} */ provDef = def.providers[i];\n    if (provDef.flags & NodeFlags.OnDestroy) {\n      const /** @type {?} */ instance = ngModule._providers[i];\n      if (instance && instance !== UNDEFINED_VALUE) {\n        instance.ngOnDestroy();\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ElementData, NodeDef, NodeFlags, Services, ViewData, ViewDefinition, ViewState} from './types';\nimport {RenderNodeAction, declaredViewContainer, isComponentView, renderNode, visitRootRenderNodes} from './util';\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nexport function attachEmbeddedView(\n    parentView: ViewData, elementData: ElementData, viewIndex: number | undefined | null,\n    view: ViewData) {\n  let /** @type {?} */ embeddedViews = /** @type {?} */(( elementData.viewContainer))._embeddedViews;\n  if (viewIndex === null || viewIndex === undefined) {\n    viewIndex = embeddedViews.length;\n  }\n  view.viewContainerParent = parentView;\n  addToArray(embeddedViews, /** @type {?} */(( viewIndex)), view);\n  attachProjectedView(elementData, view);\n\n  Services.dirtyParentQueries(view);\n\n  const /** @type {?} */ prevView = /** @type {?} */(( viewIndex)) > 0 ? embeddedViews[ /** @type {?} */((viewIndex)) - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData: ElementData, view: ViewData) {\n  const /** @type {?} */ dvcElementData = declaredViewContainer(view);\n  if (!dvcElementData || dvcElementData === vcElementData ||\n      view.state & ViewState.IsProjectedView) {\n    return;\n  }\n  // Note: For performance reasons, we\n  // - add a view to template._projectedViews only 1x throughout its lifetime,\n  //   and remove it not until the view is destroyed.\n  //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n  //    nested projected views as well, even accross component boundaries).\n  // - don't track the insertion order of views in the projected views array\n  //   (hard, as when the views of the same template are inserted different view containers)\n  view.state |= ViewState.IsProjectedView;\n  let /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n  if (!projectedViews) {\n    projectedViews = dvcElementData.template._projectedViews = [];\n  }\n  projectedViews.push(view);\n  // Note: we are changing the NodeDef here as we cannot calculate\n  // the fact whether a template is used for projection during compilation.\n  markNodeAsProjectedTemplate( /** @type {?} */((view.parent)).def, /** @type {?} */(( view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef: ViewDefinition, nodeDef: NodeDef) {\n  if (nodeDef.flags & NodeFlags.ProjectedTemplate) {\n    return;\n  }\n  viewDef.nodeFlags |= NodeFlags.ProjectedTemplate;\n  nodeDef.flags |= NodeFlags.ProjectedTemplate;\n  let /** @type {?} */ parentNodeDef = nodeDef.parent;\n  while (parentNodeDef) {\n    parentNodeDef.childFlags |= NodeFlags.ProjectedTemplate;\n    parentNodeDef = parentNodeDef.parent;\n  }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nexport function detachEmbeddedView(elementData: ElementData, viewIndex?: number): ViewData|null {\n  const /** @type {?} */ embeddedViews = /** @type {?} */(( elementData.viewContainer))._embeddedViews;\n  if (viewIndex == null || viewIndex >= embeddedViews.length) {\n    viewIndex = embeddedViews.length - 1;\n  }\n  if (viewIndex < 0) {\n    return null;\n  }\n  const /** @type {?} */ view = embeddedViews[viewIndex];\n  view.viewContainerParent = null;\n  removeFromArray(embeddedViews, viewIndex);\n\n  // See attachProjectedView for why we don't update projectedViews here.\n  Services.dirtyParentQueries(view);\n\n  renderDetachView(view);\n\n  return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function detachProjectedView(view: ViewData) {\n  if (!(view.state & ViewState.IsProjectedView)) {\n    return;\n  }\n  const /** @type {?} */ dvcElementData = declaredViewContainer(view);\n  if (dvcElementData) {\n    const /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    if (projectedViews) {\n      removeFromArray(projectedViews, projectedViews.indexOf(view));\n      Services.dirtyParentQueries(view);\n    }\n  }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nexport function moveEmbeddedView(\n    elementData: ElementData, oldViewIndex: number, newViewIndex: number): ViewData {\n  const /** @type {?} */ embeddedViews = /** @type {?} */(( elementData.viewContainer))._embeddedViews;\n  const /** @type {?} */ view = embeddedViews[oldViewIndex];\n  removeFromArray(embeddedViews, oldViewIndex);\n  if (newViewIndex == null) {\n    newViewIndex = embeddedViews.length;\n  }\n  addToArray(embeddedViews, newViewIndex, view);\n\n  // Note: Don't need to change projectedViews as the order in there\n  // as always invalid...\n\n  Services.dirtyParentQueries(view);\n\n  renderDetachView(view);\n  const /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n\n  return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(\n    elementData: ElementData, prevView: ViewData | null, view: ViewData) {\n  const /** @type {?} */ prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */(( prevView.def.lastRenderRootNode))) :\n                                    elementData.renderElement;\n  const /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n  const /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n  // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n  // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n  visitRootRenderNodes(view, RenderNodeAction.InsertBefore, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function renderDetachView(view: ViewData) {\n  visitRootRenderNodes(view, RenderNodeAction.RemoveChild, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr: any[], index: number, value: any) {\n  // perf: array.push is faster than array.splice!\n  if (index >= arr.length) {\n    arr.push(value);\n  } else {\n    arr.splice(index, 0, value);\n  }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr: any[], index: number) {\n  // perf: array.pop is faster than array.splice!\n  if (index >= arr.length - 1) {\n    arr.pop();\n  } else {\n    arr.splice(index, 1);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ChangeDetectorRef, SimpleChange, SimpleChanges, WrappedValue} from '../change_detection/change_detection';\nimport {Injector} from '../di';\nimport {ElementRef} from '../linker/element_ref';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {Renderer as RendererV1, Renderer2} from '../render/api';\n\nimport {createChangeDetectorRef, createInjector, createRendererV1} from './refs';\nimport {BindingDef, BindingFlags, DepDef, DepFlags, NodeDef, NodeFlags, OutputDef, OutputType, ProviderData, QueryValueType, Services, ViewData, ViewFlags, ViewState, asElementData, asProviderData} from './types';\nimport {calcBindingFlags, checkBinding, dispatchEvent, isComponentView, splitDepsDsl, splitMatchedQueriesDsl, tokenKey, viewParentEl} from './util';\n\nconst /** @type {?} */ RendererV1TokenKey = tokenKey(RendererV1);\nconst /** @type {?} */ Renderer2TokenKey = tokenKey(Renderer2);\nconst /** @type {?} */ ElementRefTokenKey = tokenKey(ElementRef);\nconst /** @type {?} */ ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nconst /** @type {?} */ TemplateRefTokenKey = tokenKey(TemplateRef);\nconst /** @type {?} */ ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nconst /** @type {?} */ InjectorRefTokenKey = tokenKey(Injector);\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @return {?}\n */\nexport function directiveDef(\n    checkIndex: number, flags: NodeFlags,\n    matchedQueries: null | [string | number, QueryValueType][], childCount: number, ctor: any,\n    deps: ([DepFlags, any] | any)[], props?: null | {[name: string]: [number, string]},\n    outputs?: null | {[name: string]: string}): NodeDef {\n  const /** @type {?} */ bindings: BindingDef[] = [];\n  if (props) {\n    for (let /** @type {?} */ prop in props) {\n      const [bindingIndex, nonMinifiedName] = props[prop];\n      bindings[bindingIndex] = {\n        flags: BindingFlags.TypeProperty,\n        name: prop, nonMinifiedName,\n        ns: null,\n        securityContext: null,\n        suffix: null\n      };\n    }\n  }\n  const /** @type {?} */ outputDefs: OutputDef[] = [];\n  if (outputs) {\n    for (let /** @type {?} */ propName in outputs) {\n      outputDefs.push(\n          {type: OutputType.DirectiveOutput, propName, target: null, eventName: outputs[propName]});\n    }\n  }\n  flags |= NodeFlags.TypeDirective;\n  return _def(\n      checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n/**\n * @param {?} flags\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nexport function pipeDef(flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef {\n  flags |= NodeFlags.TypePipe;\n  return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nexport function providerDef(\n    flags: NodeFlags, matchedQueries: null | [string | number, QueryValueType][], token: any,\n    value: any, deps: ([DepFlags, any] | any)[]): NodeDef {\n  return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} childCount\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} bindings\n * @param {?=} outputs\n * @return {?}\n */\nexport function _def(\n    checkIndex: number, flags: NodeFlags,\n    matchedQueriesDsl: [string | number, QueryValueType][] | null, childCount: number, token: any,\n    value: any, deps: ([DepFlags, any] | any)[], bindings?: BindingDef[],\n    outputs?: OutputDef[]): NodeDef {\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  if (!outputs) {\n    outputs = [];\n  }\n  if (!bindings) {\n    bindings = [];\n  }\n\n  const /** @type {?} */ depDefs = splitDepsDsl(deps);\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references,\n    ngContentIndex: -1, childCount, bindings,\n    bindingFlags: calcBindingFlags(bindings), outputs,\n    element: null,\n    provider: {token, value, deps: depDefs},\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createProviderInstance(view: ViewData, def: NodeDef): any {\n  return _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createPipeInstance(view: ViewData, def: NodeDef): any {\n  // deps are looked up from component.\n  let /** @type {?} */ compView = view;\n  while (compView.parent && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  // pipes can see the private services of the component\n  const /** @type {?} */ allowPrivateServices = true;\n  // pipes are always eager and classes!\n  return createClass( /** @type {?} */((\n      compView.parent)), /** @type {?} */(( viewParentEl(compView))), allowPrivateServices, /** @type {?} */(( def.provider)).value, /** @type {?} */((\n      def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createDirectiveInstance(view: ViewData, def: NodeDef): any {\n  // components can see other private services, other directives can't.\n  const /** @type {?} */ allowPrivateServices = (def.flags & NodeFlags.Component) > 0;\n  // directives are always eager and classes!\n  const /** @type {?} */ instance = createClass(\n      view, /** @type {?} */(( def.parent)), allowPrivateServices, /** @type {?} */(( def.provider)).value, /** @type {?} */(( def.provider)).deps);\n  if (def.outputs.length) {\n    for (let /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n      const /** @type {?} */ output = def.outputs[i];\n      const /** @type {?} */ subscription = instance[ /** @type {?} */((output.propName))].subscribe(\n          eventHandlerClosure(view, /** @type {?} */(( def.parent)).nodeIndex, output.eventName)); /** @type {?} */((\n      view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n    }\n  }\n  return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view: ViewData, index: number, eventName: string) {\n  return (event: any) => {\n    try {\n      return dispatchEvent(view, index, eventName, event);\n    } catch ( /** @type {?} */e) {\n      // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n      view.root.errorHandler.handleError(e);\n    }\n  };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateDirectiveInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n  const /** @type {?} */ directive = providerData.instance;\n  let /** @type {?} */ changed = false;\n  let /** @type {?} */ changes: SimpleChanges = /** @type {?} */(( undefined));\n  const /** @type {?} */ bindLen = def.bindings.length;\n  if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 0, v0, changes);\n  }\n  if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 1, v1, changes);\n  }\n  if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 2, v2, changes);\n  }\n  if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 3, v3, changes);\n  }\n  if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 4, v4, changes);\n  }\n  if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 5, v5, changes);\n  }\n  if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 6, v6, changes);\n  }\n  if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 7, v7, changes);\n  }\n  if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 8, v8, changes);\n  }\n  if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 9, v9, changes);\n  }\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if ((view.state & ViewState.FirstCheck) && (def.flags & NodeFlags.OnInit)) {\n    directive.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    directive.ngDoCheck();\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateDirectiveDynamic(\n    view: ViewData, def: NodeDef, values: any[]): boolean {\n  const /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n  const /** @type {?} */ directive = providerData.instance;\n  let /** @type {?} */ changed = false;\n  let /** @type {?} */ changes: SimpleChanges = /** @type {?} */(( undefined));\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    if (checkBinding(view, def, i, values[i])) {\n      changed = true;\n      changes = updateProp(view, providerData, def, i, values[i], changes);\n    }\n  }\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if ((view.state & ViewState.FirstCheck) && (def.flags & NodeFlags.OnInit)) {\n    directive.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    directive.ngDoCheck();\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view: ViewData, def: NodeDef): any {\n  // private services can see other private services\n  const /** @type {?} */ allowPrivateServices = (def.flags & NodeFlags.PrivateProvider) > 0;\n  const /** @type {?} */ providerDef = def.provider;\n  switch (def.flags & NodeFlags.Types) {\n    case NodeFlags.TypeClassProvider:\n      return createClass(\n          view, /** @type {?} */(( def.parent)), allowPrivateServices, /** @type {?} */(( providerDef)).value, /** @type {?} */(( providerDef)).deps);\n    case NodeFlags.TypeFactoryProvider:\n      return callFactory(\n          view, /** @type {?} */(( def.parent)), allowPrivateServices, /** @type {?} */(( providerDef)).value, /** @type {?} */(( providerDef)).deps);\n    case NodeFlags.TypeUseExistingProvider:\n      return resolveDep(view, /** @type {?} */(( def.parent)), allowPrivateServices, /** @type {?} */(( providerDef)).deps[0]);\n    case NodeFlags.TypeValueProvider:\n      return /** @type {?} */(( providerDef)).value;\n  }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, ctor: any, deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  switch (len) {\n    case 0:\n      return new ctor();\n    case 1:\n      return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n    case 2:\n      return new ctor(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]));\n    case 3:\n      return new ctor(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]),\n          resolveDep(view, elDef, allowPrivateServices, deps[2]));\n    default:\n      const /** @type {?} */ depValues = new Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n      }\n      return new ctor(...depValues);\n  }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, factory: any,\n    deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  switch (len) {\n    case 0:\n      return factory();\n    case 1:\n      return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n    case 2:\n      return factory(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]));\n    case 3:\n      return factory(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]),\n          resolveDep(view, elDef, allowPrivateServices, deps[2]));\n    default:\n      const /** @type {?} */ depValues = Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n      }\n      return factory(...depValues);\n  }\n}\n\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nexport const /** @type {?} */ NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nexport function resolveDep(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, depDef: DepDef,\n    notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n  if (depDef.flags & DepFlags.Value) {\n    return depDef.token;\n  }\n  const /** @type {?} */ startView = view;\n  if (depDef.flags & DepFlags.Optional) {\n    notFoundValue = null;\n  }\n  const /** @type {?} */ tokenKey = depDef.tokenKey;\n\n  if (tokenKey === ChangeDetectorRefTokenKey) {\n    // directives on the same element as a component should be able to control the change detector\n    // of that component as well.\n    allowPrivateServices = !!(elDef && /** @type {?} */(( elDef.element)).componentView);\n  }\n\n  if (elDef && (depDef.flags & DepFlags.SkipSelf)) {\n    allowPrivateServices = false;\n    elDef = /** @type {?} */(( elDef.parent));\n  }\n\n  while (view) {\n    if (elDef) {\n      switch (tokenKey) {\n        case RendererV1TokenKey: {\n          const /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n          return createRendererV1(compView);\n        }\n        case Renderer2TokenKey: {\n          const /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n          return compView.renderer;\n        }\n        case ElementRefTokenKey:\n          return new ElementRef(asElementData(view, elDef.nodeIndex).renderElement);\n        case ViewContainerRefTokenKey:\n          return asElementData(view, elDef.nodeIndex).viewContainer;\n        case TemplateRefTokenKey: {\n          if ( /** @type {?} */((elDef.element)).template) {\n            return asElementData(view, elDef.nodeIndex).template;\n          }\n          break;\n        }\n        case ChangeDetectorRefTokenKey: {\n          let /** @type {?} */ cdView = findCompView(view, elDef, allowPrivateServices);\n          return createChangeDetectorRef(cdView);\n        }\n        case InjectorRefTokenKey:\n          return createInjector(view, elDef);\n        default:\n          const /** @type {?} */ providerDef = /** @type {?} */((\n              (allowPrivateServices ? /** @type {?} */(( elDef.element)).allProviders : /** @type {?} */((\n                                      elDef.element)).publicProviders)))[tokenKey];\n          if (providerDef) {\n            let /** @type {?} */ providerData = asProviderData(view, providerDef.nodeIndex);\n            if (!providerData) {\n              providerData = {instance: _createProviderInstance(view, providerDef)};\n              view.nodes[providerDef.nodeIndex] = /** @type {?} */(( providerData as any));\n            }\n            return providerData.instance;\n          }\n      }\n    }\n    allowPrivateServices = isComponentView(view);\n    elDef = /** @type {?} */(( viewParentEl(view)));\n    view = /** @type {?} */(( view.parent));\n  }\n\n  const /** @type {?} */ value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n\n  if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n      notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n    // Return the value from the root element injector when\n    // - it provides it\n    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n    // - the module injector should not be checked\n    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n    return value;\n  }\n\n  return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view: ViewData, elDef: NodeDef, allowPrivateServices: boolean) {\n  let /** @type {?} */ compView: ViewData;\n  if (allowPrivateServices) {\n    compView = asElementData(view, elDef.nodeIndex).componentView;\n  } else {\n    compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n      compView = compView.parent;\n    }\n  }\n  return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(\n    view: ViewData, providerData: ProviderData, def: NodeDef, bindingIdx: number, value: any,\n    changes: SimpleChanges): SimpleChanges {\n  if (def.flags & NodeFlags.Component) {\n    const /** @type {?} */ compView = asElementData(view, /** @type {?} */(( def.parent)).nodeIndex).componentView;\n    if (compView.def.flags & ViewFlags.OnPush) {\n      compView.state |= ViewState.ChecksEnabled;\n    }\n  }\n  const /** @type {?} */ binding = def.bindings[bindingIdx];\n  const /** @type {?} */ propName = /** @type {?} */(( binding.name));\n  // Note: This is still safe with Closure Compiler as\n  // the user passed in the property name as an object has to `providerDef`,\n  // so Closure Compiler will have renamed the property correctly already.\n  providerData.instance[propName] = value;\n  if (def.flags & NodeFlags.OnChanges) {\n    changes = changes || {};\n    let /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if (oldValue instanceof WrappedValue) {\n      oldValue = oldValue.wrapped;\n    }\n    const /** @type {?} */ binding = def.bindings[bindingIdx];\n    changes[ /** @type {?} */((binding.nonMinifiedName))] =\n        new SimpleChange(oldValue, value, (view.state & ViewState.FirstCheck) !== 0);\n  }\n  view.oldValues[def.bindingIndex + bindingIdx] = value;\n  return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nexport function callLifecycleHooksChildrenFirst(view: ViewData, lifecycles: NodeFlags) {\n  if (!(view.def.nodeFlags & lifecycles)) {\n    return;\n  }\n  const /** @type {?} */ nodes = view.def.nodes;\n  for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n    const /** @type {?} */ nodeDef = nodes[i];\n    let /** @type {?} */ parent = nodeDef.parent;\n    if (!parent && nodeDef.flags & lifecycles) {\n      // matching root node (e.g. a pipe)\n      callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n    }\n    if ((nodeDef.childFlags & lifecycles) === 0) {\n      // no child matches one of the lifecycles\n      i += nodeDef.childCount;\n    }\n    while (parent && (parent.flags & NodeFlags.TypeElement) &&\n           i === parent.nodeIndex + parent.childCount) {\n      // last child of an element\n      if (parent.directChildFlags & lifecycles) {\n        callElementProvidersLifecycles(view, parent, lifecycles);\n      }\n      parent = parent.parent;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view: ViewData, elDef: NodeDef, lifecycles: NodeFlags) {\n  for (let /** @type {?} */ i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & lifecycles) {\n      callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n    }\n    // only visit direct children\n    i += nodeDef.childCount;\n  }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callProviderLifecycles(view: ViewData, index: number, lifecycles: NodeFlags) {\n  const /** @type {?} */ providerData = asProviderData(view, index);\n  if (!providerData) {\n    return;\n  }\n  const /** @type {?} */ provider = providerData.instance;\n  if (!provider) {\n    return;\n  }\n  Services.setCurrentNode(view, index);\n  if (lifecycles & NodeFlags.AfterContentInit) {\n    provider.ngAfterContentInit();\n  }\n  if (lifecycles & NodeFlags.AfterContentChecked) {\n    provider.ngAfterContentChecked();\n  }\n  if (lifecycles & NodeFlags.AfterViewInit) {\n    provider.ngAfterViewInit();\n  }\n  if (lifecycles & NodeFlags.AfterViewChecked) {\n    provider.ngAfterViewChecked();\n  }\n  if (lifecycles & NodeFlags.OnDestroy) {\n    provider.ngOnDestroy();\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ElementRef} from '../linker/element_ref';\nimport {QueryList} from '../linker/query_list';\n\nimport {NodeDef, NodeFlags, QueryBindingDef, QueryBindingType, QueryDef, QueryValueType, ViewData, asElementData, asProviderData, asQueryList} from './types';\nimport {declaredViewContainer, filterQueryId, isEmbeddedView} from './util';\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nexport function queryDef(\n    flags: NodeFlags, id: number, bindings: {[propName: string]: QueryBindingType}): NodeDef {\n  let /** @type {?} */ bindingDefs: QueryBindingDef[] = [];\n  for (let /** @type {?} */ propName in bindings) {\n    const /** @type {?} */ bindingType = bindings[propName];\n    bindingDefs.push({propName, bindingType});\n  }\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    // TODO(vicb): check\n    checkIndex: -1, flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    ngContentIndex: -1,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    childCount: 0,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: {id, filterId: filterQueryId(id), bindings: bindingDefs},\n    ngContent: null\n  };\n}\n/**\n * @return {?}\n */\nexport function createQuery(): QueryList<any> {\n  return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function dirtyParentQueries(view: ViewData) {\n  const /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n  while (view.parent && isEmbeddedView(view)) {\n    let /** @type {?} */ tplDef = /** @type {?} */(( view.parentNodeDef));\n    view = view.parent;\n    // content queries\n    const /** @type {?} */ end = tplDef.nodeIndex + tplDef.childCount;\n    for (let /** @type {?} */ i = 0; i <= end; i++) {\n      const /** @type {?} */ nodeDef = view.def.nodes[i];\n      if ((nodeDef.flags & NodeFlags.TypeContentQuery) &&\n          (nodeDef.flags & NodeFlags.DynamicQuery) &&\n          ( /** @type {?} */((nodeDef.query)).filterId & queryIds) === /** @type {?} */(( nodeDef.query)).filterId) {\n        asQueryList(view, i).setDirty();\n      }\n      if ((nodeDef.flags & NodeFlags.TypeElement && i + nodeDef.childCount < tplDef.nodeIndex) ||\n          !(nodeDef.childFlags & NodeFlags.TypeContentQuery) ||\n          !(nodeDef.childFlags & NodeFlags.DynamicQuery)) {\n        // skip elements that don't contain the template element or no query.\n        i += nodeDef.childCount;\n      }\n    }\n  }\n\n  // view queries\n  if (view.def.nodeFlags & NodeFlags.TypeViewQuery) {\n    for (let /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n      const /** @type {?} */ nodeDef = view.def.nodes[i];\n      if ((nodeDef.flags & NodeFlags.TypeViewQuery) && (nodeDef.flags & NodeFlags.DynamicQuery)) {\n        asQueryList(view, i).setDirty();\n      }\n      // only visit the root nodes\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nexport function checkAndUpdateQuery(view: ViewData, nodeDef: NodeDef) {\n  const /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n  if (!queryList.dirty) {\n    return;\n  }\n  let /** @type {?} */ directiveInstance: any;\n  let /** @type {?} */ newValues: any[] = /** @type {?} */(( undefined));\n  if (nodeDef.flags & NodeFlags.TypeContentQuery) {\n    const /** @type {?} */ elementDef = /** @type {?} */(( /** @type {?} */(( nodeDef.parent)).parent));\n    newValues = calcQueryValues(\n        view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, /** @type {?} */(( nodeDef.query)),\n        []);\n    directiveInstance = asProviderData(view, /** @type {?} */(( nodeDef.parent)).nodeIndex).instance;\n  } else if (nodeDef.flags & NodeFlags.TypeViewQuery) {\n    newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */(( nodeDef.query)), []);\n    directiveInstance = view.component;\n  }\n  queryList.reset(newValues);\n  const /** @type {?} */ bindings = /** @type {?} */(( nodeDef.query)).bindings;\n  let /** @type {?} */ notify = false;\n  for (let /** @type {?} */ i = 0; i < bindings.length; i++) {\n    const /** @type {?} */ binding = bindings[i];\n    let /** @type {?} */ boundValue: any;\n    switch (binding.bindingType) {\n      case QueryBindingType.First:\n        boundValue = queryList.first;\n        break;\n      case QueryBindingType.All:\n        boundValue = queryList;\n        notify = true;\n        break;\n    }\n    directiveInstance[binding.propName] = boundValue;\n  }\n  if (notify) {\n    queryList.notifyOnChanges();\n  }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(\n    view: ViewData, startIndex: number, endIndex: number, queryDef: QueryDef,\n    values: any[]): any[] {\n  for (let /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    const /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n    if (valueType != null) {\n      values.push(getQueryValue(view, nodeDef, valueType));\n    }\n    if (nodeDef.flags & NodeFlags.TypeElement && /** @type {?} */(( nodeDef.element)).template &&\n        ( /** @type {?} */(( /** @type {?} */((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n            queryDef.filterId) {\n      const /** @type {?} */ elementData = asElementData(view, i);\n      // check embedded views that were attached at the place of their template,\n      // but process child nodes first if some match the query (see issue #16568)\n      if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n        calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n        i += nodeDef.childCount;\n      }\n      if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n        const /** @type {?} */ embeddedViews = /** @type {?} */(( elementData.viewContainer))._embeddedViews;\n        for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n          const /** @type {?} */ embeddedView = embeddedViews[k];\n          const /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n          if (dvc && dvc === elementData) {\n            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n          }\n        }\n      }\n      const /** @type {?} */ projectedViews = elementData.template._projectedViews;\n      if (projectedViews) {\n        for (let /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n          const /** @type {?} */ projectedView = projectedViews[k];\n          calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n        }\n      }\n    }\n    if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n      // if no child matches the query, skip the children.\n      i += nodeDef.childCount;\n    }\n  }\n  return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nexport function getQueryValue(\n    view: ViewData, nodeDef: NodeDef, queryValueType: QueryValueType): any {\n  if (queryValueType != null) {\n    // a match\n    switch (queryValueType) {\n      case QueryValueType.RenderElement:\n        return asElementData(view, nodeDef.nodeIndex).renderElement;\n      case QueryValueType.ElementRef:\n        return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n      case QueryValueType.TemplateRef:\n        return asElementData(view, nodeDef.nodeIndex).template;\n      case QueryValueType.ViewContainerRef:\n        return asElementData(view, nodeDef.nodeIndex).viewContainer;\n      case QueryValueType.Provider:\n        return asProviderData(view, nodeDef.nodeIndex).instance;\n    }\n  }\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NodeDef, NodeFlags, ViewData} from './types';\nimport {RenderNodeAction, getParentRenderElement, visitProjectedRenderNodes} from './util';\n/**\n * @param {?} ngContentIndex\n * @param {?} index\n * @return {?}\n */\nexport function ngContentDef(ngContentIndex: null | number, index: number): NodeDef {\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex: -1,\n    flags: NodeFlags.TypeNgContent,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {}, ngContentIndex,\n    childCount: 0,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: {index}\n  };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function appendNgContent(view: ViewData, renderHost: any, def: NodeDef) {\n  const /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n  if (!parentEl) {\n    // Nothing to do if there is no parent element.\n    return;\n  }\n  const /** @type {?} */ ngContentIndex = /** @type {?} */(( def.ngContent)).index;\n  visitProjectedRenderNodes(\n      view, ngContentIndex, RenderNodeAction.AppendChild, parentEl, null, undefined);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {BindingDef, BindingFlags, NodeDef, NodeFlags, PureExpressionData, ViewData, asPureExpressionData} from './types';\nimport {calcBindingFlags, checkAndUpdateBinding} from './util';\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nexport function purePipeDef(checkIndex: number, argCount: number): NodeDef {\n  // argCount + 1 to include the pipe as first arg\n  return _pureExpressionDef(NodeFlags.TypePurePipe, checkIndex, new Array(argCount + 1));\n}\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nexport function pureArrayDef(checkIndex: number, argCount: number): NodeDef {\n  return _pureExpressionDef(NodeFlags.TypePureArray, checkIndex, new Array(argCount));\n}\n/**\n * @param {?} checkIndex\n * @param {?} propToIndex\n * @return {?}\n */\nexport function pureObjectDef(checkIndex: number, propToIndex: {[p: string]: number}): NodeDef {\n  const /** @type {?} */ keys = Object.keys(propToIndex);\n  const /** @type {?} */ nbKeys = keys.length;\n  const /** @type {?} */ propertyNames = new Array(nbKeys);\n  for (let /** @type {?} */ i = 0; i < nbKeys; i++) {\n    const /** @type {?} */ key = keys[i];\n    const /** @type {?} */ index = propToIndex[key];\n    propertyNames[index] = key;\n  }\n\n  return _pureExpressionDef(NodeFlags.TypePureObject, checkIndex, propertyNames);\n}\n/**\n * @param {?} flags\n * @param {?} checkIndex\n * @param {?} propertyNames\n * @return {?}\n */\nfunction _pureExpressionDef(\n    flags: NodeFlags, checkIndex: number, propertyNames: string[]): NodeDef {\n  const /** @type {?} */ bindings: BindingDef[] = new Array(propertyNames.length);\n  for (let /** @type {?} */ i = 0; i < propertyNames.length; i++) {\n    const /** @type {?} */ prop = propertyNames[i];\n    bindings[i] = {\n      flags: BindingFlags.TypeProperty,\n      name: prop,\n      ns: null,\n      nonMinifiedName: prop,\n      securityContext: null,\n      suffix: null\n    };\n  }\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    ngContentIndex: -1,\n    childCount: 0, bindings,\n    bindingFlags: calcBindingFlags(bindings),\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createPureExpression(view: ViewData, def: NodeDef): PureExpressionData {\n  return {value: undefined};\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdatePureExpressionInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const /** @type {?} */ bindings = def.bindings;\n  let /** @type {?} */ changed = false;\n  const /** @type {?} */ bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n\n  if (changed) {\n    const /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n    let /** @type {?} */ value: any;\n    switch (def.flags & NodeFlags.Types) {\n      case NodeFlags.TypePureArray:\n        value = new Array(bindings.length);\n        if (bindLen > 0) value[0] = v0;\n        if (bindLen > 1) value[1] = v1;\n        if (bindLen > 2) value[2] = v2;\n        if (bindLen > 3) value[3] = v3;\n        if (bindLen > 4) value[4] = v4;\n        if (bindLen > 5) value[5] = v5;\n        if (bindLen > 6) value[6] = v6;\n        if (bindLen > 7) value[7] = v7;\n        if (bindLen > 8) value[8] = v8;\n        if (bindLen > 9) value[9] = v9;\n        break;\n      case NodeFlags.TypePureObject:\n        value = {};\n        if (bindLen > 0) value[ /** @type {?} */((bindings[0].name))] = v0;\n        if (bindLen > 1) value[ /** @type {?} */((bindings[1].name))] = v1;\n        if (bindLen > 2) value[ /** @type {?} */((bindings[2].name))] = v2;\n        if (bindLen > 3) value[ /** @type {?} */((bindings[3].name))] = v3;\n        if (bindLen > 4) value[ /** @type {?} */((bindings[4].name))] = v4;\n        if (bindLen > 5) value[ /** @type {?} */((bindings[5].name))] = v5;\n        if (bindLen > 6) value[ /** @type {?} */((bindings[6].name))] = v6;\n        if (bindLen > 7) value[ /** @type {?} */((bindings[7].name))] = v7;\n        if (bindLen > 8) value[ /** @type {?} */((bindings[8].name))] = v8;\n        if (bindLen > 9) value[ /** @type {?} */((bindings[9].name))] = v9;\n        break;\n      case NodeFlags.TypePurePipe:\n        const /** @type {?} */ pipe = v0;\n        switch (bindLen) {\n          case 1:\n            value = pipe.transform(v0);\n            break;\n          case 2:\n            value = pipe.transform(v1);\n            break;\n          case 3:\n            value = pipe.transform(v1, v2);\n            break;\n          case 4:\n            value = pipe.transform(v1, v2, v3);\n            break;\n          case 5:\n            value = pipe.transform(v1, v2, v3, v4);\n            break;\n          case 6:\n            value = pipe.transform(v1, v2, v3, v4, v5);\n            break;\n          case 7:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n            break;\n          case 8:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n            break;\n          case 9:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n            break;\n          case 10:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        }\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdatePureExpressionDynamic(\n    view: ViewData, def: NodeDef, values: any[]): boolean {\n  const /** @type {?} */ bindings = def.bindings;\n  let /** @type {?} */ changed = false;\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    const /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n    let /** @type {?} */ value: any;\n    switch (def.flags & NodeFlags.Types) {\n      case NodeFlags.TypePureArray:\n        value = values;\n        break;\n      case NodeFlags.TypePureObject:\n        value = {};\n        for (let /** @type {?} */ i = 0; i < values.length; i++) {\n          value[ /** @type {?} */((bindings[i].name))] = values[i];\n        }\n        break;\n      case NodeFlags.TypePurePipe:\n        const /** @type {?} */ pipe = values[0];\n        const /** @type {?} */ params = values.slice(1);\n        value = ( /** @type {?} */((<any>pipe.transform)))(...params);\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {BindingDef, BindingFlags, NodeDef, NodeFlags, TextData, ViewData, asTextData} from './types';\nimport {checkAndUpdateBinding, getParentRenderElement} from './util';\n/**\n * @param {?} checkIndex\n * @param {?} ngContentIndex\n * @param {?} staticText\n * @return {?}\n */\nexport function textDef(\n    checkIndex: number, ngContentIndex: number | null, staticText: string[]): NodeDef {\n  const /** @type {?} */ bindings: BindingDef[] = new Array(staticText.length - 1);\n  for (let /** @type {?} */ i = 1; i < staticText.length; i++) {\n    bindings[i - 1] = {\n      flags: BindingFlags.TypeProperty,\n      name: null,\n      ns: null,\n      nonMinifiedName: null,\n      securityContext: null,\n      suffix: staticText[i],\n    };\n  }\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags: NodeFlags.TypeText,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {}, ngContentIndex,\n    childCount: 0, bindings,\n    bindingFlags: BindingFlags.TypeProperty,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: {prefix: staticText[0]},\n    query: null,\n    ngContent: null,\n  };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function createText(view: ViewData, renderHost: any, def: NodeDef): TextData {\n  let /** @type {?} */ renderNode: any;\n  const /** @type {?} */ renderer = view.renderer;\n  renderNode = renderer.createText( /** @type {?} */((def.text)).prefix);\n  const /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n  if (parentEl) {\n    renderer.appendChild(parentEl, renderNode);\n  }\n  return {renderText: renderNode};\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateTextInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  let /** @type {?} */ changed = false;\n  const /** @type {?} */ bindings = def.bindings;\n  const /** @type {?} */ bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n\n  if (changed) {\n    let /** @type {?} */ value = /** @type {?} */(( def.text)).prefix;\n    if (bindLen > 0) value += _addInterpolationPart(v0, bindings[0]);\n    if (bindLen > 1) value += _addInterpolationPart(v1, bindings[1]);\n    if (bindLen > 2) value += _addInterpolationPart(v2, bindings[2]);\n    if (bindLen > 3) value += _addInterpolationPart(v3, bindings[3]);\n    if (bindLen > 4) value += _addInterpolationPart(v4, bindings[4]);\n    if (bindLen > 5) value += _addInterpolationPart(v5, bindings[5]);\n    if (bindLen > 6) value += _addInterpolationPart(v6, bindings[6]);\n    if (bindLen > 7) value += _addInterpolationPart(v7, bindings[7]);\n    if (bindLen > 8) value += _addInterpolationPart(v8, bindings[8]);\n    if (bindLen > 9) value += _addInterpolationPart(v9, bindings[9]);\n    const /** @type {?} */ renderNode = asTextData(view, def.nodeIndex).renderText;\n    view.renderer.setValue(renderNode, value);\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateTextDynamic(view: ViewData, def: NodeDef, values: any[]): boolean {\n  const /** @type {?} */ bindings = def.bindings;\n  let /** @type {?} */ changed = false;\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    let /** @type {?} */ value = '';\n    for (let /** @type {?} */ i = 0; i < values.length; i++) {\n      value = value + _addInterpolationPart(values[i], bindings[i]);\n    }\n    value = /** @type {?} */(( def.text)).prefix + value;\n    const /** @type {?} */ renderNode = asTextData(view, def.nodeIndex).renderText;\n    view.renderer.setValue(renderNode, value);\n  }\n  return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value: any, binding: BindingDef): string {\n  const /** @type {?} */ valueStr = value != null ? value.toString() : '';\n  return valueStr + binding.suffix;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Renderer2} from '../render/api';\n\nimport {checkAndUpdateElementDynamic, checkAndUpdateElementInline, createElement, listenToElementOutputs} from './element';\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {appendNgContent} from './ng_content';\nimport {callLifecycleHooksChildrenFirst, checkAndUpdateDirectiveDynamic, checkAndUpdateDirectiveInline, createDirectiveInstance, createPipeInstance, createProviderInstance} from './provider';\nimport {checkAndUpdatePureExpressionDynamic, checkAndUpdatePureExpressionInline, createPureExpression} from './pure_expression';\nimport {checkAndUpdateQuery, createQuery} from './query';\nimport {createTemplateData, createViewContainerData} from './refs';\nimport {checkAndUpdateTextDynamic, checkAndUpdateTextInline, createText} from './text';\nimport {ArgumentType, CheckType, ElementData, NodeData, NodeDef, NodeFlags, ProviderData, RootData, Services, ViewData, ViewDefinition, ViewFlags, ViewHandleEventFn, ViewState, ViewUpdateFn, asElementData, asQueryList, asTextData} from './types';\nimport {NOOP, checkBindingNoChanges, isComponentView, markParentViewsForCheckProjectedViews, resolveDefinition, tokenKey} from './util';\nimport {detachProjectedView} from './view_attach';\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nexport function viewDef(\n    flags: ViewFlags, nodes: NodeDef[], updateDirectives?: null | ViewUpdateFn,\n    updateRenderer?: null | ViewUpdateFn): ViewDefinition {\n  // clone nodes and set auto calculated values\n  let /** @type {?} */ viewBindingCount = 0;\n  let /** @type {?} */ viewDisposableCount = 0;\n  let /** @type {?} */ viewNodeFlags = 0;\n  let /** @type {?} */ viewRootNodeFlags = 0;\n  let /** @type {?} */ viewMatchedQueries = 0;\n  let /** @type {?} */ currentParent: NodeDef|null = null;\n  let /** @type {?} */ currentRenderParent: NodeDef|null = null;\n  let /** @type {?} */ currentElementHasPublicProviders = false;\n  let /** @type {?} */ currentElementHasPrivateProviders = false;\n  let /** @type {?} */ lastRenderRootNode: NodeDef|null = null;\n  for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n    const /** @type {?} */ node = nodes[i];\n    node.nodeIndex = i;\n    node.parent = currentParent;\n    node.bindingIndex = viewBindingCount;\n    node.outputIndex = viewDisposableCount;\n    node.renderParent = currentRenderParent;\n\n    viewNodeFlags |= node.flags;\n    viewMatchedQueries |= node.matchedQueryIds;\n\n    if (node.element) {\n      const /** @type {?} */ elDef = node.element;\n      elDef.publicProviders =\n          currentParent ? /** @type {?} */(( currentParent.element)).publicProviders : Object.create(null);\n      elDef.allProviders = elDef.publicProviders;\n      // Note: We assume that all providers of an element are before any child element!\n      currentElementHasPublicProviders = false;\n      currentElementHasPrivateProviders = false;\n\n      if (node.element.template) {\n        viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n      }\n    }\n    validateNode(currentParent, node, nodes.length);\n\n\n    viewBindingCount += node.bindings.length;\n    viewDisposableCount += node.outputs.length;\n\n    if (!currentRenderParent && (node.flags & NodeFlags.CatRenderNode)) {\n      lastRenderRootNode = node;\n    }\n\n    if (node.flags & NodeFlags.CatProvider) {\n      if (!currentElementHasPublicProviders) {\n        currentElementHasPublicProviders = true; /** @type {?} */(( /** @type {?} */((\n        // Use prototypical inheritance to not get O(n^2) complexity...\n        currentParent)).element)).publicProviders =\n            Object.create( /** @type {?} */(( /** @type {?} */((currentParent)).element)).publicProviders); /** @type {?} */(( /** @type {?} */((\n        currentParent)).element)).allProviders = /** @type {?} */(( /** @type {?} */(( currentParent)).element)).publicProviders;\n      }\n      const /** @type {?} */ isPrivateService = (node.flags & NodeFlags.PrivateProvider) !== 0;\n      const /** @type {?} */ isComponent = (node.flags & NodeFlags.Component) !== 0;\n      if (!isPrivateService || isComponent) { /** @type {?} */(( /** @type {?} */(( /** @type {?} */((\n        currentParent)).element)).publicProviders))[tokenKey( /** @type {?} */((node.provider)).token)] = node;\n      } else {\n        if (!currentElementHasPrivateProviders) {\n          currentElementHasPrivateProviders = true; /** @type {?} */(( /** @type {?} */((\n          // Use prototypical inheritance to not get O(n^2) complexity...\n          currentParent)).element)).allProviders =\n              Object.create( /** @type {?} */(( /** @type {?} */((currentParent)).element)).publicProviders);\n        } /** @type {?} */(( /** @type {?} */(( /** @type {?} */((\n        currentParent)).element)).allProviders))[tokenKey( /** @type {?} */((node.provider)).token)] = node;\n      }\n      if (isComponent) { /** @type {?} */(( /** @type {?} */((\n        currentParent)).element)).componentProvider = node;\n      }\n    }\n\n    if (currentParent) {\n      currentParent.childFlags |= node.flags;\n      currentParent.directChildFlags |= node.flags;\n      currentParent.childMatchedQueries |= node.matchedQueryIds;\n      if (node.element && node.element.template) {\n        currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n      }\n    } else {\n      viewRootNodeFlags |= node.flags;\n    }\n\n    if (node.childCount > 0) {\n      currentParent = node;\n\n      if (!isNgContainer(node)) {\n        currentRenderParent = node;\n      }\n    } else {\n      // When the current node has no children, check if it is the last children of its parent.\n      // When it is, propagate the flags up.\n      // The loop is required because an element could be the last transitive children of several\n      // elements. We loop to either the root or the highest opened element (= with remaining\n      // children)\n      while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n        const /** @type {?} */ newParent: NodeDef|null = currentParent.parent;\n        if (newParent) {\n          newParent.childFlags |= currentParent.childFlags;\n          newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n        }\n        currentParent = newParent;\n        // We also need to update the render parent & account for ng-container\n        if (currentParent && isNgContainer(currentParent)) {\n          currentRenderParent = currentParent.renderParent;\n        } else {\n          currentRenderParent = currentParent;\n        }\n      }\n    }\n  }\n\n  const /** @type {?} */ handleEvent: ViewHandleEventFn = (view, nodeIndex, eventName, event) => /** @type {?} */(( /** @type {?} */((\n      nodes[nodeIndex].element)).handleEvent))(view, eventName, event);\n\n  return {\n    // Will be filled later...\n    factory: null,\n    nodeFlags: viewNodeFlags,\n    rootNodeFlags: viewRootNodeFlags,\n    nodeMatchedQueries: viewMatchedQueries, flags,\n    nodes: nodes,\n    updateDirectives: updateDirectives || NOOP,\n    updateRenderer: updateRenderer || NOOP, handleEvent,\n    bindingCount: viewBindingCount,\n    outputCount: viewDisposableCount, lastRenderRootNode\n  };\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isNgContainer(node: NodeDef): boolean {\n  return (node.flags & NodeFlags.TypeElement) !== 0 && /** @type {?} */(( node.element)).name === null;\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent: NodeDef | null, node: NodeDef, nodeCount: number) {\n  const /** @type {?} */ template = node.element && node.element.template;\n  if (template) {\n    if (!template.lastRenderRootNode) {\n      throw new Error(`Illegal State: Embedded templates without nodes are not allowed!`);\n    }\n    if (template.lastRenderRootNode &&\n        template.lastRenderRootNode.flags & NodeFlags.EmbeddedViews) {\n      throw new Error(\n          `Illegal State: Last root node of a template can't have embedded views, at index ${node.nodeIndex}!`);\n    }\n  }\n  if (node.flags & NodeFlags.CatProvider) {\n    const /** @type {?} */ parentFlags = parent ? parent.flags : 0;\n    if ((parentFlags & NodeFlags.TypeElement) === 0) {\n      throw new Error(\n          `Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index ${node.nodeIndex}!`);\n    }\n  }\n  if (node.query) {\n    if (node.flags & NodeFlags.TypeContentQuery &&\n        (!parent || (parent.flags & NodeFlags.TypeDirective) === 0)) {\n      throw new Error(\n          `Illegal State: Content Query nodes need to be children of directives, at index ${node.nodeIndex}!`);\n    }\n    if (node.flags & NodeFlags.TypeViewQuery && parent) {\n      throw new Error(\n          `Illegal State: View Query nodes have to be top level nodes, at index ${node.nodeIndex}!`);\n    }\n  }\n  if (node.childCount) {\n    const /** @type {?} */ parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n    if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n      throw new Error(\n          `Illegal State: childCount of node leads outside of parent, at index ${node.nodeIndex}!`);\n    }\n  }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nexport function createEmbeddedView(\n    parent: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any): ViewData {\n  // embedded views are seen as siblings to the anchor, so we need\n  // to get the parent of the anchor and use it as parentIndex.\n  const /** @type {?} */ view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n  initView(view, parent.component, context);\n  createViewNodes(view);\n  return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nexport function createRootView(root: RootData, def: ViewDefinition, context?: any): ViewData {\n  const /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n  initView(view, context, context);\n  createViewNodes(view);\n  return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nexport function createComponentView(\n    parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData {\n  const /** @type {?} */ rendererType = /** @type {?} */(( nodeDef.element)).componentRendererType;\n  let /** @type {?} */ compRenderer: Renderer2;\n  if (!rendererType) {\n    compRenderer = parentView.root.renderer;\n  } else {\n    compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n  }\n  return createView(\n      parentView.root, compRenderer, parentView, /** @type {?} */(( nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(\n    root: RootData, renderer: Renderer2, parent: ViewData | null, parentNodeDef: NodeDef | null,\n    def: ViewDefinition): ViewData {\n  const /** @type {?} */ nodes: NodeData[] = new Array(def.nodes.length);\n  const /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : null;\n  const /** @type {?} */ view: ViewData = {\n    def,\n    parent,\n    viewContainerParent: null, parentNodeDef,\n    context: null,\n    component: null, nodes,\n    state: ViewState.CatInit, root, renderer,\n    oldValues: new Array(def.bindingCount), disposables\n  };\n  return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view: ViewData, component: any, context: any) {\n  view.component = component;\n  view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view: ViewData) {\n  let /** @type {?} */ renderHost: any;\n  if (isComponentView(view)) {\n    const /** @type {?} */ hostDef = view.parentNodeDef;\n    renderHost = asElementData( /** @type {?} */((view.parent)), /** @type {?} */(( /** @type {?} */(( hostDef)).parent)).nodeIndex).renderElement;\n  }\n  const /** @type {?} */ def = view.def;\n  const /** @type {?} */ nodes = view.nodes;\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    Services.setCurrentNode(view, i);\n    let /** @type {?} */ nodeData: any;\n    switch (nodeDef.flags & NodeFlags.Types) {\n      case NodeFlags.TypeElement:\n        const /** @type {?} */ el = /** @type {?} */(( createElement(view, renderHost, nodeDef) as any));\n        let /** @type {?} */ componentView: ViewData = /** @type {?} */(( undefined));\n        if (nodeDef.flags & NodeFlags.ComponentView) {\n          const /** @type {?} */ compViewDef = resolveDefinition( /** @type {?} */(( /** @type {?} */((nodeDef.element)).componentView)));\n          componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n        }\n        listenToElementOutputs(view, componentView, nodeDef, el);\n        nodeData = /** @type {?} */(( <ElementData>{\n          renderElement: el,\n          componentView,\n          viewContainer: null,\n          template: /** @type {?} */(( nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n        }));\n        if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n          nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n        }\n        break;\n      case NodeFlags.TypeText:\n        nodeData = /** @type {?} */(( createText(view, renderHost, nodeDef) as any));\n        break;\n      case NodeFlags.TypeClassProvider:\n      case NodeFlags.TypeFactoryProvider:\n      case NodeFlags.TypeUseExistingProvider:\n      case NodeFlags.TypeValueProvider: {\n        nodeData = nodes[i];\n        if (!nodeData && !(nodeDef.flags & NodeFlags.LazyProvider)) {\n          const /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n          nodeData = /** @type {?} */(( <ProviderData>{instance}));\n        }\n        break;\n      }\n      case NodeFlags.TypePipe: {\n        const /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n        nodeData = /** @type {?} */(( <ProviderData>{instance}));\n        break;\n      }\n      case NodeFlags.TypeDirective: {\n        nodeData = nodes[i];\n        if (!nodeData) {\n          const /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n          nodeData = /** @type {?} */(( <ProviderData>{instance}));\n        }\n        if (nodeDef.flags & NodeFlags.Component) {\n          const /** @type {?} */ compView = asElementData(view, /** @type {?} */(( nodeDef.parent)).nodeIndex).componentView;\n          initView(compView, nodeData.instance, nodeData.instance);\n        }\n        break;\n      }\n      case NodeFlags.TypePureArray:\n      case NodeFlags.TypePureObject:\n      case NodeFlags.TypePurePipe:\n        nodeData = /** @type {?} */(( createPureExpression(view, nodeDef) as any));\n        break;\n      case NodeFlags.TypeContentQuery:\n      case NodeFlags.TypeViewQuery:\n        nodeData = /** @type {?} */(( createQuery() as any));\n        break;\n      case NodeFlags.TypeNgContent:\n        appendNgContent(view, renderHost, nodeDef);\n        // no runtime data needed for NgContent...\n        nodeData = undefined;\n        break;\n    }\n    nodes[i] = nodeData;\n  }\n  // Create the ViewData.nodes of component views after we created everything else,\n  // so that e.g. ng-content works\n  execComponentViewsAction(view, ViewAction.CreateViewNodes);\n\n  // fill static content and view queries\n  execQueriesAction(\n      view, NodeFlags.TypeContentQuery | NodeFlags.TypeViewQuery, NodeFlags.StaticQuery,\n      CheckType.CheckAndUpdate);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkNoChangesView(view: ViewData) {\n  markProjectedViewsForCheck(view);\n  Services.updateDirectives(view, CheckType.CheckNoChanges);\n  execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n  Services.updateRenderer(view, CheckType.CheckNoChanges);\n  execComponentViewsAction(view, ViewAction.CheckNoChanges);\n  // Note: We don't check queries for changes as we didn't do this in v2.x.\n  // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n  view.state &= ~(ViewState.CheckProjectedViews | ViewState.CheckProjectedView);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkAndUpdateView(view: ViewData) {\n  if (view.state & ViewState.BeforeFirstCheck) {\n    view.state &= ~ViewState.BeforeFirstCheck;\n    view.state |= ViewState.FirstCheck;\n  } else {\n    view.state &= ~ViewState.FirstCheck;\n  }\n  markProjectedViewsForCheck(view);\n  Services.updateDirectives(view, CheckType.CheckAndUpdate);\n  execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.TypeContentQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterContentChecked |\n          (view.state & ViewState.FirstCheck ? NodeFlags.AfterContentInit : 0));\n\n  Services.updateRenderer(view, CheckType.CheckAndUpdate);\n\n  execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.TypeViewQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterViewChecked |\n          (view.state & ViewState.FirstCheck ? NodeFlags.AfterViewInit : 0));\n\n  if (view.def.flags & ViewFlags.OnPush) {\n    view.state &= ~ViewState.ChecksEnabled;\n  }\n  view.state &= ~(ViewState.CheckProjectedViews | ViewState.CheckProjectedView);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nexport function checkAndUpdateNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): boolean {\n  if (argStyle === ArgumentType.Inline) {\n    return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view: ViewData) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.ProjectedTemplate)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.ProjectedTemplate) {\n      const /** @type {?} */ projectedViews = asElementData(view, i).template._projectedViews;\n      if (projectedViews) {\n        for (let /** @type {?} */ i = 0; i < projectedViews.length; i++) {\n          const /** @type {?} */ projectedView = projectedViews[i];\n          projectedView.state |= ViewState.CheckProjectedView;\n          markParentViewsForCheckProjectedViews(projectedView, view);\n        }\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.ProjectedTemplate) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(\n    view: ViewData, nodeDef: NodeDef, v0?: any, v1?: any, v2?: any, v3?: any, v4?: any, v5?: any,\n    v6?: any, v7?: any, v8?: any, v9?: any): boolean {\n  switch (nodeDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeFlags.TypeText:\n      return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeFlags.TypeDirective:\n      return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeFlags.TypePureArray:\n    case NodeFlags.TypePureObject:\n    case NodeFlags.TypePurePipe:\n      return checkAndUpdatePureExpressionInline(\n          view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    default:\n      throw 'unreachable';\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view: ViewData, nodeDef: NodeDef, values: any[]): boolean {\n  switch (nodeDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      return checkAndUpdateElementDynamic(view, nodeDef, values);\n    case NodeFlags.TypeText:\n      return checkAndUpdateTextDynamic(view, nodeDef, values);\n    case NodeFlags.TypeDirective:\n      return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n    case NodeFlags.TypePureArray:\n    case NodeFlags.TypePureObject:\n    case NodeFlags.TypePurePipe:\n      return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n    default:\n      throw 'unreachable';\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nexport function checkNoChangesNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  if (argStyle === ArgumentType.Inline) {\n    checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    checkNoChangesNodeDynamic(view, nodeDef, v0);\n  }\n  // Returning false is ok here as we would have thrown in case of a change.\n  return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(\n    view: ViewData, nodeDef: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): void {\n  const /** @type {?} */ bindLen = nodeDef.bindings.length;\n  if (bindLen > 0) checkBindingNoChanges(view, nodeDef, 0, v0);\n  if (bindLen > 1) checkBindingNoChanges(view, nodeDef, 1, v1);\n  if (bindLen > 2) checkBindingNoChanges(view, nodeDef, 2, v2);\n  if (bindLen > 3) checkBindingNoChanges(view, nodeDef, 3, v3);\n  if (bindLen > 4) checkBindingNoChanges(view, nodeDef, 4, v4);\n  if (bindLen > 5) checkBindingNoChanges(view, nodeDef, 5, v5);\n  if (bindLen > 6) checkBindingNoChanges(view, nodeDef, 6, v6);\n  if (bindLen > 7) checkBindingNoChanges(view, nodeDef, 7, v7);\n  if (bindLen > 8) checkBindingNoChanges(view, nodeDef, 8, v8);\n  if (bindLen > 9) checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view: ViewData, nodeDef: NodeDef, values: any[]): void {\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    checkBindingNoChanges(view, nodeDef, i, values[i]);\n  }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view: ViewData, nodeDef: NodeDef) {\n  const /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n  if (queryList.dirty) {\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, nodeDef.nodeIndex),\n        `Query ${ /** @type {?} */((nodeDef.query)).id} not dirty`, `Query ${ /** @type {?} */((nodeDef.query)).id} dirty`,\n        (view.state & ViewState.BeforeFirstCheck) !== 0);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function destroyView(view: ViewData) {\n  if (view.state & ViewState.Destroyed) {\n    return;\n  }\n  execEmbeddedViewsAction(view, ViewAction.Destroy);\n  execComponentViewsAction(view, ViewAction.Destroy);\n  callLifecycleHooksChildrenFirst(view, NodeFlags.OnDestroy);\n  if (view.disposables) {\n    for (let /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n      view.disposables[i]();\n    }\n  }\n  detachProjectedView(view);\n  if (view.renderer.destroyNode) {\n    destroyViewNodes(view);\n  }\n  if (isComponentView(view)) {\n    view.renderer.destroy();\n  }\n  view.state |= ViewState.Destroyed;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view: ViewData) {\n  const /** @type {?} */ len = view.def.nodes.length;\n  for (let /** @type {?} */ i = 0; i < len; i++) {\n    const /** @type {?} */ def = view.def.nodes[i];\n    if (def.flags & NodeFlags.TypeElement) { /** @type {?} */((\n      view.renderer.destroyNode))(asElementData(view, i).renderElement);\n    } else if (def.flags & NodeFlags.TypeText) { /** @type {?} */((\n      view.renderer.destroyNode))(asTextData(view, i).renderText);\n    } else if (def.flags & NodeFlags.TypeContentQuery || def.flags & NodeFlags.TypeViewQuery) {\n      asQueryList(view, i).destroy();\n    }\n  }\n}\ntype ViewAction = number;\nlet ViewAction: any = {};\nViewAction.CreateViewNodes = 0;\nViewAction.CheckNoChanges = 1;\nViewAction.CheckNoChangesProjectedViews = 2;\nViewAction.CheckAndUpdate = 3;\nViewAction.CheckAndUpdateProjectedViews = 4;\nViewAction.Destroy = 5;\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckNoChangesProjectedViews] = \"CheckNoChangesProjectedViews\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = \"CheckAndUpdateProjectedViews\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.ComponentView)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.ComponentView) {\n      // a leaf\n      callViewAction(asElementData(view, i).componentView, action);\n    } else if ((nodeDef.childFlags & NodeFlags.ComponentView) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.EmbeddedViews)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n      // a leaf\n      const /** @type {?} */ embeddedViews = /** @type {?} */(( asElementData(view, i).viewContainer))._embeddedViews;\n      for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n        callViewAction(embeddedViews[k], action);\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.EmbeddedViews) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ viewState = view.state;\n  switch (action) {\n    case ViewAction.CheckNoChanges:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if ((viewState & ViewState.CatDetectChanges) === ViewState.CatDetectChanges) {\n          checkNoChangesView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n        }\n      }\n      break;\n    case ViewAction.CheckNoChangesProjectedViews:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if (viewState & ViewState.CheckProjectedView) {\n          checkNoChangesView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, action);\n        }\n      }\n      break;\n    case ViewAction.CheckAndUpdate:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if ((viewState & ViewState.CatDetectChanges) === ViewState.CatDetectChanges) {\n          checkAndUpdateView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n        }\n      }\n      break;\n    case ViewAction.CheckAndUpdateProjectedViews:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if (viewState & ViewState.CheckProjectedView) {\n          checkAndUpdateView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, action);\n        }\n      }\n      break;\n    case ViewAction.Destroy:\n      // Note: destroyView recurses over all views,\n      // so we don't need to special case projected views here.\n      destroyView(view);\n      break;\n    case ViewAction.CreateViewNodes:\n      createViewNodes(view);\n      break;\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view: ViewData, action: ViewAction) {\n  execEmbeddedViewsAction(view, action);\n  execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(\n    view: ViewData, queryFlags: NodeFlags, staticDynamicQueryFlag: NodeFlags,\n    checkType: CheckType) {\n  if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n    return;\n  }\n  const /** @type {?} */ nodeCount = view.def.nodes.length;\n  for (let /** @type {?} */ i = 0; i < nodeCount; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n      Services.setCurrentNode(view, nodeDef.nodeIndex);\n      switch (checkType) {\n        case CheckType.CheckAndUpdate:\n          checkAndUpdateQuery(view, nodeDef);\n          break;\n        case CheckType.CheckNoChanges:\n          checkNoChangesQuery(view, nodeDef);\n          break;\n      }\n    }\n    if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n      // no child has a matching query\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {isDevMode} from '../application_ref';\nimport {DebugElement, DebugNode, EventListener, getDebugNode, indexDebugNode, removeDebugNodeFromIndex} from '../debug/debug_node';\nimport {Injector} from '../di';\nimport {ErrorHandler} from '../error_handler';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2} from '../render/api';\nimport {Sanitizer} from '../security';\nimport {Type} from '../type';\n\nimport {isViewDebugError, viewDestroyedError, viewWrappedDebugError} from './errors';\nimport {resolveDep} from './provider';\nimport {dirtyParentQueries, getQueryValue} from './query';\nimport {createInjector, createNgModuleRef} from './refs';\nimport {ArgumentType, BindingFlags, CheckType, DebugContext, DepDef, ElementData, NgModuleDefinition, NgModuleProviderDef, NodeDef, NodeFlags, NodeLogger, ProviderOverride, RootData, Services, ViewData, ViewDefinition, ViewState, asElementData, asPureExpressionData} from './types';\nimport {NOOP, isComponentView, renderNode, splitDepsDsl, viewParentEl} from './util';\nimport {checkAndUpdateNode, checkAndUpdateView, checkNoChangesNode, checkNoChangesView, createComponentView, createEmbeddedView, createRootView, destroyView} from './view';\n\n\nlet /** @type {?} */ initialized = false;\n/**\n * @return {?}\n */\nexport function initServicesIfNeeded() {\n  if (initialized) {\n    return;\n  }\n  initialized = true;\n  const /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n  Services.setCurrentNode = services.setCurrentNode;\n  Services.createRootView = services.createRootView;\n  Services.createEmbeddedView = services.createEmbeddedView;\n  Services.createComponentView = services.createComponentView;\n  Services.createNgModuleRef = services.createNgModuleRef;\n  Services.overrideProvider = services.overrideProvider;\n  Services.clearProviderOverrides = services.clearProviderOverrides;\n  Services.checkAndUpdateView = services.checkAndUpdateView;\n  Services.checkNoChangesView = services.checkNoChangesView;\n  Services.destroyView = services.destroyView;\n  Services.resolveDep = resolveDep;\n  Services.createDebugContext = services.createDebugContext;\n  Services.handleEvent = services.handleEvent;\n  Services.updateDirectives = services.updateDirectives;\n  Services.updateRenderer = services.updateRenderer;\n  Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n  return {\n    setCurrentNode: () => {},\n    createRootView: createProdRootView,\n    createEmbeddedView: createEmbeddedView,\n    createComponentView: createComponentView,\n    createNgModuleRef: createNgModuleRef,\n    overrideProvider: NOOP,\n    clearProviderOverrides: NOOP,\n    checkAndUpdateView: checkAndUpdateView,\n    checkNoChangesView: checkNoChangesView,\n    destroyView: destroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: (view: ViewData, nodeIndex: number, eventName: string, event: any) =>\n                     view.def.handleEvent(view, nodeIndex, eventName, event),\n    updateDirectives: (view: ViewData, checkType: CheckType) => view.def.updateDirectives(\n                          checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                   prodCheckNoChangesNode,\n                          view),\n    updateRenderer: (view: ViewData, checkType: CheckType) => view.def.updateRenderer(\n                        checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                 prodCheckNoChangesNode,\n                        view),\n  };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n  return {\n    setCurrentNode: debugSetCurrentNode,\n    createRootView: debugCreateRootView,\n    createEmbeddedView: debugCreateEmbeddedView,\n    createComponentView: debugCreateComponentView,\n    createNgModuleRef: debugCreateNgModuleRef,\n    overrideProvider: debugOverrideProvider,\n    clearProviderOverrides: debugClearProviderOverrides,\n    checkAndUpdateView: debugCheckAndUpdateView,\n    checkNoChangesView: debugCheckNoChangesView,\n    destroyView: debugDestroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: debugHandleEvent,\n    updateDirectives: debugUpdateDirectives,\n    updateRenderer: debugUpdateRenderer,\n  };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const /** @type {?} */ rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  return createRootView(\n      createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode),\n      def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const /** @type {?} */ rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  const /** @type {?} */ root = createRootData(\n      elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes,\n      rootSelectorOrNode);\n  const /** @type {?} */ defWithOverride = applyProviderOverridesToView(def);\n  return callWithDebugContext(\n      DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(\n    elInjector: Injector, ngModule: NgModuleRef<any>, rendererFactory: RendererFactory2,\n    projectableNodes: any[][], rootSelectorOrNode: any): RootData {\n  const /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n  const /** @type {?} */ errorHandler = ngModule.injector.get(ErrorHandler);\n  const /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n  return {\n    ngModule,\n    injector: elInjector, projectableNodes,\n    selectorOrNode: rootSelectorOrNode, sanitizer, rendererFactory, renderer, errorHandler\n  };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(\n    parentView: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any): ViewData {\n  const /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef);\n  return callWithDebugContext(\n      DebugAction.create, createEmbeddedView, null,\n      [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(\n    parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData {\n  const /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef);\n  return callWithDebugContext(\n      DebugAction.create, createComponentView, null,\n      [parentView, nodeDef, defWithOverride, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(\n    moduleType: Type<any>, parentInjector: Injector, bootstrapComponents: Type<any>[],\n    def: NgModuleDefinition): NgModuleRef<any> {\n  const /** @type {?} */ defWithOverride = applyProviderOverridesToNgModule(def);\n  return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\n\nconst /** @type {?} */ providerOverrides = new Map<any, ProviderOverride>();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override: ProviderOverride) {\n  providerOverrides.set(override.token, override);\n}\n/**\n * @return {?}\n */\nfunction debugClearProviderOverrides() {\n  providerOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def: ViewDefinition): ViewDefinition {\n  if (providerOverrides.size === 0) {\n    return def;\n  }\n  const /** @type {?} */ elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n  if (elementIndicesWithOverwrittenProviders.length === 0) {\n    return def;\n  }\n  // clone the whole view definition,\n  // as it maintains references between the nodes that are hard to update.\n  def = /** @type {?} */(( def.factory))(() => NOOP);\n  for (let /** @type {?} */ i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n    applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n  }\n  return def;\n/**\n * @param {?} def\n * @return {?}\n */\nfunction findElementIndicesWithOverwrittenProviders(def: ViewDefinition): number[] {\n    const /** @type {?} */ elIndicesWithOverwrittenProviders: number[] = [];\n    let /** @type {?} */ lastElementDef: NodeDef|null = null;\n    for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n      const /** @type {?} */ nodeDef = def.nodes[i];\n      if (nodeDef.flags & NodeFlags.TypeElement) {\n        lastElementDef = nodeDef;\n      }\n      if (lastElementDef && nodeDef.flags & NodeFlags.CatProviderNoDirective &&\n          providerOverrides.has( /** @type {?} */((nodeDef.provider)).token)) {\n        elIndicesWithOverwrittenProviders.push( /** @type {?} */((lastElementDef)).nodeIndex);\n        lastElementDef = null;\n      }\n    }\n    return elIndicesWithOverwrittenProviders;\n  }\n/**\n * @param {?} viewDef\n * @param {?} elIndex\n * @return {?}\n */\nfunction applyProviderOverridesToElement(viewDef: ViewDefinition, elIndex: number) {\n    for (let /** @type {?} */ i = elIndex + 1; i < viewDef.nodes.length; i++) {\n      const /** @type {?} */ nodeDef = viewDef.nodes[i];\n      if (nodeDef.flags & NodeFlags.TypeElement) {\n        // stop at the next element\n        return;\n      }\n      if (nodeDef.flags & NodeFlags.CatProviderNoDirective) {\n        const /** @type {?} */ provider = /** @type {?} */(( nodeDef.provider));\n        const /** @type {?} */ override = providerOverrides.get(provider.token);\n        if (override) {\n          nodeDef.flags = (nodeDef.flags & ~NodeFlags.CatProviderNoDirective) | override.flags;\n          provider.deps = splitDepsDsl(override.deps);\n          provider.value = override.value;\n        }\n      }\n    }\n  }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def: NgModuleDefinition): NgModuleDefinition {\n  const {hasOverrides, hasDeprecatedOverrides} = calcHasOverrides(def);\n  if (!hasOverrides) {\n    return def;\n  }\n  // clone the whole view definition,\n  // as it maintains references between the nodes that are hard to update.\n  def = /** @type {?} */(( def.factory))(() => NOOP);\n  applyProviderOverrides(def);\n  return def;\n/**\n * @param {?} def\n * @return {?}\n */\nfunction calcHasOverrides(def: NgModuleDefinition):\n      {hasOverrides: boolean, hasDeprecatedOverrides: boolean} {\n    let /** @type {?} */ hasOverrides = false;\n    let /** @type {?} */ hasDeprecatedOverrides = false;\n    if (providerOverrides.size === 0) {\n      return {hasOverrides, hasDeprecatedOverrides};\n    }\n    def.providers.forEach(node => {\n      const /** @type {?} */ override = providerOverrides.get(node.token);\n      if ((node.flags & NodeFlags.CatProviderNoDirective) && override) {\n        hasOverrides = true;\n        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n      }\n    });\n    return {hasOverrides, hasDeprecatedOverrides};\n  }\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverrides(def: NgModuleDefinition) {\n    for (let /** @type {?} */ i = 0; i < def.providers.length; i++) {\n      const /** @type {?} */ provider = def.providers[i];\n      if (hasDeprecatedOverrides) {\n        // We had a bug where me made\n        // all providers lazy. Keep this logic behind a flag\n        // for migrating existing users.\n        provider.flags |= NodeFlags.LazyProvider;\n      }\n      const /** @type {?} */ override = providerOverrides.get(provider.token);\n      if (override) {\n        provider.flags = (provider.flags & ~NodeFlags.CatProviderNoDirective) | override.flags;\n        provider.deps = splitDepsDsl(override.deps);\n        provider.value = override.value;\n      }\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(\n    view: ViewData, checkIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n  checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, checkIndex).value :\n      undefined;\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(\n    view: ViewData, checkIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n  checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, checkIndex).value :\n      undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view: ViewData) {\n  return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view: ViewData) {\n  return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view: ViewData) {\n  return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\ntype DebugAction = number;\nlet DebugAction: any = {};\nDebugAction.create = 0;\nDebugAction.detectChanges = 1;\nDebugAction.checkNoChanges = 2;\nDebugAction.destroy = 3;\nDebugAction.handleEvent = 4;\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\n\n\nlet /** @type {?} */ _currentAction: DebugAction;\nlet /** @type {?} */ _currentView: ViewData;\nlet /** @type {?} */ _currentNodeIndex: number|null;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view: ViewData, nodeIndex: number | null) {\n  _currentView = view;\n  _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view: ViewData, nodeIndex: number, eventName: string, event: any) {\n  debugSetCurrentNode(view, nodeIndex);\n  return callWithDebugContext(\n      DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n  return view.def.updateDirectives(debugCheckDirectivesFn, view);\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {...?} values\n * @return {?}\n */\nfunction debugCheckDirectivesFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.TypeDirective) {\n      debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.nodeIndex).value :\n        undefined;\n  }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n  return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {...?} values\n * @return {?}\n */\nfunction debugCheckRenderNodeFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.CatRenderNode) {\n      debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.nodeIndex).value :\n        undefined;\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, givenValues: any[]): void {\n  const /** @type {?} */ changed = ( /** @type {?} */((<any>checkAndUpdateNode)))(view, nodeDef, argStyle, ...givenValues);\n  if (changed) {\n    const /** @type {?} */ values = argStyle === ArgumentType.Dynamic ? givenValues[0] : givenValues;\n    if (nodeDef.flags & NodeFlags.TypeDirective) {\n      const /** @type {?} */ bindingValues: {[key: string]: string} = {};\n      for (let /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n        const /** @type {?} */ binding = nodeDef.bindings[i];\n        const /** @type {?} */ value = values[i];\n        if (binding.flags & BindingFlags.TypeProperty) {\n          bindingValues[normalizeDebugBindingName( /** @type {?} */((binding.nonMinifiedName)))] =\n              normalizeDebugBindingValue(value);\n        }\n      }\n      const /** @type {?} */ elDef = /** @type {?} */(( nodeDef.parent));\n      const /** @type {?} */ el = asElementData(view, elDef.nodeIndex).renderElement;\n      if (! /** @type {?} */((elDef.element)).name) {\n        // a comment.\n        view.renderer.setValue(el, `bindings=${JSON.stringify(bindingValues, null, 2)}`);\n      } else {\n        // a regular element.\n        for (let /** @type {?} */ attr in bindingValues) {\n          const /** @type {?} */ value = bindingValues[attr];\n          if (value != null) {\n            view.renderer.setAttribute(el, attr, value);\n          } else {\n            view.renderer.removeAttribute(el, attr);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, values: any[]): void {\n  ( /** @type {?} */((<any>checkNoChangesNode)))(view, nodeDef, argStyle, ...values);\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name: string) {\n  // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n  name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n  return `ng-reflect-${name}`;\n}\n\nconst /** @type {?} */ CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input: string): string {\n  return input.replace(CAMEL_CASE_REGEXP, (...m: any[]) => '-' + m[1].toLowerCase());\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value: any): string {\n  try {\n    // Limit the size of the value as otherwise the DOM just gets polluted.\n    return value != null ? value.toString().slice(0, 30) : value;\n  } catch ( /** @type {?} */e) {\n    return '[ERROR] Exception while trying to serialize the value';\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view: ViewData, nodeIndex: number): number|null {\n  for (let /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & NodeFlags.TypeDirective && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view: ViewData, nodeIndex: number): number|null {\n  for (let /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & NodeFlags.CatRenderNode) && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return null;\n}\nclass DebugContext_ implements DebugContext {\nprivate nodeDef: NodeDef;\nprivate elView: ViewData;\nprivate elDef: NodeDef;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n */\nconstructor(public view: ViewData,\npublic nodeIndex: number|null) {\n    if (nodeIndex == null) {\n      this.nodeIndex = nodeIndex = 0;\n    }\n    this.nodeDef = view.def.nodes[nodeIndex];\n    let elDef = this.nodeDef;\n    let elView = view;\n    while (elDef && (elDef.flags & NodeFlags.TypeElement) === 0) {\n      elDef = elDef.parent !;\n    }\n    if (!elDef) {\n      while (!elDef && elView) {\n        elDef = viewParentEl(elView) !;\n        elView = elView.parent !;\n      }\n    }\n    this.elDef = elDef;\n    this.elView = elView;\n  }\n/**\n * @return {?}\n */\nprivate get elOrCompView() {\n    // Has to be done lazily as we use the DebugContext also during creation of elements...\n    return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return createInjector(this.elView, this.elDef); }\n/**\n * @return {?}\n */\nget component(): any { return this.elOrCompView.component; }\n/**\n * @return {?}\n */\nget context(): any { return this.elOrCompView.context; }\n/**\n * @return {?}\n */\nget providerTokens(): any[] {\n    const /** @type {?} */ tokens: any[] = [];\n    if (this.elDef) {\n      for (let /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount;\n           i++) {\n        const /** @type {?} */ childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          tokens.push( /** @type {?} */((childDef.provider)).token);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return tokens;\n  }\n/**\n * @return {?}\n */\nget references(): {[key: string]: any} {\n    const /** @type {?} */ references: {[key: string]: any} = {};\n    if (this.elDef) {\n      collectReferences(this.elView, this.elDef, references);\n\n      for (let /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount;\n           i++) {\n        const /** @type {?} */ childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          collectReferences(this.elView, childDef, references);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return references;\n  }\n/**\n * @return {?}\n */\nget componentRenderElement() {\n    const /** @type {?} */ elData = findHostElement(this.elOrCompView);\n    return elData ? elData.renderElement : undefined;\n  }\n/**\n * @return {?}\n */\nget renderNode(): any {\n    return this.nodeDef.flags & NodeFlags.TypeText ? renderNode(this.view, this.nodeDef) :\n                                                     renderNode(this.elView, this.elDef);\n  }\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nlogError(console: Console, ...values: any[]) {\n    let /** @type {?} */ logViewDef: ViewDefinition;\n    let /** @type {?} */ logNodeIndex: number;\n    if (this.nodeDef.flags & NodeFlags.TypeText) {\n      logViewDef = this.view.def;\n      logNodeIndex = this.nodeDef.nodeIndex;\n    } else {\n      logViewDef = this.elView.def;\n      logNodeIndex = this.elDef.nodeIndex;\n    }\n    // Note: we only generate a log function for text and element nodes\n    // to make the generated code as small as possible.\n    const /** @type {?} */ renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n    let /** @type {?} */ currRenderNodeIndex = -1;\n    let /** @type {?} */ nodeLogger: NodeLogger = () => {\n      currRenderNodeIndex++;\n      if (currRenderNodeIndex === renderNodeIndex) {\n        return console.error.bind(console, ...values);\n      } else {\n        return NOOP;\n      }\n    }; /** @type {?} */((\n    logViewDef.factory))(nodeLogger);\n    if (currRenderNodeIndex < renderNodeIndex) {\n      console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n      ( /** @type {?} */((<any>console.error)))(...values);\n    }\n  }\n}\n\nfunction DebugContext__tsickle_Closure_declarations() {\n/** @type {?} */\nDebugContext_.prototype.nodeDef;\n/** @type {?} */\nDebugContext_.prototype.elView;\n/** @type {?} */\nDebugContext_.prototype.elDef;\n/** @type {?} */\nDebugContext_.prototype.view;\n/** @type {?} */\nDebugContext_.prototype.nodeIndex;\n}\n\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef: ViewDefinition, nodeIndex: number): number {\n  let /** @type {?} */ renderNodeIndex = -1;\n  for (let /** @type {?} */ i = 0; i <= nodeIndex; i++) {\n    const /** @type {?} */ nodeDef = viewDef.nodes[i];\n    if (nodeDef.flags & NodeFlags.CatRenderNode) {\n      renderNodeIndex++;\n    }\n  }\n  return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view: ViewData): ElementData|null {\n  while (view && !isComponentView(view)) {\n    view = /** @type {?} */(( view.parent));\n  }\n  if (view.parent) {\n    return asElementData(view.parent, /** @type {?} */(( viewParentEl(view))).nodeIndex);\n  }\n  return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view: ViewData, nodeDef: NodeDef, references: {[key: string]: any}) {\n  for (let /** @type {?} */ refName in nodeDef.references) {\n    references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n  }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action: DebugAction, fn: any, self: any, args: any[]) {\n  const /** @type {?} */ oldAction = _currentAction;\n  const /** @type {?} */ oldView = _currentView;\n  const /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n  try {\n    _currentAction = action;\n    const /** @type {?} */ result = fn.apply(self, args);\n    _currentView = oldView;\n    _currentNodeIndex = oldNodeIndex;\n    _currentAction = oldAction;\n    return result;\n  } catch ( /** @type {?} */e) {\n    if (isViewDebugError(e) || !_currentView) {\n      throw e;\n    }\n    throw viewWrappedDebugError(e, /** @type {?} */(( getCurrentDebugContext())));\n  }\n}\n/**\n * @return {?}\n */\nexport function getCurrentDebugContext(): DebugContext|null {\n  return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nclass DebugRendererFactory2 implements RendererFactory2 {\n/**\n * @param {?} delegate\n */\nconstructor(private delegate: RendererFactory2) {}\n/**\n * @param {?} element\n * @param {?} renderData\n * @return {?}\n */\ncreateRenderer(element: any, renderData: RendererType2|null): Renderer2 {\n    return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n  }\n/**\n * @return {?}\n */\nbegin() {\n    if (this.delegate.begin) {\n      this.delegate.begin();\n    }\n  }\n/**\n * @return {?}\n */\nend() {\n    if (this.delegate.end) {\n      this.delegate.end();\n    }\n  }\n/**\n * @return {?}\n */\nwhenRenderingDone(): Promise<any> {\n    if (this.delegate.whenRenderingDone) {\n      return this.delegate.whenRenderingDone();\n    }\n    return Promise.resolve(null);\n  }\n}\n\nfunction DebugRendererFactory2_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugRendererFactory2.prototype.delegate;\n}\n\nclass DebugRenderer2 implements Renderer2 {\n/**\n * @param {?} delegate\n */\nconstructor(private delegate: Renderer2) {}\n/**\n * @return {?}\n */\nget data() { return this.delegate.data; }\n/**\n * @param {?} node\n * @return {?}\n */\ndestroyNode(node: any) {\n    removeDebugNodeFromIndex( /** @type {?} */((getDebugNode(node))));\n    if (this.delegate.destroyNode) {\n      this.delegate.destroyNode(node);\n    }\n  }\n/**\n * @return {?}\n */\ndestroy() { this.delegate.destroy(); }\n/**\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\ncreateElement(name: string, namespace?: string): any {\n    const /** @type {?} */ el = this.delegate.createElement(name, namespace);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      const /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n      debugEl.name = name;\n      indexDebugNode(debugEl);\n    }\n    return el;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateComment(value: string): any {\n    const /** @type {?} */ comment = this.delegate.createComment(value);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugNode(comment, null, debugCtx));\n    }\n    return comment;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateText(value: string): any {\n    const /** @type {?} */ text = this.delegate.createText(value);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugNode(text, null, debugCtx));\n    }\n    return text;\n  }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nappendChild(parent: any, newChild: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(parent);\n    const /** @type {?} */ debugChildEl = getDebugNode(newChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.addChild(debugChildEl);\n    }\n    this.delegate.appendChild(parent, newChild);\n  }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\ninsertBefore(parent: any, newChild: any, refChild: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(parent);\n    const /** @type {?} */ debugChildEl = getDebugNode(newChild);\n    const /** @type {?} */ debugRefEl = /** @type {?} */(( getDebugNode(refChild)));\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.insertBefore(debugRefEl, debugChildEl);\n    }\n\n    this.delegate.insertBefore(parent, newChild, refChild);\n  }\n/**\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nremoveChild(parent: any, oldChild: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(parent);\n    const /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.removeChild(debugChildEl);\n    }\n    this.delegate.removeChild(parent, oldChild);\n  }\n/**\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|any): any {\n    const /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugElement(el, null, debugCtx));\n    }\n    return el;\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @param {?=} namespace\n * @return {?}\n */\nsetAttribute(el: any, name: string, value: string, namespace?: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      const /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = value;\n    }\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nremoveAttribute(el: any, name: string, namespace?: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      const /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = null;\n    }\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\naddClass(el: any, name: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.classes[name] = true;\n    }\n    this.delegate.addClass(el, name);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nremoveClass(el: any, name: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.classes[name] = false;\n    }\n    this.delegate.removeClass(el, name);\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} value\n * @param {?} flags\n * @return {?}\n */\nsetStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.styles[style] = value;\n    }\n    this.delegate.setStyle(el, style, value, flags);\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} flags\n * @return {?}\n */\nremoveStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.styles[style] = null;\n    }\n    this.delegate.removeStyle(el, style, flags);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: any, name: string, value: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.properties[name] = value;\n    }\n    this.delegate.setProperty(el, name, value);\n  }\n/**\n * @param {?} target\n * @param {?} eventName\n * @param {?} callback\n * @return {?}\n */\nlisten(\n      target: 'document'|'windows'|'body'|any, eventName: string,\n      callback: (event: any) => boolean): () => void {\n    if (typeof target !== 'string') {\n      const /** @type {?} */ debugEl = getDebugNode(target);\n      if (debugEl) {\n        debugEl.listeners.push(new EventListener(eventName, callback));\n      }\n    }\n\n    return this.delegate.listen(target, eventName, callback);\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nparentNode(node: any): any { return this.delegate.parentNode(node); }\n/**\n * @param {?} node\n * @return {?}\n */\nnextSibling(node: any): any { return this.delegate.nextSibling(node); }\n/**\n * @param {?} node\n * @param {?} value\n * @return {?}\n */\nsetValue(node: any, value: string): void { return this.delegate.setValue(node, value); }\n}\n\nfunction DebugRenderer2_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugRenderer2.prototype.delegate;\n}\n\n","import { setTemplateEngine, getTemplateEngine } from '@syncfusion/ej2-base';\nimport { setValue, getValue } from '@syncfusion/ej2-base';\nvar stringCompiler = getTemplateEngine();\n/**\n * Angular Template Compiler\n */\nexport function compile(templateEle, helper) {\n    if (typeof templateEle === 'string') {\n        return stringCompiler(templateEle, helper);\n    }\n    else {\n        var contRef_1 = templateEle.elementRef.nativeElement._viewContainerRef;\n        var pName_1 = templateEle.elementRef.nativeElement.propName;\n        //tslint:disable-next-line        \n        return function (data, component, propName) {\n            var context = { $implicit: data };\n            var conRef = contRef_1 ? contRef_1 : component.viewContainerRef;\n            var viewRef = conRef.createEmbeddedView(templateEle, context);\n            var viewCollection = component ?\n                component.registeredTemplate : getValue('currentInstance.registeredTemplate', conRef);\n            propName = propName ? propName : pName_1;\n            if (typeof viewCollection[propName] === 'undefined') {\n                viewCollection[propName] = [];\n            }\n            viewCollection[propName].push(viewRef);\n            return viewRef.rootNodes;\n        };\n    }\n}\n/**\n * Property decorator for angular.\n */\nexport function Template(defaultValue) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: setter(key),\n            get: getter(key, defaultValue),\n            enumerable: true,\n            configurable: true\n        };\n        Object.defineProperty(target, key, propertyDescriptor);\n    };\n}\nfunction setter(key) {\n    return function (val) {\n        if (val === undefined) {\n            return;\n        }\n        setValue(key + 'Ref', val, this);\n        if (typeof val !== 'string') {\n            val.elementRef.nativeElement._viewContainerRef = this.viewContainerRef;\n            val.elementRef.nativeElement.propName = key;\n        }\n        else {\n            if (this.saveChanges) {\n                this.saveChanges(key, val, undefined);\n                this.dataBind();\n            }\n        }\n    };\n}\nfunction getter(key, defaultValue) {\n    return function () {\n        return getValue(key + 'Ref', this) || defaultValue;\n    };\n}\n//tslint:disable-next-line\nsetTemplateEngine({ compile: compile });\n","import { isNullOrUndefined, merge } from './util';\nvar headerRegex = /^(.*?):[ \\t]*([^\\r\\n]*)$/gm;\nvar defaultType = 'GET';\n/**\n * Ajax class provides ability to make asynchronous HTTP request to the server\n * ```typescript\n *   var ajax = new Ajax(\"index.html\", \"GET\", true);\n *   ajax.send().then(\n *               function (value) {\n *                   console.log(value);\n *               },\n *               function (reason) {\n *                   console.log(reason);\n *               });\n * ```\n */\nvar Ajax = /** @class */ (function () {\n    /**\n     * Constructor for Ajax class\n     * @param  {string|Object} options?\n     * @param  {string} type?\n     * @param  {boolean} async?\n     * @returns defaultType\n     */\n    function Ajax(options, type, async) {\n        /**\n         * A boolean value indicating whether the request should be sent asynchronous or not.\n         * @default true\n         */\n        this.mode = true;\n        this.options = {};\n        if (typeof options === 'string') {\n            this.url = options;\n            this.type = type ? type.toUpperCase() : defaultType;\n            this.mode = !isNullOrUndefined(async) ? async : true;\n        }\n        else if (typeof options === 'object') {\n            this.options = options;\n            merge(this, this.options);\n        }\n        this.type = this.type ? this.type.toUpperCase() : defaultType;\n    }\n    /**\n     * Send the request to server.\n     * @param {any} data - To send the user data\n     * @return {Promise}\n     */\n    Ajax.prototype.send = function (data) {\n        var _this = this;\n        this.data = isNullOrUndefined(data) ? this.data : data;\n        var promise = new Promise(function (resolve, reject) {\n            _this.httpRequest = new XMLHttpRequest();\n            _this.httpRequest.onreadystatechange = function () { _this.stateChange(resolve, reject); };\n            _this.httpRequest.open(_this.type, _this.url, _this.mode);\n            // Set default headers\n            if (!isNullOrUndefined(_this.data)) {\n                _this.httpRequest.setRequestHeader('Content-Type', _this.contentType || 'application/json; charset=utf-8');\n            }\n            if (_this.beforeSend) {\n                _this.beforeSend();\n            }\n            _this.httpRequest.send(!isNullOrUndefined(_this.data) ? _this.data : null);\n        });\n        return promise;\n    };\n    Ajax.prototype.successHandler = function (data) {\n        if (this.onSuccess) {\n            this.onSuccess(data, this);\n        }\n        return data;\n    };\n    Ajax.prototype.failureHandler = function (reason) {\n        if (this.onFailure) {\n            this.onFailure(this.httpRequest);\n        }\n        return reason;\n    };\n    Ajax.prototype.stateChange = function (resolve, reject) {\n        var data = this.httpRequest.responseText;\n        if (this.dataType && this.dataType.toLowerCase() === 'json') {\n            if (data === '') {\n                data = undefined;\n            }\n            else {\n                try {\n                    data = JSON.parse(data);\n                }\n                catch (error) {\n                    // no exception handle\n                }\n            }\n        }\n        if (this.httpRequest.readyState === 4) {\n            if (this.httpRequest.status === 200 || this.httpRequest.status === 304) {\n                resolve(this.successHandler(data));\n            }\n            else {\n                reject(new Error(this.failureHandler(this.httpRequest.statusText)));\n            }\n        }\n    };\n    /**\n     * To get the response header from XMLHttpRequest\n     * @param  {string} key Key to search in the response header\n     * @returns {string}\n     */\n    Ajax.prototype.getResponseHeader = function (key) {\n        var responseHeaders;\n        var header;\n        responseHeaders = {};\n        var headers = headerRegex.exec(this.httpRequest.getAllResponseHeaders());\n        while (headers) {\n            responseHeaders[headers[1].toLowerCase()] = headers[2];\n            headers = headerRegex.exec(this.httpRequest.getAllResponseHeaders());\n        }\n        header = responseHeaders[key.toLowerCase()];\n        return isNullOrUndefined(header) ? null : header;\n    };\n    return Ajax;\n}());\nexport { Ajax };\n","import { debounce, extend } from './util';\n/**\n * EventHandler class provides option to add, remove, clear and trigger events to a HTML DOM element\n * @private\n * ```html\n * <div id=\"Eventdiv\">  </div>\n * <script>\n *   let node: HTMLElement = document.querySelector(\"#Eventdiv\");\n *   EventHandler.addEventListener(node, \"click\", function(){\n *       // click handler function code\n *   });\n *   EventHandler.addEventListener(node, \"onmouseover\", function(){\n *       // mouseover handler function code\n *   });\n *   EventHandler.removeEventListener(node, \"click\", function(){\n *       // click handler function code\n *   });\n *   eventObj.clearEvents();\n * </script>\n * ```\n */\nvar EventHandler = /** @class */ (function () {\n    function EventHandler() {\n    }\n    // to get the event data based on element\n    EventHandler.addOrGetEventData = function (element) {\n        if ('__eventList' in element) {\n            return element.__eventList.events;\n        }\n        else {\n            element.__eventList = {};\n            return element.__eventList.events = [];\n        }\n    };\n    /**\n     * Add an event to the specified DOM element.\n     * @param {any} element - Target HTML DOM element\n     * @param {string} eventName - A string that specifies the name of the event\n     * @param {Function} listener - Specifies the function to run when the event occurs\n     * @param {Object} bindTo - A object that binds 'this' variable in the event handler\n     * @param {number} debounce - Specifies at what interval given event listener should be triggered.\n     * @return {Function}\n     */\n    EventHandler.add = function (element, eventName, listener, bindTo, intDebounce) {\n        var eventData = EventHandler.addOrGetEventData(element);\n        var debounceListener;\n        if (intDebounce) {\n            debounceListener = debounce(listener, intDebounce);\n        }\n        else {\n            debounceListener = listener;\n        }\n        if (bindTo) {\n            debounceListener = debounceListener.bind(bindTo);\n        }\n        var event = eventName.split(' ');\n        for (var i = 0; i < event.length; i++) {\n            eventData.push({\n                name: event[i],\n                listener: listener,\n                debounce: debounceListener\n            });\n            element.addEventListener(event[i], debounceListener);\n        }\n        return debounceListener;\n    };\n    /**\n     * Remove an event listener that has been attached before.\n     * @param {any} element - Specifies the target html element to remove the event\n     * @param {string} eventName - A string that specifies the name of the event to remove\n     * @param {Function} listener - Specifies the function to remove\n     * @return {void}\n     */\n    EventHandler.remove = function (element, eventName, listener) {\n        var eventData = EventHandler.addOrGetEventData(element);\n        var event = eventName.split(' ');\n        var _loop_1 = function (j) {\n            var index = -1;\n            var debounceListener;\n            if (eventData && eventData.length !== 0) {\n                eventData.some(function (x, i) {\n                    return x.name === event[j] && x.listener === listener ?\n                        (index = i, debounceListener = x.debounce, true) : false;\n                });\n            }\n            if (index !== -1) {\n                eventData.splice(index, 1);\n            }\n            if (debounceListener) {\n                element.removeEventListener(event[j], debounceListener);\n            }\n        };\n        for (var j = 0; j < event.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**\n     * Clear all the event listeners that has been previously attached to the element.\n     * @param {any} element - Specifies the target html element to clear the events\n     * @return {void}\n     */\n    EventHandler.clearEvents = function (element) {\n        var eventData;\n        var copyData;\n        eventData = EventHandler.addOrGetEventData(element);\n        copyData = extend([], copyData, eventData);\n        for (var i = 0; i < copyData.length; i++) {\n            element.removeEventListener(copyData[i].name, copyData[i].debounce);\n            eventData.shift();\n        }\n    };\n    /**\n     * Trigger particular event of the element.\n     * @param {any} element - Specifies the target html element to trigger the events\n     * @param {string} eventName - Specifies the event to trigger for the specified element.\n     * Can be a custom event, or any of the standard events.\n     * @param {any} eventProp - Additional parameters to pass on to the event properties\n     * @return {void}\n     */\n    EventHandler.trigger = function (element, eventName, eventProp) {\n        var eventData = EventHandler.addOrGetEventData(element);\n        var fn = null;\n        for (var _i = 0, eventData_1 = eventData; _i < eventData_1.length; _i++) {\n            var event_1 = eventData_1[_i];\n            if (event_1.name === eventName) {\n                event_1.debounce.call(this, eventProp);\n            }\n        }\n    };\n    return EventHandler;\n}());\nexport { EventHandler };\n","import { isNullOrUndefined, getValue } from './util';\nvar Observer = /** @class */ (function () {\n    function Observer(context) {\n        this.boundedEvents = {};\n        if (isNullOrUndefined(context)) {\n            return;\n        }\n        this.context = context;\n    }\n    ;\n    /**\n     * To attach handler for given property in current context.\n     * @param {string} property - specifies the name of the event.\n     * @param {Function} handler - Specifies the handler function to be called while event notified.\n     * @param {Object} context - Specifies the context binded to the handler.\n     * @return {void}\n     */\n    Observer.prototype.on = function (property, handler, context) {\n        if (isNullOrUndefined(handler)) {\n            return;\n        }\n        var cntxt = context || this.context;\n        if (this.notExist(property)) {\n            this.boundedEvents[property] = [{ handler: handler, context: cntxt }];\n            return;\n        }\n        if (!this.isHandlerPresent(this.boundedEvents[property], handler)) {\n            this.boundedEvents[property].push({ handler: handler, context: cntxt });\n        }\n    };\n    /**\n     * To remove handlers from a event attached using on() function.\n     * @param {string} eventName - specifies the name of the event.\n     * @param {Function} handler - Optional argument specifies the handler function to be called while event notified.\n     * @return {void}\n     */\n    Observer.prototype.off = function (property, handler) {\n        if (this.notExist(property)) {\n            return;\n        }\n        var curObject = getValue(property, this.boundedEvents);\n        if (handler) {\n            for (var i = 0; i < curObject.length; i++) {\n                if (handler === curObject[i].handler) {\n                    curObject.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        else {\n            delete this.boundedEvents[property];\n        }\n    };\n    /**\n     * To notify the handlers in the specified event.\n     * @param {string} property - Specifies the event to be notify.\n     *  @param {Object} args - Additional parameters to pass while calling the handler.\n     * @return {void}\n     */\n    Observer.prototype.notify = function (property, argument) {\n        if (this.notExist(property)) {\n            return;\n        }\n        if (argument) {\n            argument.name = property;\n        }\n        var curObject = getValue(property, this.boundedEvents).slice(0);\n        for (var _i = 0, curObject_1 = curObject; _i < curObject_1.length; _i++) {\n            var cur = curObject_1[_i];\n            cur.handler.call(cur.context, argument);\n        }\n    };\n    /**\n     * To destroy handlers in the event\n     */\n    Observer.prototype.destroy = function () {\n        this.boundedEvents = this.context = undefined;\n    };\n    /**\n     * Returns if the property exists.\n     */\n    Observer.prototype.notExist = function (prop) {\n        return this.boundedEvents.hasOwnProperty(prop) === false;\n    };\n    /**\n     * Returns if the handler is present.\n     */\n    Observer.prototype.isHandlerPresent = function (boundedEvents, handler) {\n        for (var _i = 0, boundedEvents_1 = boundedEvents; _i < boundedEvents_1.length; _i++) {\n            var cur = boundedEvents_1[_i];\n            if (cur.handler === handler) {\n                return true;\n            }\n        }\n        return false;\n    };\n    return Observer;\n}());\nexport { Observer };\n","import { isUndefined, isNullOrUndefined, merge, setImmediate, setValue } from './util';\nimport { addClass, removeClass } from './dom';\nimport { Observer } from './observer';\n/* tslint:enable:no-any */\n/**\n * Base library module is common module for Framework modules like touch,keyboard and etc.,\n * @private\n */\nvar Base = /** @class */ (function () {\n    /**\n     * Base constructor accept options and element\n     */\n    function Base(options, element) {\n        this.isProtectedOnChange = true;\n        this.properties = {};\n        this.changedProperties = {};\n        this.oldProperties = {};\n        this.refreshing = false;\n        // tslint:disable-next-line:no-empty\n        this.finalUpdate = function () { };\n        this.childChangedProperties = {};\n        this.modelObserver = new Observer(this);\n        if (!isUndefined(element)) {\n            if ('string' === typeof (element)) {\n                this.element = document.querySelector(element);\n            }\n            else {\n                this.element = element;\n            }\n            if (!isNullOrUndefined(this.element)) {\n                this.isProtectedOnChange = false;\n                this.addInstance();\n            }\n        }\n        if (!isUndefined(options)) {\n            this.setProperties(options, true);\n        }\n        this.isDestroyed = false;\n    }\n    /** Property base section */\n    /**\n     * Function used to set bunch of property at a time.\n     * @private\n     * @param  {Object} prop - JSON object which holds components properties.\n     * @param  {boolean} muteOnChange? - Specifies to true when we set properties.\n     */\n    Base.prototype.setProperties = function (prop, muteOnChange) {\n        var prevDetection = this.isProtectedOnChange;\n        this.isProtectedOnChange = !!muteOnChange;\n        merge(this, prop);\n        if (muteOnChange !== true) {\n            merge(this.changedProperties, prop);\n            this.dataBind();\n        }\n        this.finalUpdate();\n        this.changedProperties = {};\n        this.oldProperties = {};\n        this.isProtectedOnChange = prevDetection;\n    };\n    ;\n    /**\n     * Calls for child element data bind\n     * @param {Object} obj\n     * @param {Object} parent\n     * @returns {void}\n     */\n    // tslint:disable-next-line:no-any\n    Base.callChildDataBind = function (obj, parent) {\n        var keys = Object.keys(obj);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            if (parent[key] instanceof Array) {\n                for (var _a = 0, _b = parent[key]; _a < _b.length; _a++) {\n                    var obj_1 = _b[_a];\n                    if (obj_1.dataBind !== undefined) {\n                        obj_1.dataBind();\n                    }\n                }\n            }\n            else {\n                parent[key].dataBind();\n            }\n        }\n    };\n    Base.prototype.clearChanges = function () {\n        this.finalUpdate();\n        this.changedProperties = {};\n        this.oldProperties = {};\n        this.childChangedProperties = {};\n    };\n    /**\n     * Bind property changes immediately to components\n     */\n    Base.prototype.dataBind = function () {\n        Base.callChildDataBind(this.childChangedProperties, this);\n        if (Object.getOwnPropertyNames(this.changedProperties).length) {\n            var prevDetection = this.isProtectedOnChange;\n            var newChanges = this.changedProperties;\n            var oldChanges = this.oldProperties;\n            this.clearChanges();\n            this.isProtectedOnChange = true;\n            this.onPropertyChanged(newChanges, oldChanges);\n            this.isProtectedOnChange = prevDetection;\n        }\n    };\n    ;\n    Base.prototype.saveChanges = function (key, newValue, oldValue) {\n        if (this.isProtectedOnChange) {\n            return;\n        }\n        this.oldProperties[key] = oldValue;\n        this.changedProperties[key] = newValue;\n        this.finalUpdate();\n        this.finalUpdate = setImmediate(this.dataBind.bind(this));\n    };\n    ;\n    /** Event Base Section */\n    /**\n     * Adds the handler to the given event listener.\n     * @param {string} eventName - A String that specifies the name of the event\n     * @param {Function} listener - Specifies the call to run when the event occurs.\n     * @return {void}\n     */\n    Base.prototype.addEventListener = function (eventName, handler) {\n        this.modelObserver.on(eventName, handler);\n    };\n    /**\n     * Removes the handler from the given event listener.\n     * @param {string} eventName - A String that specifies the name of the event to remove\n     * @param {Function} listener - Specifies the function to remove\n     * @return {void}\n     */\n    Base.prototype.removeEventListener = function (eventName, handler) {\n        this.modelObserver.off(eventName, handler);\n    };\n    /**\n     * Triggers the handlers in the specified event.\n     * @private\n     * @param {string} eventName - Specifies the event to trigger for the specified component properties.\n     * Can be a custom event, or any of the standard events.\n     * @param {Event} eventProp - Additional parameters to pass on to the event properties\n     * @return {void}\n     */\n    Base.prototype.trigger = function (eventName, eventProp) {\n        if (this.isDestroyed !== true) {\n            var prevDetection = this.isProtectedOnChange;\n            this.isProtectedOnChange = false;\n            this.modelObserver.notify(eventName, eventProp);\n            this.isProtectedOnChange = prevDetection;\n        }\n    };\n    /**\n     * To maintain instance in base class\n     */\n    Base.prototype.addInstance = function () {\n        // Add module class to the root element\n        var moduleClass = 'e-' + this.getModuleName().toLowerCase();\n        addClass([this.element], ['e-control', moduleClass]);\n        if (!isNullOrUndefined(this.element.ej2_instances)) {\n            this.element.ej2_instances.push(this);\n        }\n        else {\n            setValue('ej2_instances', [this], this.element);\n        }\n    };\n    /**\n     * To remove the instance from the element\n     */\n    Base.prototype.destroy = function () {\n        var _this = this;\n        this.element.ej2_instances =\n            this.element.ej2_instances.filter(function (i) { return i !== _this; });\n        removeClass([this.element], ['e-' + this.getModuleName()]);\n        if (this.element.ej2_instances.length === 0) {\n            // Remove module class from the root element\n            removeClass([this.element], ['e-control']);\n        }\n        this.clearChanges();\n        this.modelObserver.destroy();\n        this.isDestroyed = true;\n    };\n    return Base;\n}());\nexport { Base };\n","import { isUndefined } from './util';\nvar REGX_MOBILE = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini|mobile/i;\nvar REGX_IE = /msie|trident/i;\nvar REGX_IE11 = /Trident\\/7\\./;\nvar REGX_IOS = /(ipad|iphone|ipod touch)/i;\nvar REGX_IOS7 = /(ipad|iphone|ipod touch);.*os 7_\\d|(ipad|iphone|ipod touch);.*os 8_\\d/i;\nvar REGX_ANDROID = /android/i;\nvar REGX_WINDOWS = /trident|windows phone|edge/i;\nvar REGX_VERSION = /(version)[ \\/]([\\w.]+)/i;\nvar REGX_BROWSER = {\n    OPERA: /(opera|opr)(?:.*version|)[ \\/]([\\w.]+)/i,\n    EDGE: /(edge)(?:.*version|)[ \\/]([\\w.]+)/i,\n    CHROME: /(chrome|crios)[ \\/]([\\w.]+)/i,\n    PANTHOMEJS: /(phantomjs)[ \\/]([\\w.]+)/i,\n    SAFARI: /(safari)[ \\/]([\\w.]+)/i,\n    WEBKIT: /(webkit)[ \\/]([\\w.]+)/i,\n    MSIE: /(msie|trident) ([\\w.]+)/i,\n    MOZILLA: /(mozilla)(?:.*? rv:([\\w.]+)|)/i\n};\n/* istanbul ignore else  */\nif (typeof window !== 'undefined') {\n    window.browserDetails = window.browserDetails || {};\n}\n/**\n * Get configuration details for Browser\n * @private\n */\nvar Browser = /** @class */ (function () {\n    function Browser() {\n    }\n    Browser.extractBrowserDetail = function () {\n        var browserInfo = { culture: {} };\n        var keys = Object.keys(REGX_BROWSER);\n        var clientInfo = [];\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            clientInfo = Browser.userAgent.match(REGX_BROWSER[key]);\n            if (clientInfo) {\n                browserInfo.name = (clientInfo[1].toLowerCase() === 'opr' ? 'opera' : clientInfo[1].toLowerCase());\n                browserInfo.name = (clientInfo[1].toLowerCase() === 'crios' ? 'chrome' : browserInfo.name);\n                browserInfo.version = clientInfo[2];\n                browserInfo.culture.name = browserInfo.culture.language = navigator.language;\n                if (!!Browser.userAgent.match(REGX_IE11)) {\n                    browserInfo.name = 'msie';\n                    break;\n                }\n                var version = Browser.userAgent.match(REGX_VERSION);\n                if (browserInfo.name === 'safari' && version) {\n                    browserInfo.version = version[2];\n                }\n                break;\n            }\n        }\n        return browserInfo;\n    };\n    /**\n     * To get events from the browser\n     * @param {string} event - type of event triggered.\n     * @returns {Boolean}\n     */\n    Browser.getEvent = function (event) {\n        // tslint:disable-next-line:no-any\n        var events = {\n            start: {\n                isPointer: 'pointerdown', isTouch: 'touchstart', isDevice: 'mousedown'\n            },\n            move: {\n                isPointer: 'pointermove', isTouch: 'touchmove', isDevice: 'mousemove'\n            },\n            end: {\n                isPointer: 'pointerup', isTouch: 'touchend', isDevice: 'mouseup'\n            }\n        };\n        return (Browser.isPointer ? events[event].isPointer :\n            (Browser.isTouch ? events[event].isTouch + (!Browser.isDevice ? ' ' + events[event].isDevice : '')\n                : events[event].isDevice));\n    };\n    /**\n     * To get the Touch start event from browser\n     * @returns {string}\n     */\n    Browser.getTouchStartEvent = function () {\n        return Browser.getEvent('start');\n    };\n    /**\n     * To get the Touch end event from browser\n     * @returns {string}\n     */\n    Browser.getTouchEndEvent = function () {\n        return Browser.getEvent('end');\n    };\n    /**\n     * To get the Touch move event from browser\n     * @returns {string}\n     */\n    Browser.getTouchMoveEvent = function () {\n        return Browser.getEvent('move');\n    };\n    /**\n     * To get the value based on provided key and regX\n     * @param {string} key\n     * @param {RegExp} regX\n     * @returns {Object}\n     */\n    Browser.getValue = function (key, regX) {\n        var browserDetails = window.browserDetails;\n        if ('undefined' === typeof browserDetails[key]) {\n            return browserDetails[key] = regX.test(Browser.userAgent);\n        }\n        return browserDetails[key];\n    };\n    Object.defineProperty(Browser, \"userAgent\", {\n        get: function () {\n            return Browser.uA;\n        },\n        //Properties \n        /**\n         * Property specifies the userAgent of the browser. Default userAgent value is based on the browser.\n         * Also we can set our own userAgent.\n         */\n        set: function (uA) {\n            Browser.uA = uA;\n            window.browserDetails = {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"info\", {\n        //Read Only Properties\n        /**\n         * Property is to get the browser information like Name, Version and Language\n         * @returns BrowserInfo\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.info)) {\n                return window.browserDetails.info = Browser.extractBrowserDetail();\n            }\n            return window.browserDetails.info;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isIE\", {\n        /**\n         * Property is to get whether the userAgent is based IE.\n         */\n        get: function () {\n            return Browser.getValue('isIE', REGX_IE);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isTouch\", {\n        /**\n         * Property is to get whether the browser has touch support.\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.isTouch)) {\n                return window.browserDetails.isTouch = ('ontouchstart' in window);\n            }\n            return window.browserDetails.isTouch;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isPointer\", {\n        /**\n         * Property is to get whether the browser has Pointer support.\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.isPointer)) {\n                return window.browserDetails.isPointer = ('pointerEnabled' in window.navigator);\n            }\n            return window.browserDetails.isPointer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isMSPointer\", {\n        /**\n         * Property is to get whether the browser has MSPointer support.\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.isMSPointer)) {\n                return window.browserDetails.isMSPointer = ('msPointerEnabled' in window.navigator);\n            }\n            return window.browserDetails.isMSPointer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isDevice\", {\n        /**\n         * Property is to get whether the userAgent is device based.\n         */\n        get: function () {\n            return Browser.getValue('isDevice', REGX_MOBILE);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isIos\", {\n        /**\n         * Property is to get whether the userAgent is IOS.\n         */\n        get: function () {\n            return Browser.getValue('isIos', REGX_IOS);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isIos7\", {\n        /**\n         * Property is to get whether the userAgent is Ios7.\n         */\n        get: function () {\n            return Browser.getValue('isIos7', REGX_IOS7);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isAndroid\", {\n        /**\n         * Property is to get whether the userAgent is Android.\n         */\n        get: function () {\n            return Browser.getValue('isAndroid', REGX_ANDROID);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isWebView\", {\n        /**\n         * Property is to identify whether application ran in web view.\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.isWebView)) {\n                window.browserDetails.isWebView = !(isUndefined(window.cordova) && isUndefined(window.PhoneGap)\n                    && isUndefined(window.phonegap) && window.forge !== 'object');\n                return window.browserDetails.isWebView;\n            }\n            return window.browserDetails.isWebView;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isWindows\", {\n        /**\n         * Property is to get whether the userAgent is Windows.\n         */\n        get: function () {\n            return Browser.getValue('isWindows', REGX_WINDOWS);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"touchStartEvent\", {\n        /**\n         * Property is to get the touch start event. It returns event name based on browser.\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.touchStartEvent)) {\n                return window.browserDetails.touchStartEvent = Browser.getTouchStartEvent();\n            }\n            return window.browserDetails.touchStartEvent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"touchMoveEvent\", {\n        /**\n         * Property is to get the touch move event. It returns event name based on browser.\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.touchMoveEvent)) {\n                return window.browserDetails.touchMoveEvent = Browser.getTouchMoveEvent();\n            }\n            return window.browserDetails.touchMoveEvent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"touchEndEvent\", {\n        /**\n         * Property is to get the touch end event. It returns event name based on browser.\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.touchEndEvent)) {\n                return window.browserDetails.touchEndEvent = Browser.getTouchEndEvent();\n            }\n            return window.browserDetails.touchEndEvent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /* istanbul ignore next */\n    Browser.uA = typeof navigator !== 'undefined' ? navigator.userAgent : '';\n    return Browser;\n}());\nexport { Browser };\n","import { throwError, getValue, isNullOrUndefined, extend } from '../util';\nimport { ParserBase as parser } from './parser-base';\nimport { DateFormat } from './date-formatter';\nimport { NumberFormat } from './number-formatter';\n/**\n * Date base common constants and function for date parser and formatter.\n */\nexport var IntlBase;\n(function (IntlBase) {\n    // tslint:disable-next-line:max-line-length\n    IntlBase.negativeDataRegex = /^(('[^']+'|''|[^*#@0,.E])*)(\\*.)?((([#,]*[0,]*0+)(\\.0*[0-9]*#*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;\n    IntlBase.customRegex = /^(('[^']+'|''|[^*#@0,.])*)(\\*.)?((([0#,]*[0,]*[0#]*)(\\.[0#]*)?)|([#,]*@+#*))(E\\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;\n    IntlBase.latnParseRegex = /0|1|2|3|4|5|6|7|8|9/g;\n    var fractionRegex = /[0-9]/g;\n    IntlBase.defaultCurrency = '$';\n    var mapper = ['infinity', 'nan', 'group', 'decimal'];\n    var patternRegex = /G|M|L|H|c|'| a|yy|y|EEEE|E/g;\n    var patternMatch = {\n        'G': '',\n        'M': 'm',\n        'L': 'm',\n        'H': 'h',\n        'c': 'd',\n        '\\'': '\"',\n        ' a': ' AM/PM',\n        'yy': 'yy',\n        'y': 'yyyy',\n        'EEEE': 'dddd',\n        'E': 'ddd'\n    };\n    IntlBase.formatRegex = /(^[ncpa]{1})([0-1]?[0-9]|20)?$/i;\n    var typeMapper = {\n        '$': 'isCurrency',\n        '%': 'isPercent',\n        '-': 'isNegative',\n        0: 'nlead',\n        1: 'nend'\n    };\n    IntlBase.dateParseRegex = /([a-z])\\1*|'([^']|'')+'|''|./gi;\n    IntlBase.basicPatterns = ['short', 'medium', 'long', 'full'];\n    /* tslint:disable:quotemark */\n    IntlBase.defaultObject = {\n        'dates': {\n            'calendars': {\n                'gregorian': {\n                    'months': {\n                        'stand-alone': {\n                            'abbreviated': {\n                                '1': 'Jan',\n                                '2': 'Feb',\n                                '3': 'Mar',\n                                '4': 'Apr',\n                                '5': 'May',\n                                '6': 'Jun',\n                                '7': 'Jul',\n                                '8': 'Aug',\n                                '9': 'Sep',\n                                '10': 'Oct',\n                                '11': 'Nov',\n                                '12': 'Dec'\n                            },\n                            'narrow': {\n                                '1': 'J',\n                                '2': 'F',\n                                '3': 'M',\n                                '4': 'A',\n                                '5': 'M',\n                                '6': 'J',\n                                '7': 'J',\n                                '8': 'A',\n                                '9': 'S',\n                                '10': 'O',\n                                '11': 'N',\n                                '12': 'D'\n                            },\n                            'wide': {\n                                '1': 'January',\n                                '2': 'February',\n                                '3': 'March',\n                                '4': 'April',\n                                '5': 'May',\n                                '6': 'June',\n                                '7': 'July',\n                                '8': 'August',\n                                '9': 'September',\n                                '10': 'October',\n                                '11': 'November',\n                                '12': 'December'\n                            }\n                        }\n                    },\n                    \"days\": {\n                        \"stand-alone\": {\n                            \"abbreviated\": {\n                                \"sun\": \"Sun\",\n                                \"mon\": \"Mon\",\n                                \"tue\": \"Tue\",\n                                \"wed\": \"Wed\",\n                                \"thu\": \"Thu\",\n                                \"fri\": \"Fri\",\n                                \"sat\": \"Sat\"\n                            },\n                            \"narrow\": {\n                                \"sun\": \"S\",\n                                \"mon\": \"M\",\n                                \"tue\": \"T\",\n                                \"wed\": \"W\",\n                                \"thu\": \"T\",\n                                \"fri\": \"F\",\n                                \"sat\": \"S\"\n                            },\n                            \"short\": {\n                                \"sun\": \"Su\",\n                                \"mon\": \"Mo\",\n                                \"tue\": \"Tu\",\n                                \"wed\": \"We\",\n                                \"thu\": \"Th\",\n                                \"fri\": \"Fr\",\n                                \"sat\": \"Sa\"\n                            },\n                            \"wide\": {\n                                \"sun\": \"Sunday\",\n                                \"mon\": \"Monday\",\n                                \"tue\": \"Tuesday\",\n                                \"wed\": \"Wednesday\",\n                                \"thu\": \"Thursday\",\n                                \"fri\": \"Friday\",\n                                \"sat\": \"Saturday\"\n                            }\n                        }\n                    },\n                    \"dayPeriods\": {\n                        \"format\": {\n                            \"wide\": {\n                                \"am\": \"AM\",\n                                \"pm\": \"PM\"\n                            }\n                        }\n                    },\n                    'eras': {\n                        'eraNames': {\n                            '0': 'Before Christ',\n                            '0-alt-variant': 'Before Common Era',\n                            '1': 'Anno Domini',\n                            \"1-alt-variant\": \"Common Era\"\n                        },\n                        'eraAbbr': {\n                            '0': 'BC',\n                            '0-alt-variant': 'BCE',\n                            '1': 'AD',\n                            '1-alt-variant': 'CE'\n                        },\n                        'eraNarrow': {\n                            '0': 'B',\n                            '0-alt-variant': 'BCE',\n                            '1': 'A',\n                            '1-alt-variant': 'CE'\n                        }\n                    },\n                    'dateFormats': {\n                        'full': 'EEEE, MMMM d, y',\n                        'long': 'MMMM d, y',\n                        'medium': 'MMM d, y',\n                        'short': 'M/d/yy'\n                    },\n                    'timeFormats': {\n                        'full': 'h:mm:ss a zzzz',\n                        'long': 'h:mm:ss a z',\n                        'medium': 'h:mm:ss a',\n                        'short': 'h:mm a'\n                    },\n                    'dateTimeFormats': {\n                        'full': \"{1} 'at' {0}\",\n                        'long': \"{1} 'at' {0}\",\n                        'medium': '{1}, {0}',\n                        'short': '{1}, {0}',\n                        'availableFormats': {\n                            'd': 'd',\n                            'E': 'ccc',\n                            'Ed': 'd E',\n                            'Ehm': 'E h:mm a',\n                            'EHm': 'E HH:mm',\n                            'Ehms': 'E h:mm:ss a',\n                            'EHms': 'E HH:mm:ss',\n                            'Gy': 'y G',\n                            'GyMMM': 'MMM y G',\n                            'GyMMMd': 'MMM d, y G',\n                            'GyMMMEd': 'E, MMM d, y G',\n                            'h': 'h a',\n                            'H': 'HH',\n                            'hm': 'h:mm a',\n                            'Hm': 'HH:mm',\n                            'hms': 'h:mm:ss a',\n                            'Hms': 'HH:mm:ss',\n                            'hmsv': 'h:mm:ss a v',\n                            'Hmsv': 'HH:mm:ss v',\n                            'hmv': 'h:mm a v',\n                            'Hmv': 'HH:mm v',\n                            'M': 'L',\n                            'Md': 'M/d',\n                            'MEd': 'E, M/d',\n                            'MMM': 'LLL',\n                            'MMMd': 'MMM d',\n                            'MMMEd': 'E, MMM d',\n                            'MMMMd': 'MMMM d',\n                            'ms': 'mm:ss',\n                            'y': 'y',\n                            'yM': 'M/y',\n                            'yMd': 'M/d/y',\n                            'yMEd': 'E, M/d/y',\n                            'yMMM': 'MMM y',\n                            'yMMMd': 'MMM d, y',\n                            'yMMMEd': 'E, MMM d, y',\n                            'yMMMM': 'MMMM y',\n                        },\n                    }\n                }\n            },\n            'timeZoneNames': {\n                \"hourFormat\": \"+HH:mm;-HH:mm\",\n                \"gmtFormat\": \"GMT{0}\",\n                \"gmtZeroFormat\": \"GMT\",\n            }\n        },\n        'numbers': {\n            'currencies': {\n                'USD': {\n                    'displayName': 'US Dollar',\n                    'symbol': '$',\n                    'symbol-alt-narrow': '$'\n                },\n                'EUR': {\n                    'displayName': 'Euro',\n                    'symbol': '€',\n                    'symbol-alt-narrow': '€'\n                },\n                'GBP': {\n                    'displayName': 'British Pound',\n                    'symbol-alt-narrow': '£'\n                },\n            },\n            'defaultNumberingSystem': 'latn',\n            'minimumGroupingDigits': '1',\n            'symbols-numberSystem-latn': {\n                'decimal': '.',\n                'group': ',',\n                'list': ';',\n                'percentSign': '%',\n                'plusSign': '+',\n                'minusSign': '-',\n                'exponential': 'E',\n                'superscriptingExponent': '×',\n                'perMille': '‰',\n                'infinity': '∞',\n                'nan': 'NaN',\n                'timeSeparator': ':'\n            },\n            'decimalFormats-numberSystem-latn': {\n                'standard': '#,##0.###',\n            },\n            'percentFormats-numberSystem-latn': {\n                'standard': '#,##0%'\n            },\n            'currencyFormats-numberSystem-latn': {\n                'standard': '¤#,##0.00',\n                'accounting': '¤#,##0.00;(¤#,##0.00)'\n            }\n        }\n    };\n    /* tslint:enable:quotemark */\n    IntlBase.monthIndex = {\n        3: 'abbreviated',\n        4: 'wide',\n        5: 'narrow',\n        1: 'abbreviated'\n    };\n    /**\n     *\n     */\n    IntlBase.month = 'months';\n    IntlBase.days = 'days';\n    /**\n     * Default numerber Object\n     */\n    IntlBase.patternMatcher = {\n        C: 'currency',\n        P: 'percent',\n        N: 'decimal',\n        A: 'currency'\n    };\n    /**\n     * Returns the resultant pattern based on the skeleton, dateObject and the type provided\n     * @private\n     * @param {string} skeleton\n     * @param {Object} dateObject\n     * @param {string} type\n     * @returns {string}\n     */\n    function getResultantPattern(skeleton, dateObject, type) {\n        var resPattern;\n        var iType = type || 'date';\n        if (IntlBase.basicPatterns.indexOf(skeleton) !== -1) {\n            resPattern = getValue(iType + 'Formats.' + skeleton, dateObject);\n            if (iType === 'dateTime') {\n                var dPattern = getValue('dateFormats.' + skeleton, dateObject);\n                var tPattern = getValue('timeFormats.' + skeleton, dateObject);\n                resPattern = resPattern.replace('{1}', dPattern).replace('{0}', tPattern);\n            }\n        }\n        else {\n            resPattern = getValue('dateTimeFormats.availableFormats.' + skeleton, dateObject);\n        }\n        return resPattern;\n    }\n    IntlBase.getResultantPattern = getResultantPattern;\n    /**\n     * Returns the dependable object for provided cldr data and culture\n     * @private\n     * @param {Object} cldr\n     * @param {string} culture\n     * @param {boolean} isNumber\n     * @returns {Dependables}\n     */\n    function getDependables(cldr, culture, isNumber) {\n        var ret = {};\n        ret.parserObject = parser.getMainObject(cldr, culture) || IntlBase.defaultObject;\n        if (isNumber) {\n            ret.numericObject = getValue('numbers', ret.parserObject);\n        }\n        else {\n            ret.dateObject = getValue('dates.calendars.gregorian', ret.parserObject);\n        }\n        return ret;\n    }\n    IntlBase.getDependables = getDependables;\n    /**\n     * Returns the symbol pattern for provided parameters\n     * @private\n     * @param {string} type\n     * @param {string} numSystem\n     * @param {Object} obj\n     * @param {boolean} isAccount\n     * @returns {string}\n     */\n    function getSymbolPattern(type, numSystem, obj, isAccount) {\n        return getValue(type + 'Formats-numberSystem-' +\n            numSystem + (isAccount ? '.accounting' : '.standard'), obj) || (isAccount ? getValue(type + 'Formats-numberSystem-' +\n            numSystem + '.standard', obj) : '');\n    }\n    IntlBase.getSymbolPattern = getSymbolPattern;\n    /**\n     * Returns proper numeric skeleton\n     * @private\n     * @param {string} skeleton\n     * @returns {NumericSkeleton}\n     */\n    function getProperNumericSkeleton(skeleton) {\n        var matches = skeleton.match(IntlBase.formatRegex);\n        var ret = {};\n        var pattern = matches[1].toUpperCase();\n        ret.isAccount = (pattern === 'A');\n        /* tslint:disable no-any */\n        ret.type = IntlBase.patternMatcher[pattern];\n        if (skeleton.length > 1) {\n            ret.fractionDigits = parseInt(matches[2], 10);\n        }\n        return ret;\n    }\n    IntlBase.getProperNumericSkeleton = getProperNumericSkeleton;\n    /**\n     * Returns format data for number formatting like minimum fraction, maximum fraction, etc..,\n     * @private\n     * @param {string} pattern\n     * @param {boolean} needFraction\n     * @param {string} cSymbol\n     * @param {boolean} fractionOnly\n     * @returns {NegativeData}\n     */\n    function getFormatData(pattern, needFraction, cSymbol, fractionOnly) {\n        var nData = fractionOnly ? {} : { nlead: '', nend: '' };\n        var match = pattern.match(IntlBase.customRegex);\n        if (match) {\n            if (!fractionOnly) {\n                nData.nlead = changeCurrencySymbol(match[1], cSymbol);\n                nData.nend = changeCurrencySymbol(match[10], cSymbol);\n                nData.groupPattern = match[4];\n            }\n            var fraction = match[7];\n            if (fraction && needFraction) {\n                var fmatch = fraction.match(fractionRegex);\n                if (!isNullOrUndefined(fmatch)) {\n                    nData.minimumFraction = fmatch.length;\n                }\n                else {\n                    nData.minimumFraction = 0;\n                }\n                nData.maximumFraction = fraction.length - 1;\n            }\n        }\n        return nData;\n    }\n    IntlBase.getFormatData = getFormatData;\n    /**\n     * Changes currency symbol\n     * @private\n     * @param {string} val\n     * @param {string} sym\n     * @returns {string}\n     */\n    function changeCurrencySymbol(val, sym) {\n        if (val) {\n            return val.replace(IntlBase.defaultCurrency, sym);\n        }\n        return '';\n    }\n    /**\n     * Returns currency symbol based on currency code\n     * @private\n     * @param {Object} numericObject\n     * @param {string} currencyCode\n     * @returns {string}\n     */\n    function getCurrencySymbol(numericObject, currencyCode) {\n        return getValue('currencies.' + currencyCode + '.symbol', numericObject) || '$';\n    }\n    IntlBase.getCurrencySymbol = getCurrencySymbol;\n    /**\n     * Returns formatting options for custom number format\n     * @private\n     * @param {string} format\n     * @param {CommonOptions} dOptions\n     * @param {Dependables} obj\n     * @returns {GenericFormatOptions}\n     */\n    function customFormat(format, dOptions, obj) {\n        var options = {};\n        var formatSplit = format.split(';');\n        var data = ['pData', 'nData', 'zeroData'];\n        for (var i = 0; i < formatSplit.length; i++) {\n            options[data[i]] = customNumberFormat(formatSplit[i], dOptions, obj);\n        }\n        if (isNullOrUndefined(options.nData)) {\n            options.nData = extend({}, options.pData);\n            options.nData.nlead = isNullOrUndefined(dOptions) ? '-' + options.nData.nlead : dOptions.minusSymbol + options.nData.nlead;\n        }\n        return options;\n    }\n    IntlBase.customFormat = customFormat;\n    /**\n     * Returns custom formatting options\n     * @private\n     * @param {string} format\n     * @param {CommonOptions} dOptions\n     * @param {Object} numObject\n     * @returns {NegativeData}\n     */\n    function customNumberFormat(format, dOptions, numObject) {\n        var cOptions = { type: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0 };\n        var pattern = format.match(IntlBase.customRegex);\n        if (isNullOrUndefined(pattern) || pattern[5] === '') {\n            throwError('Given Format is not valid or Cldr data not loaded');\n        }\n        cOptions.nlead = pattern[1];\n        cOptions.nend = pattern[10];\n        var integerPart = pattern[6];\n        cOptions.useGrouping = integerPart.indexOf(',') !== -1;\n        integerPart = integerPart.replace(/,/g, '');\n        var fractionPart = pattern[7];\n        if (integerPart.indexOf('0') !== -1) {\n            cOptions.minimumIntegerDigits = integerPart.length - integerPart.indexOf('0');\n        }\n        if (!isNullOrUndefined(fractionPart)) {\n            cOptions.minimumFractionDigits = fractionPart.lastIndexOf('0');\n            cOptions.maximumFractionDigits = fractionPart.lastIndexOf('#');\n            if (cOptions.minimumFractionDigits === -1) {\n                cOptions.minimumFractionDigits = 0;\n            }\n            if (cOptions.maximumFractionDigits === -1 || cOptions.maximumFractionDigits < cOptions.minimumFractionDigits) {\n                cOptions.maximumFractionDigits = cOptions.minimumFractionDigits;\n            }\n        }\n        if (!isNullOrUndefined(dOptions)) {\n            extend(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '$', dOptions.currencySymbol));\n            if (!cOptions.isCurrency) {\n                extend(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '%', dOptions.percentSymbol));\n            }\n        }\n        else {\n            extend(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '%', '%'));\n        }\n        if (!isNullOrUndefined(numObject)) {\n            var symbolPattern = getSymbolPattern(cOptions.type, dOptions.numberMapper.numberSystem, numObject, false);\n            if (cOptions.useGrouping) {\n                cOptions.groupSeparator = dOptions.numberMapper.numberSymbols[mapper[2]];\n                cOptions.groupData = NumberFormat.getGroupingDetails(symbolPattern.split(';')[0]);\n            }\n            cOptions.nlead = cOptions.nlead.replace(/\\'/g, '');\n            cOptions.nend = cOptions.nend.replace(/\\'/g, '');\n        }\n        return cOptions;\n    }\n    /**\n     * Returns formatting options for currency or percent type\n     * @private\n     * @param {string[]} parts\n     * @param {string} actual\n     * @param {string} symbol\n     * @returns {NegativeData}\n     */\n    function isCurrencyPercent(parts, actual, symbol) {\n        var options = { nlead: parts[0], nend: parts[1] };\n        for (var i = 0; i < 2; i++) {\n            var part = parts[i];\n            var loc = part.indexOf(actual);\n            if ((loc !== -1) && ((loc < part.indexOf('\\'')) || (loc > part.lastIndexOf('\\'')))) {\n                options[typeMapper[i]] = part.substr(0, loc) + symbol + part.substr(loc + 1);\n                options[typeMapper[actual]] = true;\n                options.type = options.isCurrency ? 'currency' : 'percent';\n                break;\n            }\n        }\n        return options;\n    }\n    IntlBase.isCurrencyPercent = isCurrencyPercent;\n    /**\n     * Returns culture based date separator\n     * @private\n     * @param {Object} dateObj\n     * @returns {string}\n     */\n    function getDateSeparator(dateObj) {\n        var value = (getValue('dateFormats.short', dateObj) || '').match(/[d‏M‏]([^d‏M])[d‏M‏]/i);\n        return value ? value[1] : '/';\n    }\n    IntlBase.getDateSeparator = getDateSeparator;\n    /**\n     * Returns Native Date Time pattern\n     * @private\n     * @param {string} culture\n     * @param {DateFormatOptions} options\n     * @param {Object} cldr\n     * @returns {string}\n     */\n    function getActualDateTimeFormat(culture, options, cldr, isExcelFormat) {\n        var dependable = getDependables(cldr, culture);\n        var actualPattern = options.format || getResultantPattern(options.skeleton, dependable.dateObject, options.type);\n        if (isExcelFormat) {\n            actualPattern = actualPattern.replace(patternRegex, function (pattern) {\n                return patternMatch[pattern];\n            });\n            if (actualPattern.indexOf('z') !== -1) {\n                var tLength = actualPattern.match(/z/g).length;\n                var timeZonePattern = void 0;\n                var options_1 = { 'timeZone': {} };\n                options_1.numMapper = parser.getNumberMapper(dependable.parserObject, parser.getNumberingSystem(cldr));\n                options_1.timeZone = getValue('dates.timeZoneNames', dependable.parserObject);\n                var value = new Date();\n                var timezone = value.getTimezoneOffset();\n                var pattern = (tLength < 4) ? '+H;-H' : options_1.timeZone.hourFormat;\n                pattern = pattern.replace(/:/g, options_1.numMapper.timeSeparator);\n                if (timezone === 0) {\n                    timeZonePattern = options_1.timeZone.gmtZeroFormat;\n                }\n                else {\n                    timeZonePattern = DateFormat.getTimeZoneValue(timezone, pattern);\n                    timeZonePattern = options_1.timeZone.gmtFormat.replace(/\\{0\\}/, timeZonePattern);\n                }\n                actualPattern = actualPattern.replace(/[z]+/, '\"' + timeZonePattern + '\"');\n            }\n            actualPattern = actualPattern.replace(/ $/, '');\n        }\n        return actualPattern;\n    }\n    IntlBase.getActualDateTimeFormat = getActualDateTimeFormat;\n    /**\n     * Returns Native Number pattern\n     * @private\n     * @param {string} culture\n     * @param {NumberFormatOptions} options\n     * @param {Object} cldr\n     * @returns {string}\n     */\n    function getActualNumberFormat(culture, options, cldr) {\n        var dependable = getDependables(cldr, culture, true);\n        var parseOptions = { custom: true };\n        var minFrac;\n        if ((/(c|a)$/ig).test(options.format) && !options.minimumFractionDigits && !options.maximumFractionDigits) {\n            var dOptions = {};\n            dOptions.numberMapper = parser.getNumberMapper(dependable.parserObject, parser.getNumberingSystem(cldr), true);\n            var symbolPattern = getSymbolPattern('currency', dOptions.numberMapper.numberSystem, dependable.numericObject, (/a/i).test(options.format));\n            minFrac = getFormatData(symbolPattern.split(';')[0], true, '', true).minimumFraction;\n        }\n        var actualPattern;\n        if ((IntlBase.formatRegex.test(options.format)) || !(options.format)) {\n            extend(parseOptions, getProperNumericSkeleton(options.format || 'N'));\n            parseOptions.custom = false;\n            actualPattern = '###0';\n            if (parseOptions.fractionDigits || options.minimumFractionDigits || options.maximumFractionDigits || minFrac) {\n                var defaultMinimum = 0;\n                if (parseOptions.fractionDigits) {\n                    options.minimumFractionDigits = options.maximumFractionDigits = parseOptions.fractionDigits;\n                }\n                actualPattern = fractionDigitsPattern(actualPattern, minFrac || parseOptions.fractionDigits ||\n                    options.minimumFractionDigits || defaultMinimum, options.maximumFractionDigits || defaultMinimum);\n            }\n            if (options.minimumIntegerDigits) {\n                actualPattern = minimumIntegerPattern(actualPattern, options.minimumIntegerDigits);\n            }\n            if (options.useGrouping) {\n                actualPattern = groupingPattern(actualPattern);\n            }\n            if (parseOptions.type === 'currency' && !parseOptions.isAccount) {\n                actualPattern = '$ ' + actualPattern;\n            }\n            else if (parseOptions.type === 'currency' && parseOptions.isAccount) {\n                actualPattern = '$ ' + actualPattern + ';($ ' + actualPattern + ')';\n            }\n            if (parseOptions.type === 'percent') {\n                actualPattern += ' %';\n            }\n        }\n        else {\n            actualPattern = options.format.replace(/\\'/g, '\"');\n        }\n        return actualPattern;\n    }\n    IntlBase.getActualNumberFormat = getActualNumberFormat;\n    function fractionDigitsPattern(pattern, minDigits, maxDigits) {\n        pattern += '.';\n        for (var a = 0; a < minDigits; a++) {\n            pattern += '0';\n        }\n        if (minDigits < maxDigits) {\n            var diff = maxDigits - minDigits;\n            for (var b = 0; b < diff; b++) {\n                pattern += '#';\n            }\n        }\n        return pattern;\n    }\n    function minimumIntegerPattern(pattern, digits) {\n        var temp = pattern.split('.');\n        var integer = '';\n        for (var x = 0; x < digits; x++) {\n            integer += '0';\n        }\n        return temp[1] ? (integer + '.' + temp[1]) : integer;\n    }\n    function groupingPattern(pattern) {\n        var temp = pattern.split('.');\n        var integer = temp[0];\n        var no = 3 - integer.length % 3;\n        var hash = (no && no === 1) ? '#' : (no === 2 ? '##' : '');\n        integer = hash + integer;\n        pattern = '';\n        for (var x = integer.length - 1; x > 0; x = x - 3) {\n            pattern = ',' + integer[x - 2] + integer[x - 1] + integer[x] + pattern;\n        }\n        pattern = pattern.slice(1);\n        return temp[1] ? (pattern + '.' + temp[1]) : pattern;\n    }\n})(IntlBase || (IntlBase = {}));\n","/**\n * To import utils\n */\nimport { isNullOrUndefined } from './util';\n/**\n * @private\n */\nvar CanvasRenderer = /** @class */ (function () {\n    /* End-Properties */\n    function CanvasRenderer(rootID) {\n        this.rootId = rootID;\n    }\n    // method to get the attributes value\n    /* tslint:disable */\n    CanvasRenderer.prototype.getOptionValue = function (options, key) {\n        return options[key];\n    };\n    /* tslint:enable */\n    /**\n     * To create a Html5 canvas element\n     * @param {BaseAttibutes} options - Options to create canvas\n     * @return {HTMLCanvasElement}\n     */\n    CanvasRenderer.prototype.createCanvas = function (options) {\n        var canvasObj = document.createElement('canvas');\n        canvasObj.setAttribute('id', this.rootId + '_canvas');\n        this.ctx = canvasObj.getContext('2d');\n        this.canvasObj = canvasObj;\n        this.setCanvasSize(options.width, options.height);\n        return this.canvasObj;\n    };\n    /**\n     * To set the width and height for the Html5 canvas element\n     * @param {number} width - width of the canvas\n     * @param {number} height - height of the canvas\n     * @return {void}\n     */\n    CanvasRenderer.prototype.setCanvasSize = function (width, height) {\n        var element = document.getElementById(this.rootId);\n        var size = !isNullOrUndefined(element) ? element.getBoundingClientRect() : null;\n        if (isNullOrUndefined(this.width)) {\n            this.canvasObj.setAttribute('width', width ? width.toString() : size.width.toString());\n        }\n        else {\n            this.canvasObj.setAttribute('width', this.width.toString());\n        }\n        if (isNullOrUndefined(this.height)) {\n            this.canvasObj.setAttribute('height', height ? height.toString() : '450');\n        }\n        else {\n            this.canvasObj.setAttribute('height', this.height.toString());\n        }\n    };\n    // To set the values to the attributes\n    CanvasRenderer.prototype.setAttributes = function (options) {\n        this.ctx.lineWidth = this.getOptionValue(options, 'stroke-width');\n        var dashArray = this.getOptionValue(options, 'stroke-dasharray');\n        if (!isNullOrUndefined(dashArray)) {\n            var dashArrayString = dashArray.split(',');\n            this.ctx.setLineDash([parseInt(dashArrayString[0], 10), parseInt(dashArrayString[1], 10)]);\n        }\n        this.ctx.strokeStyle = this.getOptionValue(options, 'stroke');\n    };\n    /**\n     * To draw a line\n     * @param {LineAttributes} options - required options to draw a line on the canvas\n     * @return {void}\n     */\n    CanvasRenderer.prototype.drawLine = function (options) {\n        this.ctx.save();\n        this.ctx.beginPath();\n        this.ctx.lineWidth = this.getOptionValue(options, 'stroke-width');\n        this.ctx.strokeStyle = options.stroke;\n        this.ctx.moveTo(options.x1, options.y1);\n        this.ctx.lineTo(options.x2, options.y2);\n        this.ctx.stroke();\n        this.ctx.restore();\n        this.dataUrl = this.canvasObj.toDataURL();\n    };\n    /**\n     * To draw a rectangle\n     * @param {RectAttributes} options - required options to draw a rectangle on the canvas\n     * @return {void}\n     */\n    CanvasRenderer.prototype.drawRectangle = function (options) {\n        var canvasCtx = this.ctx;\n        var cornerRadius = options.rx;\n        this.ctx.save();\n        this.ctx.beginPath();\n        this.ctx.globalAlpha = this.getOptionValue(options, 'opacity');\n        this.setAttributes(options);\n        this.ctx.rect(options.x, options.y, options.width, options.height);\n        if (cornerRadius !== null && cornerRadius >= 0) {\n            this.drawCornerRadius(options);\n        }\n        else {\n            if (options.fill === 'none') {\n                options.fill = 'transparent';\n            }\n            this.ctx.fillStyle = options.fill;\n            this.ctx.fillRect(options.x, options.y, options.width, options.height);\n            this.ctx.stroke();\n        }\n        this.ctx.restore();\n        this.ctx = canvasCtx;\n        this.dataUrl = this.canvasObj.toDataURL();\n    };\n    // To draw the corner of a rectangle\n    CanvasRenderer.prototype.drawCornerRadius = function (options) {\n        var cornerRadius = options.rx;\n        var x = options.x;\n        var y = options.y;\n        var width = options.width;\n        var height = options.height;\n        if (options.fill === 'none') {\n            options.fill = 'transparent';\n        }\n        this.ctx.fillStyle = options.fill;\n        if (width < 2 * cornerRadius) {\n            cornerRadius = width / 2;\n        }\n        if (height < 2 * cornerRadius) {\n            cornerRadius = height / 2;\n        }\n        this.ctx.beginPath();\n        this.ctx.moveTo(x + width - cornerRadius, y);\n        this.ctx.arcTo(x + width, y, x + width, y + height, cornerRadius);\n        this.ctx.arcTo(x + width, y + height, x, y + height, cornerRadius);\n        this.ctx.arcTo(x, y + height, x, y, cornerRadius);\n        this.ctx.arcTo(x, y, x + width, y, cornerRadius);\n        this.ctx.closePath();\n        this.ctx.fill();\n        this.ctx.stroke();\n        this.dataUrl = this.canvasObj.toDataURL();\n    };\n    /**\n     * To draw a path on the canvas\n     * @param {PathAttributes} options - options needed to draw path\n     * @param {Int32Array} canvasTranslate - Array of numbers to translate the canvas\n     * @return {void}\n     */\n    CanvasRenderer.prototype.drawPath = function (options, canvasTranslate) {\n        var path = options.d;\n        var dataSplit = path.split(' ');\n        var borderWidth = this.getOptionValue(options, 'stroke-width');\n        var canvasCtx = this.ctx;\n        var flag = true;\n        this.ctx.save();\n        this.ctx.beginPath();\n        if (canvasTranslate) {\n            this.ctx.translate(canvasTranslate[0], canvasTranslate[1]);\n        }\n        this.ctx.globalAlpha = options.opacity ? options.opacity : this.getOptionValue(options, 'fill-opacity');\n        this.setAttributes(options);\n        for (var i = 0; i < dataSplit.length; i = i + 3) {\n            var x1 = parseFloat(dataSplit[i + 1]);\n            var y1 = parseFloat(dataSplit[i + 2]);\n            switch (dataSplit[i]) {\n                case 'M':\n                    if (!options.innerR && !options.cx) {\n                        this.ctx.moveTo(x1, y1);\n                    }\n                    break;\n                case 'L':\n                    if (!options.innerR) {\n                        this.ctx.lineTo(x1, y1);\n                    }\n                    break;\n                case 'C':\n                    var c1 = parseFloat(dataSplit[i + 3]);\n                    var c2 = parseFloat(dataSplit[i + 4]);\n                    var c3 = parseFloat(dataSplit[i + 5]);\n                    var c4 = parseFloat(dataSplit[i + 6]);\n                    this.ctx.bezierCurveTo(x1, y1, c1, c2, c3, c4);\n                    i = i + 4;\n                    break;\n                case 'A':\n                    if (!options.innerR) {\n                        if (options.cx) {\n                            this.ctx.arc(options.cx, options.cy, options.radius, 0, 2 * Math.PI, options.counterClockWise);\n                        }\n                        else {\n                            this.ctx.moveTo(options.x, options.y);\n                            this.ctx.arc(options.x, options.y, options.radius, options.start, options.end, options.counterClockWise);\n                            this.ctx.lineTo(options.x, options.y);\n                        }\n                    }\n                    else if (flag) {\n                        this.ctx.arc(options.x, options.y, options.radius, options.start, options.end, options.counterClockWise);\n                        this.ctx.arc(options.x, options.y, options.innerR, options.end, options.start, !options.counterClockWise);\n                        flag = false;\n                    }\n                    i = i + 5;\n                    break;\n                case 'z':\n                    this.ctx.closePath();\n                    break;\n            }\n        }\n        if (options.fill !== 'none' && options.fill !== undefined) {\n            this.ctx.fillStyle = options.fill;\n            this.ctx.fill();\n        }\n        if (borderWidth > 0) {\n            this.ctx.stroke();\n        }\n        this.ctx.restore();\n        this.ctx = canvasCtx;\n        this.dataUrl = this.canvasObj.toDataURL();\n    };\n    /**\n     * To draw a text\n     * @param {TextAttributes} options - options required to draw text\n     * @param {string} label - Specifies the text which has to be drawn on the canvas\n     * @return {void}\n     */\n    CanvasRenderer.prototype.drawText = function (options, label) {\n        var fontWeight = this.getOptionValue(options, 'font-weight');\n        if (!isNullOrUndefined(fontWeight) && fontWeight.toLowerCase() === 'regular') {\n            fontWeight = 'normal';\n        }\n        var fontSize = this.getOptionValue(options, 'font-size');\n        var fontFamily = this.getOptionValue(options, 'font-family');\n        var fontStyle = this.getOptionValue(options, 'font-style').toLowerCase();\n        var font = (fontStyle + ' ' + fontWeight + ' ' + fontSize + ' ' + fontFamily);\n        var anchor = this.getOptionValue(options, 'text-anchor');\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        if (anchor === 'middle') {\n            anchor = 'center';\n        }\n        this.ctx.save();\n        this.ctx.fillStyle = options.fill;\n        this.ctx.font = font;\n        this.ctx.textAlign = anchor;\n        this.ctx.globalAlpha = opacity;\n        if (options.baseline) {\n            this.ctx.textBaseline = options.baseline;\n        }\n        var txtlngth = 0;\n        this.ctx.translate(options.x + (txtlngth / 2), options.y);\n        this.ctx.rotate(options.labelRotation * Math.PI / 180);\n        this.ctx.fillText(label, 0, 0);\n        this.ctx.restore();\n        this.dataUrl = this.canvasObj.toDataURL();\n    };\n    /**\n     * To draw circle on the canvas\n     * @param {CircleAttributes} options - required options to draw the circle\n     * @return {void}\n     */\n    CanvasRenderer.prototype.drawCircle = function (options) {\n        var canvasCtx = this.ctx;\n        this.ctx.save();\n        this.ctx.beginPath();\n        this.ctx.arc(options.cx, options.cy, options.r, 0, 2 * Math.PI);\n        this.ctx.fillStyle = options.fill;\n        this.ctx.globalAlpha = options.opacity;\n        this.ctx.fill();\n        this.setAttributes(options);\n        this.ctx.stroke();\n        this.ctx.restore();\n        this.ctx = canvasCtx;\n        this.dataUrl = this.canvasObj.toDataURL();\n    };\n    /**\n     * To draw polyline\n     * @param {PolylineAttributes} options - options needed to draw polyline\n     * @return {void}\n     */\n    CanvasRenderer.prototype.drawPolyline = function (options) {\n        this.ctx.save();\n        this.ctx.beginPath();\n        var points = options.points.split(' ');\n        for (var i = 0; i < points.length - 1; i++) {\n            var point = points[i].split(',');\n            var x = parseFloat(point[0]);\n            var y = parseFloat(point[1]);\n            if (i === 0) {\n                this.ctx.moveTo(x, y);\n            }\n            else {\n                this.ctx.lineTo(x, y);\n            }\n        }\n        this.ctx.lineWidth = this.getOptionValue(options, 'stroke-width');\n        this.ctx.strokeStyle = options.stroke;\n        this.ctx.stroke();\n        this.ctx.restore();\n        this.dataUrl = this.canvasObj.toDataURL();\n    };\n    /**\n     * To draw an ellipse on the canvas\n     * @param {EllipseAttributes} options - options needed to draw ellipse\n     * @return {void}\n     */\n    CanvasRenderer.prototype.drawEllipse = function (options) {\n        var canvasCtx = this.ctx;\n        var circumference = Math.max(options.rx, options.ry);\n        var scaleX = options.rx / circumference;\n        var scaleY = options.ry / circumference;\n        this.ctx.save();\n        this.ctx.beginPath();\n        this.ctx.translate(options.cx, options.cy);\n        this.ctx.save();\n        this.ctx.scale(scaleX, scaleY);\n        this.ctx.arc(0, 0, circumference, 0, 2 * Math.PI, false);\n        this.ctx.fillStyle = options.fill;\n        this.ctx.fill();\n        this.ctx.restore();\n        this.ctx.lineWidth = this.getOptionValue(options, 'stroke-width');\n        this.ctx.strokeStyle = options.stroke;\n        this.ctx.stroke();\n        this.ctx.restore();\n        this.ctx = canvasCtx;\n        this.dataUrl = this.canvasObj.toDataURL();\n    };\n    /**\n     * To draw an image\n     * @param {ImageAttributes} options - options required to draw an image on the canvas\n     * @return {void}\n     */\n    CanvasRenderer.prototype.drawImage = function (options) {\n        this.ctx.save();\n        var imageObj = new Image();\n        if (!isNullOrUndefined(options.href)) {\n            imageObj.src = options.href;\n            this.ctx.drawImage(imageObj, options.x, options.y, options.width, options.height);\n        }\n        this.ctx.restore();\n        this.dataUrl = this.canvasObj.toDataURL();\n    };\n    /**\n     * To create a linear gradient\n     * @param {string[]} colors - Specifies the colors required to create linear gradient\n     * @return {string}\n     */\n    CanvasRenderer.prototype.createLinearGradient = function (colors) {\n        var myGradient;\n        if (!isNullOrUndefined(colors[0].colorStop)) {\n            myGradient = this.ctx.createLinearGradient(0, 0, 0, this.canvasObj.height);\n        }\n        var color = this.setGradientValues(colors, myGradient);\n        return color;\n    };\n    /**\n     * To create a radial gradient\n     * @param {string[]} colors - Specifies the colors required to create linear gradient\n     * @return {string}\n     */\n    CanvasRenderer.prototype.createRadialGradient = function (colors) {\n        var myGradient;\n        if (!isNullOrUndefined(colors[0].colorStop)) {\n            myGradient = this.ctx.createRadialGradient(0, 0, 0, 0, 0, this.canvasObj.height);\n        }\n        var colorName = this.setGradientValues(colors, myGradient);\n        return colorName;\n    };\n    // To set the gradient values\n    CanvasRenderer.prototype.setGradientValues = function (colors, myGradient) {\n        var colorName;\n        if (!isNullOrUndefined(colors[0].colorStop)) {\n            for (var i = 0; i <= colors.length - 1; i++) {\n                var color = colors[i].color;\n                var newColorStop = (colors[i].colorStop).slice(0, -1);\n                var stopColor = parseInt(newColorStop, 10) / 100;\n                myGradient.addColorStop(stopColor, color);\n            }\n            colorName = myGradient.toString();\n        }\n        else {\n            colorName = colors[0].color.toString();\n        }\n        this.dataUrl = this.canvasObj.toDataURL();\n        return colorName;\n    };\n    /**\n     * To set the attributes to the element\n     * @param {SVGCanvasAttributes} options - Attributes to set for the element\n     * @param {HTMLElement} element - The element to which the attributes need to be set\n     * @return {HTMLElement}\n     */\n    CanvasRenderer.prototype.setElementAttributes = function (options, element) {\n        var keys = Object.keys(options);\n        var values = Object.keys(options).map(function (key) { return options[key]; });\n        for (var i = 0; i < keys.length; i++) {\n            element.setAttribute(keys[i], values[i]);\n        }\n        return element;\n    };\n    /**\n     * To update the values of the canvas element attributes\n     * @param {SVGCanvasAttributes} options - Specifies the colors required to create gradient\n     * @return {void}\n     */\n    CanvasRenderer.prototype.updateCanvasAttributes = function (options) {\n        this.setElementAttributes(options, this.canvasObj);\n        var ctx = this.ctx;\n        if (!isNullOrUndefined(this.dataUrl)) {\n            var img_1 = new Image;\n            img_1.onload = function () {\n                ctx.drawImage(img_1, 0, 0);\n            };\n            img_1.src = this.dataUrl;\n        }\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","/**\n * Module loading operations\n */\nimport { createInstance, setValue, getValue, deleteObject } from './util';\nvar MODULE_SUFFIX = 'Module';\nvar ModuleLoader = /** @class */ (function () {\n    function ModuleLoader(parent) {\n        this.loadedModules = [];\n        this.parent = parent;\n    }\n    ;\n    /**\n     * Inject required modules in component library\n     * @return {void}\n     * @param {ModuleDeclaration[]} requiredModules - Array of modules to be required\n     * @param {Function[]} moduleList - Array of modules to be injected from sample side\n     */\n    ModuleLoader.prototype.inject = function (requiredModules, moduleList) {\n        var reqLength = requiredModules.length;\n        if (reqLength === 0) {\n            this.clean();\n            return;\n        }\n        if (this.loadedModules.length) {\n            this.clearUnusedModule(requiredModules);\n        }\n        for (var i = 0; i < reqLength; i++) {\n            var modl = requiredModules[i];\n            for (var _i = 0, moduleList_1 = moduleList; _i < moduleList_1.length; _i++) {\n                var module = moduleList_1[_i];\n                var modName = modl.member;\n                if (module.prototype.getModuleName() === modl.member && !this.isModuleLoaded(modName)) {\n                    var moduleObject = createInstance(module, modl.args);\n                    var memberName = this.getMemberName(modName);\n                    if (modl.isProperty) {\n                        setValue(memberName, module, this.parent);\n                    }\n                    else {\n                        setValue(memberName, moduleObject, this.parent);\n                    }\n                    var loadedModule = modl;\n                    loadedModule.member = memberName;\n                    this.loadedModules.push(loadedModule);\n                }\n            }\n        }\n    };\n    /**\n     * To remove the created object while destroying the control\n     * @return {void}\n     */\n    ModuleLoader.prototype.clean = function () {\n        for (var _i = 0, _a = this.loadedModules; _i < _a.length; _i++) {\n            var modules = _a[_i];\n            if (!modules.isProperty) {\n                getValue(modules.member, this.parent).destroy();\n            }\n        }\n        this.loadedModules = [];\n    };\n    /**\n     * Removes all unused modules\n     * @param {ModuleDeclaration[]} moduleList\n     * @returns {void}\n     */\n    ModuleLoader.prototype.clearUnusedModule = function (moduleList) {\n        var _this = this;\n        var usedModules = moduleList.map(function (arg) { return _this.getMemberName(arg.member); });\n        var removableModule = this.loadedModules.filter(function (module) {\n            return usedModules.indexOf(module.member) === -1;\n        });\n        for (var _i = 0, removableModule_1 = removableModule; _i < removableModule_1.length; _i++) {\n            var mod = removableModule_1[_i];\n            if (!mod.isProperty) {\n                getValue(mod.member, this.parent).destroy();\n            }\n            this.loadedModules.splice(this.loadedModules.indexOf(mod), 1);\n            deleteObject(this.parent, mod.member);\n        }\n    };\n    /**\n     * To get the name of the member.\n     * @param {string} name\n     * @returns {string}\n     */\n    ModuleLoader.prototype.getMemberName = function (name) {\n        return name[0].toLowerCase() + name.substring(1) + MODULE_SUFFIX;\n    };\n    /**\n     * Returns boolean based on whether the module specified is loaded or not\n     * @param {string} modName\n     * @returns {boolean}\n     */\n    ModuleLoader.prototype.isModuleLoaded = function (modName) {\n        for (var _i = 0, _a = this.loadedModules; _i < _a.length; _i++) {\n            var mod = _a[_i];\n            if (mod.member === this.getMemberName(modName)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    return ModuleLoader;\n}());\nexport { ModuleLoader };\n","import { getValue, setImmediate, setValue, merge } from './util';\nimport { Base } from './base';\n/**\n * To detect the changes for inner properties.\n * @private\n */\nvar ChildProperty = /** @class */ (function () {\n    function ChildProperty(parent, propName, defaultValue, isArray) {\n        this.properties = {};\n        this.changedProperties = {};\n        this.childChangedProperties = {};\n        this.oldProperties = {};\n        // tslint:disable-next-line:no-empty\n        this.finalUpdate = function () { };\n        this.callChildDataBind = getValue('callChildDataBind', Base);\n        this.parentObj = parent;\n        this.controlParent = this.parentObj.controlParent || this.parentObj;\n        this.propName = propName;\n        this.setProperties(defaultValue, true);\n        this.isParentArray = isArray;\n    }\n    /**\n     * Updates the property changes\n     * @param {boolean} val\n     * @param {string} propName\n     * @returns {void}\n     */\n    ChildProperty.prototype.updateChange = function (val, propName) {\n        if (val === true) {\n            this.parentObj.childChangedProperties[propName] = val;\n        }\n        else {\n            delete this.parentObj.childChangedProperties[propName];\n        }\n        if (this.parentObj.updateChange) {\n            this.parentObj.updateChange(val, this.parentObj.propName);\n        }\n    };\n    /**\n     * Updates time out duration\n     */\n    ChildProperty.prototype.updateTimeOut = function () {\n        if (this.parentObj.updateTimeOut) {\n            this.parentObj.finalUpdate();\n            this.parentObj.updateTimeOut();\n        }\n        else {\n            this.parentObj.finalUpdate = setImmediate(this.parentObj.dataBind.bind(this.parentObj));\n        }\n    };\n    /**\n     * Clears changed properties\n     */\n    ChildProperty.prototype.clearChanges = function () {\n        this.finalUpdate();\n        this.updateChange(false, this.propName);\n        this.oldProperties = {};\n        this.changedProperties = {};\n    };\n    /**\n     * Set property changes\n     * @param {Object} prop\n     * @param {boolean} muteOnChange\n     * {void}\n     */\n    ChildProperty.prototype.setProperties = function (prop, muteOnChange) {\n        if (muteOnChange === true) {\n            merge(this, prop);\n            this.updateChange(false, this.propName);\n            this.clearChanges();\n        }\n        else {\n            merge(this, prop);\n        }\n    };\n    /**\n     * Binds data\n     */\n    ChildProperty.prototype.dataBind = function () {\n        this.callChildDataBind(this.childChangedProperties, this);\n        if (this.isParentArray) {\n            var curIndex = this.parentObj[this.propName].indexOf(this);\n            if (Object.keys(this.changedProperties).length) {\n                setValue(this.propName + '.' + curIndex, this.changedProperties, this.parentObj.changedProperties);\n                setValue(this.propName + '.' + curIndex, this.oldProperties, this.parentObj.oldProperties);\n            }\n        }\n        else {\n            this.parentObj.changedProperties[this.propName] = this.changedProperties;\n            this.parentObj.oldProperties[this.propName] = this.oldProperties;\n        }\n        this.clearChanges();\n    };\n    /**\n     * Saves changes to newer values\n     * @param {string} key\n     * @param {Object} newValue\n     * @param {Object} oldValue\n     * @returns {void}\n     */\n    ChildProperty.prototype.saveChanges = function (key, newValue, oldValue) {\n        if (this.controlParent.isProtectedOnChange) {\n            return;\n        }\n        this.oldProperties[key] = oldValue;\n        this.changedProperties[key] = newValue;\n        this.updateChange(true, this.propName);\n        this.finalUpdate();\n        this.updateTimeOut();\n    };\n    return ChildProperty;\n}());\nexport { ChildProperty };\n","/**\n * Parser\n */\nvar defaultNumberingSystem = {\n    'latn': {\n        '_digits': '0123456789',\n        '_type': 'numeric'\n    }\n};\nimport { isUndefined, getValue } from '../util';\nvar latnRegex = /^[0-9]*$/;\nvar defaultNumberSymbols = {\n    'decimal': '.',\n    'group': ',',\n    'percentSign': '%',\n    'plusSign': '+',\n    'minusSign': '-',\n    'infinity': '∞',\n    'nan': 'NaN',\n    'exponential': 'E'\n};\nvar latnNumberSystem = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n/**\n * Interface for parser base\n * @private\n */\nvar ParserBase = /** @class */ (function () {\n    function ParserBase() {\n    }\n    /**\n     * Returns the cldr object for the culture specifies\n     * @param {Object} obj - Specifies the object from which culture object to be acquired.\n     * @param {string} cName - Specifies the culture name.\n     * @returns {Object}\n     */\n    ParserBase.getMainObject = function (obj, cName) {\n        return getValue('main.' + cName, obj);\n    };\n    /**\n     * Returns the numbering system object from given cldr data.\n     * @param {Object} obj - Specifies the object from which number system is acquired.\n     * @returns {Object}\n     */\n    ParserBase.getNumberingSystem = function (obj) {\n        return getValue('supplemental.numberingSystems', obj) || this.numberingSystems;\n    };\n    /**\n     * Returns the reverse of given object keys or keys specified.\n     * @param {Object} prop - Specifies the object to be reversed.\n     * @param {number[]} keys - Optional parameter specifies the custom keyList for reversal.\n     * @returns {Object}\n     */\n    ParserBase.reverseObject = function (prop, keys) {\n        var propKeys = keys || Object.keys(prop);\n        var res = {};\n        for (var _i = 0, propKeys_1 = propKeys; _i < propKeys_1.length; _i++) {\n            var key = propKeys_1[_i];\n            /* tslint:disable no-any */\n            if (!res.hasOwnProperty(prop[key])) {\n                res[prop[key]] = key;\n            }\n        }\n        return res;\n    };\n    /**\n     * Returns the symbol regex by skipping the escape sequence.\n     * @param {string[]} props - Specifies the array values to be skipped.\n     * @returns {RegExp}\n     */\n    ParserBase.getSymbolRegex = function (props) {\n        var regexStr = props.map(function (str) {\n            return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n        }).join('|');\n        return new RegExp(regexStr, 'g');\n    };\n    ParserBase.getSymbolMatch = function (prop) {\n        var matchKeys = Object.keys(defaultNumberSymbols);\n        var ret = {};\n        for (var _i = 0, matchKeys_1 = matchKeys; _i < matchKeys_1.length; _i++) {\n            var key = matchKeys_1[_i];\n            ret[prop[key]] = defaultNumberSymbols[key];\n        }\n        return ret;\n    };\n    /**\n     * Returns regex string for provided value\n     * @param {string} val\n     * @returns {string}\n     */\n    ParserBase.constructRegex = function (val) {\n        var len = val.length;\n        var ret = '';\n        for (var i = 0; i < len; i++) {\n            if (i !== len - 1) {\n                ret += val[i] + '|';\n            }\n            else {\n                ret += val[i];\n            }\n        }\n        return ret;\n    };\n    /**\n     * Returns the replaced value of matching regex and obj mapper.\n     * @param {string} value - Specifies the  values to be replaced.\n     * @param {RegExp} regex - Specifies the  regex to search.\n     * @param {Object} obj - Specifies the  object matcher to be replace value parts.\n     * @returns {string}\n     */\n    ParserBase.convertValueParts = function (value, regex, obj) {\n        return value.replace(regex, function (str) {\n            return obj[str];\n        });\n    };\n    /**\n     * Returns default numbering system object for formatting from cldr data\n     * @param {Object} obj\n     * @returns {NumericObject}\n     */\n    ParserBase.getDefaultNumberingSystem = function (obj) {\n        var ret = {};\n        ret.obj = getValue('numbers', obj);\n        ret.nSystem = getValue('defaultNumberingSystem', ret.obj);\n        return ret;\n    };\n    /**\n     * Returns the replaced value of matching regex and obj mapper.\n     */\n    ParserBase.getCurrentNumericOptions = function (curObj, numberSystem, needSymbols) {\n        var ret = {};\n        var cur = this.getDefaultNumberingSystem(curObj);\n        if (!isUndefined(cur.nSystem)) {\n            var digits = getValue(cur.nSystem + '._digits', numberSystem);\n            if (!isUndefined(digits)) {\n                ret.numericPair = this.reverseObject(digits, latnNumberSystem);\n                ret.numberParseRegex = new RegExp(this.constructRegex(digits), 'g');\n                ret.numericRegex = '[' + digits[0] + '-' + digits[9] + ']';\n                if (needSymbols) {\n                    ret.numericRegex = digits[0] + '-' + digits[9];\n                    ret.symbolNumberSystem = getValue('symbols-numberSystem-' + cur.nSystem, cur.obj);\n                    ret.symbolMatch = this.getSymbolMatch(ret.symbolNumberSystem);\n                    ret.numberSystem = cur.nSystem;\n                }\n            }\n        }\n        return ret;\n    };\n    /**\n     * Returns number mapper object for the provided cldr data\n     * @param {Object} curObj\n     * @param {Object} numberSystem\n     * @param {boolean} isNumber\n     * @returns {NumberMapper}\n     */\n    ParserBase.getNumberMapper = function (curObj, numberSystem, isNumber) {\n        var ret = { mapper: {} };\n        var cur = this.getDefaultNumberingSystem(curObj);\n        if (!isUndefined(cur.nSystem)) {\n            ret.numberSystem = cur.nSystem;\n            ret.numberSymbols = getValue('symbols-numberSystem-' + cur.nSystem, cur.obj);\n            ret.timeSeparator = getValue('timeSeparator', ret.numberSymbols);\n            var digits = getValue(cur.nSystem + '._digits', numberSystem);\n            if (!isUndefined(digits)) {\n                for (var _i = 0, latnNumberSystem_1 = latnNumberSystem; _i < latnNumberSystem_1.length; _i++) {\n                    var i = latnNumberSystem_1[_i];\n                    ret.mapper[i] = digits[i];\n                }\n            }\n        }\n        return ret;\n    };\n    ParserBase.nPair = 'numericPair';\n    ParserBase.nRegex = 'numericRegex';\n    ParserBase.numberingSystems = defaultNumberingSystem;\n    return ParserBase;\n}());\nexport { ParserBase };\n","import { isUndefined, throwError, isNullOrUndefined, extend } from '../util';\nimport { defaultCurrencyCode } from '../internationalization';\nimport { IntlBase as base } from './intl-base';\nimport { ParserBase as parser } from './parser-base';\nvar errorText = {\n    'ms': 'minimumSignificantDigits',\n    'ls': 'maximumSignificantDigits',\n    'mf': 'minimumFractionDigits',\n    'lf': 'maximumFractionDigits',\n};\nvar integerError = 'minimumIntegerDigits';\nvar percentSign = 'percentSign';\nvar minusSign = 'minusSign';\nvar spaceRegex = /\\s/;\nvar mapper = ['infinity', 'nan', 'group', 'decimal'];\nvar infinity = 'infinity';\nvar nan = 'nan';\n/**\n * Module for number formatting.\n * @private\n */\nvar NumberFormat = /** @class */ (function () {\n    function NumberFormat() {\n    }\n    /**\n     * Returns the formatter function for given skeleton.\n     * @param {string} culture -  Specifies the culture name to be which formatting.\n     * @param {NumberFormatOptions} option - Specific the format in which number  will format.\n     * @param {Object} object- Specifies the global cldr data collection.\n     * @return Function.\n     */\n    NumberFormat.numberFormatter = function (culture, option, cldr) {\n        var _this = this;\n        var fOptions = extend({}, option);\n        var cOptions = {};\n        var dOptions = {};\n        var symbolPattern;\n        var dependable = base.getDependables(cldr, culture, true);\n        dOptions.numberMapper = parser.getNumberMapper(dependable.parserObject, parser.getNumberingSystem(cldr), true);\n        dOptions.currencySymbol = base.getCurrencySymbol(dependable.numericObject, fOptions.currency || defaultCurrencyCode);\n        /* tslint:disable no-any */\n        dOptions.percentSymbol = dOptions.numberMapper.numberSymbols[percentSign];\n        dOptions.minusSymbol = dOptions.numberMapper.numberSymbols[minusSign];\n        var symbols = dOptions.numberMapper.numberSymbols;\n        if ((option.format) && !(base.formatRegex.test(option.format))) {\n            cOptions = base.customFormat(option.format, dOptions, dependable.numericObject);\n        }\n        else {\n            extend(fOptions, base.getProperNumericSkeleton(option.format || 'N'));\n            fOptions.isCurrency = fOptions.type === 'currency';\n            fOptions.isPercent = fOptions.type === 'percent';\n            symbolPattern = base.getSymbolPattern(fOptions.type, dOptions.numberMapper.numberSystem, dependable.numericObject, fOptions.isAccount);\n            fOptions.groupOne = this.checkValueRange(fOptions.maximumSignificantDigits, fOptions.minimumSignificantDigits, true);\n            this.checkValueRange(fOptions.maximumFractionDigits, fOptions.minimumFractionDigits, false, true);\n            if (!isUndefined(fOptions.fractionDigits)) {\n                fOptions.minimumFractionDigits = fOptions.maximumFractionDigits = fOptions.fractionDigits;\n            }\n            if (isUndefined(fOptions.useGrouping)) {\n                fOptions.useGrouping = true;\n            }\n            if (fOptions.isCurrency) {\n                symbolPattern = symbolPattern.replace(/\\u00A4/g, base.defaultCurrency);\n            }\n            var split = symbolPattern.split(';');\n            cOptions.nData = base.getFormatData(split[1] || '-' + split[0], true, dOptions.currencySymbol);\n            cOptions.pData = base.getFormatData(split[0], false, dOptions.currencySymbol);\n            if (fOptions.useGrouping) {\n                fOptions.groupSeparator = symbols[mapper[2]];\n                fOptions.groupData = this.getGroupingDetails(split[0]);\n            }\n            var minFrac = isUndefined(fOptions.minimumFractionDigits);\n            if (minFrac) {\n                fOptions.minimumFractionDigits = cOptions.nData.minimumFraction;\n            }\n            if (isUndefined(fOptions.maximumFractionDigits)) {\n                var mval = cOptions.nData.maximumFraction;\n                fOptions.maximumFractionDigits = isUndefined(mval) && fOptions.isPercent ? 0 : mval;\n            }\n            var mfrac = fOptions.minimumFractionDigits;\n            var lfrac = fOptions.maximumFractionDigits;\n            if (!isUndefined(mfrac) && !isUndefined(lfrac)) {\n                if (mfrac > lfrac) {\n                    fOptions.maximumFractionDigits = mfrac;\n                }\n            }\n        }\n        extend(cOptions.nData, fOptions);\n        extend(cOptions.pData, fOptions);\n        return function (value) {\n            if (isNaN(value)) {\n                return symbols[mapper[1]];\n            }\n            else if (!isFinite(value)) {\n                return symbols[mapper[0]];\n            }\n            return _this.intNumberFormatter(value, cOptions, dOptions);\n        };\n    };\n    /**\n     * Returns grouping details for the pattern provided\n     * @param {string} pattern\n     * @returns {GroupDetails}\n     */\n    NumberFormat.getGroupingDetails = function (pattern) {\n        var ret = {};\n        var match = pattern.match(base.negativeDataRegex);\n        if (match && match[4]) {\n            var pattern_1 = match[4];\n            var p = pattern_1.lastIndexOf(',');\n            if (p !== -1) {\n                var temp = pattern_1.split('.')[0];\n                ret.primary = (temp.length - p) - 1;\n                var s = pattern_1.lastIndexOf(',', p - 1);\n                if (s !== -1) {\n                    ret.secondary = p - 1 - s;\n                }\n            }\n        }\n        return ret;\n    };\n    /**\n     * Returns if the provided integer range is valid.\n     * @param {number} val1\n     * @param {number} val2\n     * @param {boolean} checkbothExist\n     * @param {boolean} isFraction\n     * @returns {boolean}\n     */\n    NumberFormat.checkValueRange = function (val1, val2, checkbothExist, isFraction) {\n        var decide = isFraction ? 'f' : 's';\n        var dint = 0;\n        var str1 = errorText['l' + decide];\n        var str2 = errorText['m' + decide];\n        if (!isUndefined(val1)) {\n            this.checkRange(val1, str1, isFraction);\n            dint++;\n        }\n        if (!isUndefined(val2)) {\n            this.checkRange(val2, str2, isFraction);\n            dint++;\n        }\n        if (dint === 2) {\n            if (val1 < val2) {\n                throwError(str2 + 'specified must be less than the' + str1);\n            }\n            else {\n                return true;\n            }\n        }\n        else if (checkbothExist && dint === 1) {\n            throwError('Both' + str2 + 'and' + str2 + 'must be present');\n        }\n        return false;\n    };\n    /**\n     * Check if the provided fraction range is valid\n     * @param {number} val\n     * @param {string} text\n     * @param {boolean} isFraction\n     * @returns {void}\n     */\n    NumberFormat.checkRange = function (val, text, isFraction) {\n        var range = isFraction ? [0, 20] : [1, 21];\n        if (val < range[0] || val > range[1]) {\n            throwError(text + 'value must be within the range' + range[0] + 'to' + range[1]);\n        }\n    };\n    /**\n     * Returns formatted numeric string for provided formatting options\n     * @param {number} value\n     * @param {base.GenericFormatOptions} fOptions\n     * @param {CommonOptions} dOptions\n     * @returns {string}\n     */\n    NumberFormat.intNumberFormatter = function (value, fOptions, dOptions) {\n        var curData;\n        if (value < 0) {\n            value = value * -1;\n            curData = fOptions.nData;\n        }\n        else if (value === 0) {\n            curData = fOptions.zeroData || fOptions.pData;\n        }\n        else {\n            curData = fOptions.pData;\n        }\n        var fValue = '';\n        if (curData.isPercent) {\n            value = value * 100;\n        }\n        if (curData.groupOne) {\n            fValue = this.processSignificantDigits(value, curData.minimumSignificantDigits, curData.maximumSignificantDigits);\n        }\n        else {\n            fValue = this.processFraction(value, curData.minimumFractionDigits, curData.maximumFractionDigits);\n            if (curData.minimumIntegerDigits) {\n                fValue = this.processMinimumIntegers(fValue, curData.minimumIntegerDigits);\n            }\n        }\n        fValue = fValue.replace('.', dOptions.numberMapper.numberSymbols[mapper[3]]);\n        if (curData.useGrouping) {\n            fValue = this.groupNumbers(fValue, curData.groupData.primary, curData.groupSeparator || ',', dOptions.numberMapper.numberSymbols[mapper[3]] || '.', curData.groupData.secondary);\n        }\n        fValue = parser.convertValueParts(fValue, base.latnParseRegex, dOptions.numberMapper.mapper);\n        return curData.nlead + fValue + curData.nend;\n    };\n    /**\n     * Returns significant digits processed numeric string\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @returns {string}\n     */\n    NumberFormat.processSignificantDigits = function (value, min, max) {\n        var temp = value + '';\n        var tn;\n        var length = temp.length;\n        if (length < min) {\n            return value.toPrecision(min);\n        }\n        else {\n            temp = value.toPrecision(max);\n            tn = +temp;\n            return tn + '';\n        }\n    };\n    /**\n     * Returns grouped numeric string\n     * @param {string} val\n     * @param {number} level1\n     * @param {string} sep\n     * @param {string} decimalSymbol\n     * @param {number} level2\n     * @returns {string}\n     */\n    NumberFormat.groupNumbers = function (val, level1, sep, decimalSymbol, level2) {\n        var flag = !isNullOrUndefined(level2) && level2 !== 0;\n        var split = val.split(decimalSymbol);\n        var prefix = split[0];\n        var length = prefix.length;\n        var str = '';\n        while (length > level1) {\n            str = prefix.slice(length - level1, length) + (str.length ?\n                (sep + str) : '');\n            length -= level1;\n            if (flag) {\n                level1 = level2;\n                flag = false;\n            }\n        }\n        split[0] = prefix.slice(0, length) + (str.length ? sep : '') + str;\n        return split.join(decimalSymbol);\n    };\n    /**\n     * Returns fraction processed numeric string\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @returns {string}\n     */\n    NumberFormat.processFraction = function (value, min, max) {\n        var temp = (value + '').split('.')[1];\n        var length = temp ? temp.length : 0;\n        if (min && length < min) {\n            var ret = '';\n            if (length === 0) {\n                ret = value.toFixed(min);\n            }\n            else {\n                ret += value;\n                for (var j = 0; j < min - length; j++) {\n                    ret += '0';\n                }\n                return ret;\n            }\n            return value.toFixed(min);\n        }\n        else if (!isNullOrUndefined(max) && (length > max || max === 0)) {\n            return value.toFixed(max);\n        }\n        return value + '';\n    };\n    /**\n     * Returns integer processed numeric string\n     * @param {string} value\n     * @param {number} min\n     * @returns {string}\n     */\n    NumberFormat.processMinimumIntegers = function (value, min) {\n        var temp = value.split('.');\n        var lead = temp[0];\n        var len = lead.length;\n        if (len < min) {\n            for (var i = 0; i < min - len; i++) {\n                lead = '0' + lead;\n            }\n            temp[0] = lead;\n        }\n        return temp.join('.');\n    };\n    return NumberFormat;\n}());\nexport { NumberFormat };\n","import { ParserBase as parser } from './parser-base';\nimport { IntlBase as base } from './intl-base';\nimport { isUndefined, throwError, getValue } from '../util';\nvar abbreviateRegexGlobal = /\\/MMMMM|MMMM|MMM|a|LLL|EEEEE|EEEE|E|K|ccc|G+|z+/gi;\nvar standalone = 'stand-alone';\nvar weekdayKey = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\nexport var basicPatterns = ['short', 'medium', 'long', 'full'];\nvar timeSetter = {\n    m: 'getMinutes',\n    h: 'getHours',\n    H: 'getHours',\n    s: 'getSeconds',\n    d: 'getDate',\n};\nexport var datePartMatcher = {\n    'M': 'month',\n    'd': 'day',\n    'E': 'weekday',\n    'c': 'weekday',\n    'y': 'year',\n    'm': 'minute',\n    'h': 'hour',\n    'H': 'hour',\n    's': 'second',\n    'L': 'month',\n    'a': 'designator',\n    'z': 'timeZone',\n    'Z': 'timeZone',\n    'G': 'era'\n};\nvar timeSeparator = 'timeSeparator';\n/**\n * Date Format is a framework provides support for date formatting.\n * @private\n */\nvar DateFormat = /** @class */ (function () {\n    function DateFormat() {\n    }\n    /**\n     * Returns the formatter function for given skeleton.\n     * @param {string} -  Specifies the culture name to be which formatting.\n     * @param {DateFormatOptions} - Specific the format in which date  will format.\n     * @param {cldr} - Specifies the global cldr data collection.\n     * @return Function.\n     */\n    DateFormat.dateFormat = function (culture, option, cldr) {\n        var _this = this;\n        var dependable = base.getDependables(cldr, culture);\n        var formatOptions = {};\n        var resPattern = option.format || base.getResultantPattern(option.skeleton, dependable.dateObject, option.type);\n        formatOptions.dateSeperator = base.getDateSeparator(dependable.dateObject);\n        if (isUndefined(resPattern)) {\n            throwError('Format options or type given must be invalid');\n        }\n        else {\n            formatOptions.pattern = resPattern;\n            formatOptions.numMapper = parser.getNumberMapper(dependable.parserObject, parser.getNumberingSystem(cldr));\n            var patternMatch = resPattern.match(abbreviateRegexGlobal) || [];\n            for (var _i = 0, patternMatch_1 = patternMatch; _i < patternMatch_1.length; _i++) {\n                var str = patternMatch_1[_i];\n                var len = str.length;\n                var char = str[0];\n                if (char === 'K') {\n                    char = 'h';\n                }\n                /* tslint:disable no-any */\n                var charKey = datePartMatcher[char];\n                switch (char) {\n                    case 'E':\n                    case 'c':\n                        formatOptions.weekday = dependable.dateObject[base.days][standalone][base.monthIndex[len]];\n                        break;\n                    case 'M':\n                    case 'L':\n                        formatOptions.month = dependable.dateObject[base.month][standalone][base.monthIndex[len]];\n                        break;\n                    case 'a':\n                        formatOptions.designator = getValue('dayPeriods.format.wide', dependable.dateObject);\n                        break;\n                    case 'G':\n                        var eText = (len <= 3) ? 'eraAbbr' : (len === 4) ? 'eraNames' : 'eraNarrow';\n                        formatOptions.era = getValue('eras.' + eText, dependable.dateObject);\n                        break;\n                    case 'z':\n                        formatOptions.timeZone = getValue('dates.timeZoneNames', dependable.parserObject);\n                        break;\n                }\n            }\n        }\n        return function (value) {\n            if (isNaN(value.getDate())) {\n                return null;\n            }\n            return _this.intDateFormatter(value, formatOptions);\n        };\n    };\n    /**\n     * Returns formatted date string based on options passed.\n     * @param {Date} value\n     * @param {FormatOptions} options\n     */\n    DateFormat.intDateFormatter = function (value, options) {\n        var pattern = options.pattern;\n        var ret = '';\n        var matches = pattern.match(base.dateParseRegex);\n        for (var _i = 0, matches_1 = matches; _i < matches_1.length; _i++) {\n            var match = matches_1[_i];\n            var length_1 = match.length;\n            var char = match[0];\n            if (char === 'K') {\n                char = 'h';\n            }\n            var curval = void 0;\n            var isNumber = void 0;\n            var processNumber = void 0;\n            var curstr = '';\n            switch (char) {\n                case 'M':\n                case 'L':\n                    curval = value.getMonth() + 1;\n                    if (length_1 > 2) {\n                        ret += options.month[curval];\n                    }\n                    else {\n                        isNumber = true;\n                    }\n                    break;\n                case 'E':\n                case 'c':\n                    ret += options.weekday[weekdayKey[value.getDay()]];\n                    break;\n                case 'H':\n                case 'h':\n                case 'm':\n                case 's':\n                case 'd':\n                    isNumber = true;\n                    curval = value[timeSetter[char]]();\n                    if (char === 'h') {\n                        curval = curval % 12 || 12;\n                    }\n                    break;\n                case 'y':\n                    processNumber = true;\n                    curstr += value.getFullYear();\n                    if (length_1 === 2) {\n                        curstr = curstr.substr(curstr.length - 2);\n                    }\n                    break;\n                case 'a':\n                    var desig = value.getHours() < 12 ? 'am' : 'pm';\n                    ret += options.designator[desig];\n                    break;\n                case 'G':\n                    var dec = value.getFullYear() < 0 ? 0 : 1;\n                    ret += options.era[dec];\n                    break;\n                case '\\'':\n                    ret += (match === '\\'\\'') ? '\\'' : match.replace(/\\'/g, '');\n                    break;\n                case 'z':\n                    var timezone = value.getTimezoneOffset();\n                    var pattern_1 = (length_1 < 4) ? '+H;-H' : options.timeZone.hourFormat;\n                    pattern_1 = pattern_1.replace(/:/g, options.numMapper.timeSeparator);\n                    if (timezone === 0) {\n                        ret += options.timeZone.gmtZeroFormat;\n                    }\n                    else {\n                        processNumber = true;\n                        curstr = this.getTimeZoneValue(timezone, pattern_1);\n                    }\n                    curstr = options.timeZone.gmtFormat.replace(/\\{0\\}/, curstr);\n                    break;\n                case ':':\n                    ret += options.numMapper.numberSymbols[timeSeparator];\n                    /* tslint:enable no-any */\n                    break;\n                case '/':\n                    ret += options.dateSeperator;\n                    break;\n                default:\n                    ret += match;\n            }\n            if (isNumber) {\n                processNumber = true;\n                curstr = this.checkTwodigitNumber(curval, length_1);\n            }\n            if (processNumber) {\n                ret += parser.convertValueParts(curstr, base.latnParseRegex, options.numMapper.mapper);\n            }\n        }\n        return ret;\n    };\n    /**\n     * Returns two digit numbers for given value and length\n     */\n    DateFormat.checkTwodigitNumber = function (val, len) {\n        var ret = val + '';\n        if (len === 2 && ret.length !== 2) {\n            return '0' + ret;\n        }\n        return ret;\n    };\n    /**\n     * Returns the value of the Time Zone.\n     * @param {number} tVal\n     * @param {string} pattern\n     * @private\n     */\n    DateFormat.getTimeZoneValue = function (tVal, pattern) {\n        var _this = this;\n        var splt = pattern.split(';');\n        var curPattern = splt[tVal > 0 ? 1 : 0];\n        var no = Math.abs(tVal);\n        return curPattern = curPattern.replace(/HH?|mm/g, function (str) {\n            var len = str.length;\n            var ishour = str.indexOf('H') !== -1;\n            return _this.checkTwodigitNumber(Math.floor(ishour ? (no / 60) : (no % 60)), len);\n        });\n    };\n    return DateFormat;\n}());\nexport { DateFormat };\n","import { IntlBase as base } from './intl-base';\nimport { ParserBase as parser } from './parser-base';\nimport { isUndefined, throwError, getValue, isNullOrUndefined } from '../util';\nimport { datePartMatcher } from './date-formatter';\nvar number = 'numbers';\nvar defNoSystem = 'defaultNumberingSystem';\nvar noSystem = 'numberingSystem';\nvar standalone = 'stand-alone';\nvar curWeekDay = 'curWeekDay';\nvar latnRegex = /^[0-9]*$/;\nvar abbreviateRegex = /\\/MMMMM|MMMM|MMM|a|LLL|EEEEE|EEEE|E|ccc/;\nvar timeSetter = {\n    minute: 'setMinutes',\n    hour: 'setHours',\n    second: 'setSeconds',\n    day: 'setDate',\n    month: 'setMonth'\n};\nvar month = 'months';\n/* tslint:disable no-any */\n/**\n * Date Parser.\n * @private\n */\nvar DateParser = /** @class */ (function () {\n    function DateParser() {\n    }\n    /**\n     * Returns the parser function for given skeleton.\n     * @param {string} -  Specifies the culture name to be which formatting.\n     * @param {DateFormatOptions} - Specific the format in which string date  will be parsed.\n     * @param {cldr} - Specifies the global cldr data collection.\n     *  @return Function.\n     */\n    // tslint:disable-next-line:max-func-body-length\n    DateParser.dateParser = function (culture, option, cldr) {\n        var _this = this;\n        var dependable = base.getDependables(cldr, culture);\n        var numOptions = parser.getCurrentNumericOptions(dependable.parserObject, parser.getNumberingSystem(cldr));\n        var parseOptions = {};\n        var resPattern = option.format || base.getResultantPattern(option.skeleton, dependable.dateObject, option.type);\n        var regexString = '';\n        var hourOnly;\n        if (isUndefined(resPattern)) {\n            throwError('Format options or type given must be invalid');\n        }\n        else {\n            parseOptions = { pattern: resPattern, evalposition: {} };\n            var patternMatch = resPattern.match(base.dateParseRegex) || [];\n            var length_1 = patternMatch.length;\n            var gmtCorrection = 0;\n            var zCorrectTemp = 0;\n            var isgmtTraversed = false;\n            var nRegx = numOptions.numericRegex;\n            for (var i = 0; i < length_1; i++) {\n                var str = patternMatch[i];\n                var len = str.length;\n                var char = (str[0] === 'K') ? 'h' : str[0];\n                var isNumber = void 0;\n                var canUpdate = void 0;\n                var charKey = datePartMatcher[char];\n                var optional = (len === 2) ? '' : '?';\n                if (isgmtTraversed) {\n                    gmtCorrection = zCorrectTemp;\n                    isgmtTraversed = false;\n                }\n                switch (char) {\n                    case 'E':\n                    case 'c':\n                        // tslint:disable-next-line\n                        var weekObject = parser.reverseObject(dependable.dateObject[base.days][standalone][base.monthIndex[len]]);\n                        regexString += '(' + Object.keys(weekObject).join('|') + ')';\n                        break;\n                    case 'M':\n                    case 'L':\n                    case 'd':\n                    case 'm':\n                    case 's':\n                    case 'h':\n                    case 'H':\n                        canUpdate = true;\n                        if ((char === 'M' || char === 'L') && len > 2) {\n                            // tslint:disable-next-line\n                            parseOptions[charKey] = parser.reverseObject(dependable.dateObject[month][standalone][base.monthIndex[len]]);\n                            /* tslint:disable no-any */\n                            regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + ')';\n                        }\n                        else {\n                            isNumber = true;\n                            regexString += '(' + nRegx + nRegx + optional + ')';\n                        }\n                        if (char === 'h') {\n                            parseOptions.hour12 = true;\n                        }\n                        break;\n                    case 'y':\n                        canUpdate = isNumber = true;\n                        if (len === 2) {\n                            regexString += '(' + nRegx + nRegx + ')';\n                        }\n                        else {\n                            regexString += '(' + nRegx + '{' + len + ',})';\n                        }\n                        break;\n                    case 'a':\n                        canUpdate = true;\n                        parseOptions[charKey] = parser.reverseObject(getValue('dayPeriods.format.wide', dependable.dateObject));\n                        regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + ')';\n                        break;\n                    case 'G':\n                        canUpdate = true;\n                        var eText = (len <= 3) ? 'eraAbbr' : (len === 4) ? 'eraNames' : 'eraNarrow';\n                        parseOptions[charKey] = parser.reverseObject(getValue('eras.' + eText, dependable.dateObject));\n                        regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + '?)';\n                        break;\n                    case 'z':\n                        var tval = new Date().getTimezoneOffset();\n                        canUpdate = (tval !== 0);\n                        parseOptions[charKey] = getValue('dates.timeZoneNames', dependable.parserObject);\n                        var tzone = parseOptions[charKey];\n                        hourOnly = (len < 4);\n                        var hpattern = hourOnly ? '+H;-H' : tzone.hourFormat;\n                        regexString += '(' + this.parseTimeZoneRegx(hpattern, tzone, nRegx) + ')?';\n                        isgmtTraversed = true;\n                        zCorrectTemp = hourOnly ? 6 : 12;\n                        break;\n                    case '\\'':\n                        var iString = str.replace(/\\'/g, '');\n                        regexString += '(' + iString + ')?';\n                        break;\n                    default:\n                        regexString += '(.)?';\n                        break;\n                }\n                if (canUpdate) {\n                    parseOptions.evalposition[charKey] = { isNumber: isNumber, pos: i + 1 + gmtCorrection, hourOnly: hourOnly };\n                }\n                if (i === length_1 - 1 && !isNullOrUndefined(regexString)) {\n                    parseOptions.parserRegex = new RegExp('^' + regexString + '$');\n                }\n            }\n        }\n        return function (value) {\n            var parsedDateParts = _this.internalDateParse(value, parseOptions, numOptions);\n            if (isNullOrUndefined(parsedDateParts) || !Object.keys(parsedDateParts).length) {\n                return null;\n            }\n            return _this.getDateObject(parsedDateParts);\n        };\n    };\n    /**\n     * Returns date object for provided date options\n     * @param {DateParts} options\n     * @param {Date} value\n     * @returns {Date}\n     */\n    DateParser.getDateObject = function (options, value) {\n        var res = value || new Date();\n        res.setMilliseconds(0);\n        var tKeys = ['hour', 'minute', 'second', 'month', 'day'];\n        var y = options.year;\n        var desig = options.designator;\n        var tzone = options.timeZone;\n        if (!isUndefined(y)) {\n            var len = (y + '').length;\n            if (len <= 2) {\n                var century = Math.floor(res.getFullYear() / 100) * 100;\n                y += century;\n            }\n            res.setFullYear(y);\n        }\n        for (var _i = 0, tKeys_1 = tKeys; _i < tKeys_1.length; _i++) {\n            var key = tKeys_1[_i];\n            var tValue = options[key];\n            if (!isUndefined(tValue)) {\n                if (key === 'month') {\n                    tValue -= 1;\n                    if (tValue < 0 || tValue > 11) {\n                        return new Date('invalid');\n                    }\n                    var pDate = res.getDate();\n                    res.setDate(1);\n                    res[timeSetter[key]](tValue);\n                    var lDate = new Date(res.getFullYear(), tValue + 1, 0).getDate();\n                    res.setDate(pDate < lDate ? pDate : lDate);\n                }\n                else {\n                    if (key === 'day') {\n                        var lastDay = new Date(res.getFullYear(), res.getMonth() + 1, 0).getDate();\n                        if ((tValue < 1 || tValue > lastDay)) {\n                            return null;\n                        }\n                    }\n                    res[timeSetter[key]](tValue);\n                }\n            }\n        }\n        if (!isUndefined(desig)) {\n            var hour = res.getHours();\n            if (desig === 'pm') {\n                res.setHours(hour + (hour === 12 ? 0 : 12));\n            }\n            else if (hour === 12) {\n                res.setHours(0);\n            }\n        }\n        if (!isUndefined(tzone)) {\n            var tzValue = tzone - res.getTimezoneOffset();\n            if (tzValue !== 0) {\n                res.setMinutes(res.getMinutes() + tzValue);\n            }\n        }\n        return res;\n    };\n    /**\n     * Returns date parsing options for provided value along with parse and numeric options\n     * @param {string} value\n     * @param {ParseOptions} parseOptions\n     * @param {NumericOptions} num\n     * @returns {DateParts}\n     */\n    DateParser.internalDateParse = function (value, parseOptions, num) {\n        var matches = value.match(parseOptions.parserRegex);\n        var retOptions = { 'hour': 0, 'minute': 0, 'second': 0 };\n        var nRegx = num.numericRegex;\n        if (isNullOrUndefined(matches)) {\n            return null;\n        }\n        else {\n            var props = Object.keys(parseOptions.evalposition);\n            for (var _i = 0, props_1 = props; _i < props_1.length; _i++) {\n                var prop = props_1[_i];\n                var curObject = parseOptions.evalposition[prop];\n                var matchString = matches[curObject.pos];\n                if (curObject.isNumber) {\n                    retOptions[prop] = this.internalNumberParser(matchString, num);\n                }\n                else {\n                    if (prop === 'timeZone' && !isUndefined(matchString)) {\n                        var pos = curObject.pos;\n                        var val = void 0;\n                        var tmatch = matches[pos + 1];\n                        var flag = !isUndefined(tmatch);\n                        if (curObject.hourOnly) {\n                            val = this.getZoneValue(flag, tmatch, matches[pos + 4], num) * 60;\n                        }\n                        else {\n                            val = this.getZoneValue(flag, tmatch, matches[pos + 7], num) * 60;\n                            val += this.getZoneValue(flag, matches[pos + 4], matches[pos + 10], num);\n                        }\n                        if (!isNullOrUndefined(val)) {\n                            retOptions[prop] = val;\n                        }\n                    }\n                    else {\n                        retOptions[prop] = parseOptions[prop][matchString];\n                    }\n                }\n            }\n            if (parseOptions.hour12) {\n                retOptions.hour12 = true;\n            }\n        }\n        return retOptions;\n    };\n    /**\n     * Returns parsed number for provided Numeric string and Numeric Options\n     * @param {string} value\n     * @param {NumericOptions} option\n     * @returns {number}\n     */\n    DateParser.internalNumberParser = function (value, option) {\n        value = parser.convertValueParts(value, option.numberParseRegex, option.numericPair);\n        if (latnRegex.test(value)) {\n            return +value;\n        }\n        return null;\n    };\n    /**\n     * Returns parsed time zone RegExp for provided hour format and time zone\n     * @param {string} hourFormat\n     * @param {base.TimeZoneOptions} tZone\n     * @param {string} nRegex\n     * @returns {string}\n     */\n    DateParser.parseTimeZoneRegx = function (hourFormat, tZone, nRegex) {\n        var pattern = tZone.gmtFormat;\n        var ret;\n        var result;\n        var cRegex = '(' + nRegex + ')' + '(' + nRegex + ')';\n        var splitStr;\n        ret = hourFormat.replace('+', '\\\\+');\n        if (hourFormat.indexOf('HH') !== -1) {\n            ret = ret.replace(/HH|mm/g, '(' + cRegex + ')');\n        }\n        else {\n            ret = ret.replace(/H|m/g, '(' + cRegex + '?)');\n        }\n        splitStr = (ret.split(';').map(function (str) {\n            return pattern.replace('{0}', str);\n        }));\n        ret = splitStr.join('|') + '|' + tZone.gmtZeroFormat;\n        return ret;\n    };\n    /**\n     * Returns zone based value.\n     * @param {boolean} flag\n     * @param {string} val1\n     * @param {string} val2\n     * @param {NumericOptions} num\n     * @returns {number}\n     */\n    DateParser.getZoneValue = function (flag, val1, val2, num) {\n        var value = this.internalNumberParser(flag ? val1 : val2, num);\n        if (flag) {\n            return -value;\n        }\n        return value;\n    };\n    return DateParser;\n}());\nexport { DateParser };\n","import { extend, isNullOrUndefined } from '../util';\nimport { ParserBase as parser } from './parser-base';\nimport { IntlBase as base } from './intl-base';\nvar formatRegex = /(^[ncpa]{1})([0-1]?[0-9]|20)?$/i;\nvar parseRegex = /^([^0-9]*)(([0-9,]*[0-9]+)(\\.[0-9]+)?)([Ee][+-]?[0-9]+)?([^0-9]*)$/;\nvar groupRegex = /,/g;\nvar latnDecimalRegex = /^[0-9]*(\\.[0-9]+)?$/;\nvar keys = ['minusSign', 'infinity'];\n/**\n * Module for Number Parser.\n * @private\n */\nvar NumberParser = /** @class */ (function () {\n    function NumberParser() {\n    }\n    /**\n     * Returns the parser function for given skeleton.\n     * @param {string} -  Specifies the culture name to be which formatting.\n     * @param {NumberFormatOptions} - Specific the format in which number  will parsed.\n     * @param {cldr} - Specifies the global cldr data collection.\n     * @return Function.\n     */\n    NumberParser.numberParser = function (culture, option, cldr) {\n        var _this = this;\n        var dependable = base.getDependables(cldr, culture, true);\n        var parseOptions = { custom: true };\n        var numOptions;\n        if ((base.formatRegex.test(option.format)) || !(option.format)) {\n            extend(parseOptions, base.getProperNumericSkeleton(option.format || 'N'));\n            parseOptions.custom = false;\n        }\n        else {\n            extend(parseOptions, base.customFormat(option.format, null, null));\n        }\n        numOptions = parser.getCurrentNumericOptions(dependable.parserObject, parser.getNumberingSystem(cldr), true);\n        parseOptions.symbolRegex = parser.getSymbolRegex(Object.keys(numOptions.symbolMatch));\n        // tslint:disable-next-line:no-any\n        parseOptions.infinity = numOptions.symbolNumberSystem[keys[1]];\n        var symbolpattern = base.getSymbolPattern(parseOptions.type, numOptions.numberSystem, dependable.numericObject, parseOptions.isAccount);\n        if (symbolpattern) {\n            symbolpattern = symbolpattern.replace(/\\u00A4/g, base.defaultCurrency);\n            var split = symbolpattern.split(';');\n            parseOptions.nData = base.getFormatData(split[1] || '-' + split[0], true, '');\n            parseOptions.pData = base.getFormatData(split[0], true, '');\n        }\n        return function (value) {\n            return _this.getParsedNumber(value, parseOptions, numOptions);\n        };\n    };\n    /**\n     * Returns parsed number for the provided formatting options\n     * @param {string} value\n     * @param {NumericParts} options\n     * @param {NumericOptions} numOptions\n     * @returns {number}\n     */\n    NumberParser.getParsedNumber = function (value, options, numOptions) {\n        var isNegative;\n        var isPercent;\n        var tempValue;\n        var lead;\n        var end;\n        var ret;\n        if (value.indexOf(options.infinity) !== -1) {\n            return Infinity;\n        }\n        else {\n            value = parser.convertValueParts(value, options.symbolRegex, numOptions.symbolMatch);\n            value = parser.convertValueParts(value, numOptions.numberParseRegex, numOptions.numericPair);\n            if (value.indexOf('.') === 0) {\n                value = '0' + value;\n            }\n            var matches = value.match(parseRegex);\n            if (isNullOrUndefined(matches)) {\n                return NaN;\n            }\n            lead = matches[1];\n            tempValue = matches[2];\n            var exponent = matches[5];\n            end = matches[6];\n            isNegative = options.custom ? ((lead === options.nData.nlead) && (end === options.nData.nend)) :\n                ((lead.indexOf(options.nData.nlead) !== -1) && (end.indexOf(options.nData.nend) !== -1));\n            isPercent = isNegative ?\n                options.nData.isPercent :\n                options.pData.isPercent;\n            tempValue = tempValue.replace(groupRegex, '');\n            if (exponent) {\n                tempValue += exponent;\n            }\n            ret = +tempValue;\n            if (options.type === 'percent' || isPercent) {\n                ret = ret / 100;\n            }\n            if (options.custom || options.fractionDigits) {\n                ret = parseFloat(ret.toFixed(options.custom ?\n                    (isNegative ? options.nData.maximumFractionDigits : options.pData.maximumFractionDigits) : options.fractionDigits));\n            }\n            if (isNegative) {\n                ret *= -1;\n            }\n            return ret;\n        }\n    };\n    return NumberParser;\n}());\nexport { NumberParser };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { isUndefined, getValue, isNullOrUndefined, setValue, getUniqueID } from './util';\nimport { ModuleLoader } from './module-loader';\nimport { Base } from './base';\nimport { Observer } from './observer';\nimport { ChildProperty } from './child-property';\nimport { Property, NotifyPropertyChanges } from './notify-property-change';\nimport { onIntlChange, rightToLeft, defaultCulture } from './internationalization';\n/**\n * Base class for all Essential JavaScript components\n */\nvar Component = /** @class */ (function (_super) {\n    __extends(Component, _super);\n    /**\n     * Initialize the constructor for component base\n     */\n    function Component(options, selector) {\n        var _this = _super.call(this, options, selector) || this;\n        _this.needsID = false;\n        if (isNullOrUndefined(_this.enableRtl)) {\n            _this.setProperties({ 'enableRtl': rightToLeft }, true);\n        }\n        if (isNullOrUndefined(_this.locale)) {\n            _this.setProperties({ 'locale': defaultCulture }, true);\n        }\n        _this.moduleLoader = new ModuleLoader(_this);\n        _this.localObserver = new Observer(_this);\n        // tslint:disable-next-line:no-function-constructor-with-string-args\n        _this.detectFunction = new Function('args', 'var prop = Object.keys(args); if(prop.length){this[prop[0]] = args[prop[0]];}');\n        onIntlChange.on('notifyExternalChange', _this.detectFunction, _this);\n        if (!isUndefined(selector)) {\n            _this.appendTo();\n        }\n        return _this;\n    }\n    Component.prototype.requiredModules = function () {\n        return [];\n    };\n    ;\n    /**\n     * Destroys the sub modules while destroying the widget\n     */\n    Component.prototype.destroy = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.localObserver.destroy();\n        if (this.refreshing) {\n            return;\n        }\n        this.trigger('destroyed', { cancel: false });\n        _super.prototype.destroy.call(this);\n        this.moduleLoader.clean();\n        onIntlChange.off('notifyExternalChange', this.detectFunction);\n        if (this.enablePersistence) {\n            this.setPersistData();\n        }\n    };\n    /**\n     * Applies all the pending property changes and render the component again.\n     */\n    Component.prototype.refresh = function () {\n        this.refreshing = true;\n        this.moduleLoader.clean();\n        this.destroy();\n        this.clearChanges();\n        this.localObserver = new Observer(this);\n        this.preRender();\n        this.injectModules();\n        this.render();\n        this.refreshing = false;\n    };\n    /**\n     * Appends the component within the given HTML element\n     * @param {string | HTMLElement} selector - Target element where component needs to be appended.\n     */\n    Component.prototype.appendTo = function (selector) {\n        if (!isNullOrUndefined(selector) && typeof (selector) === 'string') {\n            this.element = document.querySelector(selector);\n        }\n        else if (!isNullOrUndefined(selector)) {\n            this.element = selector;\n        }\n        if (!isNullOrUndefined(this.element)) {\n            this.isProtectedOnChange = false;\n            if (this.enablePersistence) {\n                this.mergePersistData();\n                window.addEventListener('unload', this.setPersistData.bind(this));\n            }\n            if (this.needsID && !this.element.id) {\n                this.element.id = getUniqueID(this.getModuleName());\n            }\n            var inst = getValue('ej2_instances', this.element);\n            if (!inst || inst.indexOf(this) === -1) {\n                _super.prototype.addInstance.call(this);\n            }\n            this.preRender();\n            this.injectModules();\n            this.render();\n            this.trigger('created');\n        }\n    };\n    /**\n     * When invoked, applies the pending property changes immediately to the component.\n     */\n    Component.prototype.dataBind = function () {\n        this.injectModules();\n        _super.prototype.dataBind.call(this);\n    };\n    ;\n    /**\n     * Attach one or more  event handler to the current component context.\n     * It is used for internal handling event internally within the component only.\n     * @param {BoundOptions[]| string} event - It is  optional type either to  Set the collection of event list or the eventName.\n     * @param {Function} handler - optional parameter Specifies the handler to run when the event occurs\n     * @param {Object} context - optional parameter Specifies the context to be bind in the handler.\n     * @return {void}\n     * @private\n     */\n    Component.prototype.on = function (event, handler, context) {\n        if (typeof event === 'string') {\n            this.localObserver.on(event, handler, context);\n        }\n        else {\n            for (var _i = 0, event_1 = event; _i < event_1.length; _i++) {\n                var arg = event_1[_i];\n                this.localObserver.on(arg.event, arg.handler, arg.context);\n            }\n        }\n    };\n    /**\n     * To remove one or more event handler that has been attached with the on() method.\n     * @param {BoundOptions[]| string} event - It is  optional type either to  Set the collection of event list or the eventName.\n     * @param {Function} handler - optional parameter Specifies the function to run when the event occurs\n     * @return {void}\n     * @private\n     */\n    Component.prototype.off = function (event, handler) {\n        if (typeof event === 'string') {\n            this.localObserver.off(event, handler);\n        }\n        else {\n            for (var _i = 0, event_2 = event; _i < event_2.length; _i++) {\n                var arg = event_2[_i];\n                this.localObserver.off(arg.event, arg.handler);\n            }\n        }\n    };\n    /**\n     * To notify the handlers in the specified event.\n     * @param {string} property - Specifies the event to be notify.\n     * @param {Object} argument - Additional parameters to pass while calling the handler.\n     * @return {void}\n     * @private\n     */\n    Component.prototype.notify = function (property, argument) {\n        if (this.isDestroyed !== true) {\n            this.localObserver.notify(property, argument);\n        }\n    };\n    /**\n     * Get injected modules\n     * @private\n     */\n    Component.prototype.getInjectedModules = function () {\n        return this.injectedModules;\n    };\n    ;\n    /**\n     * Dynamically injects the required modules to the component.\n     */\n    Component.Inject = function () {\n        var moduleList = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            moduleList[_i] = arguments[_i];\n        }\n        if (!this.prototype.injectedModules) {\n            this.prototype.injectedModules = [];\n        }\n        for (var i = 0; i < moduleList.length; i++) {\n            if (this.prototype.injectedModules.indexOf(moduleList[i]) === -1) {\n                this.prototype.injectedModules.push(moduleList[i]);\n            }\n        }\n    };\n    Component.prototype.injectModules = function () {\n        if (this.injectedModules && this.injectedModules.length) {\n            this.moduleLoader.inject(this.requiredModules(), this.injectedModules);\n        }\n    };\n    Component.prototype.mergePersistData = function () {\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === ''))) {\n            this.setProperties(JSON.parse(data), true);\n        }\n    };\n    Component.prototype.setPersistData = function () {\n        window.localStorage.setItem(this.getModuleName() + this.element.id, this.getPersistData());\n    };\n    Component.prototype.clearTemplate = function (templateName) {\n        //No Code\n    };\n    Component.prototype.addOnPersist = function (options) {\n        var _this = this;\n        var persistObj = {};\n        for (var _i = 0, options_1 = options; _i < options_1.length; _i++) {\n            var key = options_1[_i];\n            var objValue = void 0;\n            objValue = getValue(key, this);\n            if (!isUndefined(objValue)) {\n                setValue(key, this.getActualProperties(objValue), persistObj);\n            }\n        }\n        return JSON.stringify(persistObj, function (key, value) {\n            return _this.getActualProperties(value);\n        });\n    };\n    Component.prototype.getActualProperties = function (obj) {\n        if (obj instanceof ChildProperty) {\n            return getValue('properties', obj);\n        }\n        else {\n            return obj;\n        }\n    };\n    Component.prototype.ignoreOnPersist = function (options) {\n        return JSON.stringify(this.iterateJsonProperties(this.properties, options));\n    };\n    Component.prototype.iterateJsonProperties = function (obj, ignoreList) {\n        var newObj = {};\n        var _loop_1 = function (key) {\n            if (ignoreList.indexOf(key) === -1) {\n                // tslint:disable-next-line:no-any\n                var value = obj[key];\n                if (typeof value === 'object' && !(value instanceof Array)) {\n                    var newList = ignoreList.filter(function (str) {\n                        return new RegExp(key + '.').test(str);\n                    }).map(function (str) {\n                        return str.replace(key + '.', '');\n                    });\n                    newObj[key] = this_1.iterateJsonProperties(this_1.getActualProperties(value), newList);\n                }\n                else {\n                    newObj[key] = value;\n                }\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var key = _a[_i];\n            _loop_1(key);\n        }\n        return newObj;\n    };\n    __decorate([\n        Property(false)\n    ], Component.prototype, \"enablePersistence\", void 0);\n    __decorate([\n        Property()\n    ], Component.prototype, \"enableRtl\", void 0);\n    __decorate([\n        Property()\n    ], Component.prototype, \"locale\", void 0);\n    Component = __decorate([\n        NotifyPropertyChanges\n    ], Component);\n    return Component;\n}(Base));\nexport { Component };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Base } from './base';\nimport { Browser } from './browser';\nimport { isVisible } from './dom';\nimport { Property, Complex, NotifyPropertyChanges, Event } from './notify-property-change';\nimport { EventHandler } from './event-handler';\nimport { ChildProperty } from './child-property';\nimport { select, closest, setStyleAttribute, addClass, createElement } from './dom';\nimport { extend, isUndefined, isNullOrUndefined, compareElementParent } from './util';\nvar defaultPosition = { left: 0, top: 0, bottom: 0, right: 0 };\nvar positionProp = ['offsetLeft', 'offsetTop'];\nvar axisMapper = ['x', 'y'];\nvar axisValueMapper = ['left', 'top'];\n/**\n * Specifies the position coordinates\n */\nvar Position = /** @class */ (function (_super) {\n    __extends(Position, _super);\n    function Position() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Position.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Position.prototype, \"top\", void 0);\n    return Position;\n}(ChildProperty));\nexport { Position };\n/**\n * Draggable Module provides support to enable draggable functionality in Dom Elements.\n * ```html\n * <div id='drag'>Draggable</div>\n * <script>\n * var ele = document.getElementById('drag');\n * var drag:Draggable = new Draggable(ele,{\n *     clone:false,\n *     drag: function(e) {\n *      //drag handler code.\n *      },\n *     handle:'.class'\n * });\n * </script>\n * ```\n */\nvar Draggable = /** @class */ (function (_super) {\n    __extends(Draggable, _super);\n    function Draggable(element, options) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dragLimit = Draggable_1.getDefaultPosition();\n        _this.borderWidth = Draggable_1.getDefaultPosition();\n        _this.padding = Draggable_1.getDefaultPosition();\n        _this.diffX = 0;\n        _this.diffY = 0;\n        _this.droppables = {};\n        _this.bind();\n        return _this;\n    }\n    Draggable_1 = Draggable;\n    Draggable.prototype.bind = function () {\n        this.toggleEvents();\n        if (Browser.isIE) {\n            addClass([this.element], 'e-block-touch');\n        }\n        this.droppables[this.scope] = {};\n    };\n    Draggable.getDefaultPosition = function () {\n        return extend({}, defaultPosition);\n    };\n    Draggable.prototype.toggleEvents = function (isUnWire) {\n        var ele;\n        if (!isUndefined(this.handle)) {\n            ele = select(this.handle, this.element);\n        }\n        if (isUnWire) {\n            EventHandler.remove(ele || this.element, Browser.touchStartEvent, this.initialize);\n        }\n        else {\n            EventHandler.add(ele || this.element, Browser.touchStartEvent, this.initialize, this);\n        }\n    };\n    Draggable.prototype.initialize = function (evt) {\n        this.target = evt.currentTarget;\n        if (this.preventDefault && !isUndefined(evt.changedTouches)) {\n            evt.preventDefault();\n        }\n        if (this.abort) {\n            if (!isNullOrUndefined(closest(evt.target, this.abort))) {\n                return;\n            }\n        }\n        this.element.setAttribute('aria-grabbed', 'true');\n        var intCoord = this.getCoordinates(evt);\n        this.initialPosition = { x: intCoord.pageX, y: intCoord.pageY };\n        if (!this.clone) {\n            var pos = this.element.getBoundingClientRect();\n            this.relativeXPosition = intCoord.pageX - pos.left;\n            this.relativeYPosition = intCoord.pageY - pos.top;\n        }\n        EventHandler.add(document, Browser.touchMoveEvent, this.intDragStart, this);\n        EventHandler.add(document, Browser.touchEndEvent, this.intDestroy, this);\n        this.toggleEvents(true);\n        document.body.classList.add('e-prevent-select');\n        EventHandler.trigger(document.documentElement, Browser.touchStartEvent, evt);\n    };\n    Draggable.prototype.intDragStart = function (evt) {\n        var isChangeTouch = !isUndefined(evt.changedTouches);\n        if (isChangeTouch && (evt.changedTouches.length !== 1)) {\n            return;\n        }\n        var intCordinate = this.getCoordinates(evt);\n        var pos;\n        var styleProp = getComputedStyle(this.element);\n        this.margin = {\n            left: parseInt(styleProp.marginLeft, 10),\n            top: parseInt(styleProp.marginTop, 10),\n            right: parseInt(styleProp.marginRight, 10),\n            bottom: parseInt(styleProp.marginBottom, 10),\n        };\n        var element = this.element;\n        if (this.clone && this.dragTarget) {\n            var intClosest = closest(evt.target, this.dragTarget);\n            if (!isNullOrUndefined(intClosest)) {\n                element = intClosest;\n            }\n        }\n        this.offset = this.calculateParentPosition(element);\n        this.position = this.getMousePosition(evt);\n        var x = this.initialPosition.x - intCordinate.pageX;\n        var y = this.initialPosition.y - intCordinate.pageY;\n        var distance = Math.sqrt((x * x) + (y * y));\n        if (distance >= this.distance) {\n            var ele = this.getHelperElement(evt);\n            if (!ele || isNullOrUndefined(ele)) {\n                return;\n            }\n            var dragTargetElement = this.helperElement = ele;\n            this.parentClientRect = this.calculateParentPosition(dragTargetElement.offsetParent);\n            if (this.dragStart) {\n                var curTarget = this.getProperTargetElement(evt);\n                this.trigger('dragStart', { event: evt, element: element, target: curTarget });\n            }\n            if (this.dragArea) {\n                this.setDragArea();\n            }\n            else {\n                this.dragLimit = { left: 0, right: 0, bottom: 0, top: 0 };\n                this.borderWidth = { top: 0, left: 0 };\n            }\n            pos = { left: this.position.left - this.parentClientRect.left, top: this.position.top - this.parentClientRect.top };\n            if (this.clone && !this.enableTailMode) {\n                this.diffX = this.position.left - this.offset.left;\n                this.diffY = this.position.top - this.offset.top;\n            }\n            var posValue = this.getProcessedPositionValue({ top: (pos.top - this.diffY) + 'px',\n                left: (pos.left - this.diffX) + 'px' });\n            setStyleAttribute(dragTargetElement, {\n                position: 'absolute', top: posValue.top, left: posValue.left\n            });\n            EventHandler.remove(document, Browser.touchMoveEvent, this.intDragStart);\n            EventHandler.remove(document, Browser.touchEndEvent, this.intDestroy);\n            if (isVisible(dragTargetElement)) {\n                EventHandler.add(document, Browser.touchMoveEvent, this.intDrag, this);\n                EventHandler.add(document, Browser.touchEndEvent, this.intDragStop, this);\n                this.setGlobalDroppables(false, this.element, dragTargetElement);\n            }\n            else {\n                document.body.classList.remove('e-prevent-select');\n            }\n        }\n    };\n    Draggable.prototype.getProcessedPositionValue = function (value) {\n        if (this.axis) {\n            if (this.axis === 'x') {\n                value.top = '0px';\n            }\n            else if (this.axis === 'y') {\n                value.left = '0px';\n            }\n        }\n        if (this.queryPositionInfo) {\n            return this.queryPositionInfo(value);\n        }\n        return value;\n    };\n    Draggable.prototype.calculateParentPosition = function (ele) {\n        if (isNullOrUndefined(ele)) {\n            return { left: 0, top: 0 };\n        }\n        var rect = ele.getBoundingClientRect();\n        var style = getComputedStyle(ele);\n        return {\n            left: (rect.left + window.pageXOffset) - parseInt(style.marginLeft, 10),\n            top: (rect.top + window.pageYOffset) - parseInt(style.marginTop, 10)\n        };\n    };\n    Draggable.prototype.intDrag = function (evt) {\n        if (!isUndefined(evt.changedTouches) && (evt.changedTouches.length !== 1)) {\n            return;\n        }\n        var left;\n        var top;\n        this.position = this.getMousePosition(evt);\n        var docHeight = this.getDocumentWidthHeight('Height');\n        if (docHeight < this.position.top) {\n            this.position.top = docHeight;\n        }\n        var docWidth = this.getDocumentWidthHeight('Width');\n        if (docWidth < this.position.left) {\n            this.position.left = docWidth;\n        }\n        if (this.drag) {\n            var curTarget = this.getProperTargetElement(evt);\n            this.trigger('drag', { event: evt, element: this.element, target: curTarget });\n        }\n        var eleObj = this.checkTargetElement(evt);\n        if (eleObj.target && eleObj.instance) {\n            eleObj.instance.intOver(evt, eleObj.target);\n            /* tslint:disable no-any */\n            eleObj.instance.dragData[this.scope] = this.droppables[this.scope];\n            this.hoverObject = eleObj;\n        }\n        else if (this.hoverObject) {\n            this.hoverObject.instance.intOut(evt, eleObj.target);\n            this.hoverObject.instance.dragData[this.scope] = null;\n            this.hoverObject = null;\n        }\n        var helperElement = this.droppables[this.scope].helper;\n        this.parentClientRect = this.calculateParentPosition(this.helperElement.offsetParent);\n        var tLeft = this.parentClientRect.left;\n        var tTop = this.parentClientRect.top;\n        var intCoord = this.getCoordinates(evt);\n        var pagex = intCoord.pageX;\n        var pagey = intCoord.pageY;\n        var dLeft = this.position.left - this.diffX;\n        var dTop = this.position.top - this.diffY;\n        if (this.dragArea) {\n            var styles = getComputedStyle(helperElement);\n            if (this.pageX !== pagex || this.skipDistanceCheck) {\n                var helperWidth = helperElement.offsetWidth + (parseFloat(styles.marginLeft)\n                    + parseFloat(styles.marginRight));\n                if (this.dragLimit.left > dLeft) {\n                    left = this.dragLimit.left;\n                }\n                else if (this.dragLimit.right < dLeft + helperWidth) {\n                    left = this.dragLimit.right - helperWidth;\n                }\n                else {\n                    left = dLeft;\n                }\n            }\n            if (this.pageY !== pagey || this.skipDistanceCheck) {\n                var helperHeight = helperElement.offsetHeight + (parseFloat(styles.marginTop)\n                    + parseFloat(styles.marginBottom));\n                if (this.dragLimit.top > dTop) {\n                    top = this.dragLimit.top;\n                }\n                else if (this.dragLimit.bottom < dTop + helperHeight) {\n                    top = this.dragLimit.bottom - helperHeight;\n                }\n                else {\n                    top = dTop;\n                }\n            }\n        }\n        else {\n            left = dLeft;\n            top = dTop;\n        }\n        var iTop = tTop + this.borderWidth.top;\n        var iLeft = tLeft + this.borderWidth.left;\n        var dragValue = this.getProcessedPositionValue({ top: (top - iTop) + 'px', left: (left - iLeft) + 'px' });\n        setStyleAttribute(helperElement, { left: dragValue.left, top: dragValue.top });\n        this.position.left = left;\n        this.position.top = top;\n        this.pageX = pagex;\n        this.pageY = pagey;\n    };\n    Draggable.prototype.getDocumentWidthHeight = function (str) {\n        var docBody = document.body;\n        var docEle = document.documentElement;\n        var returnValue = Math.max(docBody['scroll' + str], docEle['scroll' + str], docBody['offset' + str], docEle['offset' + str], docEle['client' + str]);\n        return returnValue;\n    };\n    Draggable.prototype.intDragStop = function (evt) {\n        if (!isUndefined(evt.changedTouches) && (evt.changedTouches.length !== 1)) {\n            return;\n        }\n        var type = ['touchend', 'pointerup', 'mouseup'];\n        if (type.indexOf(evt.type) !== -1) {\n            if (this.dragStop) {\n                var curTarget = this.getProperTargetElement(evt);\n                this.trigger('dragStop', { event: evt, element: this.element, target: curTarget, helper: this.helperElement });\n            }\n            this.intDestroy(evt);\n        }\n        else {\n            this.element.setAttribute('aria-grabbed', 'false');\n        }\n        var eleObj = this.checkTargetElement(evt);\n        if (eleObj.target && eleObj.instance) {\n            eleObj.instance.dragStopCalled = true;\n            eleObj.instance.dragData[this.scope] = this.droppables[this.scope];\n            eleObj.instance.intDrop(evt, eleObj.target);\n        }\n        this.setGlobalDroppables(true);\n        document.body.classList.remove('e-prevent-select');\n    };\n    Draggable.prototype.intDestroy = function (evt) {\n        this.toggleEvents();\n        document.body.classList.remove('e-prevent-select');\n        this.element.setAttribute('aria-grabbed', 'false');\n        EventHandler.remove(document, Browser.touchMoveEvent, this.intDragStart);\n        EventHandler.remove(document, Browser.touchEndEvent, this.intDragStop);\n        EventHandler.remove(document, Browser.touchEndEvent, this.intDestroy);\n        EventHandler.remove(document, Browser.touchMoveEvent, this.intDrag);\n    };\n    // triggers when property changed\n    Draggable.prototype.onPropertyChanged = function (newProp, oldProp) {\n        //No Code to handle\n    };\n    Draggable.prototype.getModuleName = function () {\n        return 'draggable';\n    };\n    Draggable.prototype.setDragArea = function () {\n        var eleWidthBound;\n        var eleHeightBound;\n        var top = 0;\n        var left = 0;\n        var ele;\n        var type = typeof this.dragArea;\n        if (type === 'string') {\n            ele = select(this.dragArea);\n        }\n        else {\n            ele = this.dragArea;\n        }\n        if (ele) {\n            var elementArea = ele.getBoundingClientRect();\n            eleWidthBound = elementArea.width ? elementArea.width : elementArea.right - elementArea.left;\n            eleHeightBound = elementArea.height ? elementArea.height : elementArea.bottom - elementArea.top;\n            var keys = ['Top', 'Left', 'Bottom', 'Right'];\n            var styles = getComputedStyle(ele);\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                var tborder = styles['border' + key + 'Width'];\n                var tpadding = styles['padding' + key];\n                var lowerKey = key.toLowerCase();\n                this.borderWidth[lowerKey] = isNaN(parseFloat(tborder)) ? 0 : parseFloat(tborder);\n                this.padding[lowerKey] = isNaN(parseFloat(tpadding)) ? 0 : parseFloat(tpadding);\n            }\n            top = elementArea.top;\n            left = elementArea.left;\n            this.dragLimit.left = left + this.borderWidth.left + this.padding.left;\n            this.dragLimit.top = top + this.borderWidth.top + this.padding.top;\n            this.dragLimit.right = left + eleWidthBound - (this.borderWidth.right + this.padding.right);\n            this.dragLimit.bottom = top + eleHeightBound - (this.borderWidth.bottom + this.padding.bottom);\n        }\n    };\n    Draggable.prototype.getProperTargetElement = function (evt) {\n        var intCoord = this.getCoordinates(evt);\n        var ele;\n        var prevStyle = this.helperElement.style.display || '';\n        if (compareElementParent(evt.target, this.helperElement) || evt.type.indexOf('touch') !== -1) {\n            this.helperElement.style.display = 'none';\n            ele = document.elementFromPoint(intCoord.clientX, intCoord.clientY);\n            this.helperElement.style.display = prevStyle;\n        }\n        else {\n            ele = evt.target;\n        }\n        return ele;\n    };\n    Draggable.prototype.getMousePosition = function (evt) {\n        var intCoord = this.getCoordinates(evt);\n        var pageX = this.clone ? intCoord.pageX : intCoord.pageX - this.relativeXPosition;\n        var pageY = this.clone ? intCoord.pageY : intCoord.pageY - this.relativeYPosition;\n        return {\n            left: pageX - (this.margin.left + this.cursorAt.left),\n            top: pageY - (this.margin.top + this.cursorAt.top)\n        };\n    };\n    Draggable.prototype.getCoordinates = function (evt) {\n        if (evt.type.indexOf('touch') > -1) {\n            return evt.changedTouches[0];\n        }\n        return evt;\n    };\n    Draggable.prototype.getHelperElement = function (evt) {\n        var element;\n        if (this.clone) {\n            if (this.helper) {\n                element = this.helper({ sender: evt, element: this.target });\n            }\n            else {\n                element = createElement('div', { className: 'e-drag-helper e-block-touch', innerHTML: 'Draggable' });\n                document.body.appendChild(element);\n            }\n        }\n        else {\n            element = this.element;\n        }\n        return element;\n    };\n    Draggable.prototype.setGlobalDroppables = function (reset, drag, helper) {\n        this.droppables[this.scope] = reset ? null : {\n            draggable: drag,\n            helper: helper,\n            draggedElement: this.element\n        };\n    };\n    Draggable.prototype.checkTargetElement = function (evt) {\n        var target = this.getProperTargetElement(evt);\n        var dropIns = this.getDropInstance(target);\n        if (!dropIns && target && !isNullOrUndefined(target.parentNode)) {\n            var parent_1 = closest(target.parentNode, '.e-droppable') || target.parentElement;\n            if (parent_1) {\n                dropIns = this.getDropInstance(parent_1);\n            }\n        }\n        return { target: target, instance: dropIns };\n    };\n    Draggable.prototype.getDropInstance = function (ele) {\n        var name = 'getModuleName';\n        var drop;\n        var eleInst = ele && ele.ej2_instances;\n        if (eleInst) {\n            for (var _i = 0, eleInst_1 = eleInst; _i < eleInst_1.length; _i++) {\n                var inst = eleInst_1[_i];\n                if (inst[name]() === 'droppable') {\n                    drop = inst;\n                    break;\n                }\n            }\n        }\n        return drop;\n    };\n    Draggable.prototype.destroy = function () {\n        this.toggleEvents(true);\n        _super.prototype.destroy.call(this);\n    };\n    __decorate([\n        Complex({}, Position)\n    ], Draggable.prototype, \"cursorAt\", void 0);\n    __decorate([\n        Property(true)\n    ], Draggable.prototype, \"clone\", void 0);\n    __decorate([\n        Property()\n    ], Draggable.prototype, \"dragArea\", void 0);\n    __decorate([\n        Event()\n    ], Draggable.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], Draggable.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], Draggable.prototype, \"dragStop\", void 0);\n    __decorate([\n        Property(1)\n    ], Draggable.prototype, \"distance\", void 0);\n    __decorate([\n        Property()\n    ], Draggable.prototype, \"handle\", void 0);\n    __decorate([\n        Property()\n    ], Draggable.prototype, \"abort\", void 0);\n    __decorate([\n        Property()\n    ], Draggable.prototype, \"helper\", void 0);\n    __decorate([\n        Property('default')\n    ], Draggable.prototype, \"scope\", void 0);\n    __decorate([\n        Property('')\n    ], Draggable.prototype, \"dragTarget\", void 0);\n    __decorate([\n        Property()\n    ], Draggable.prototype, \"axis\", void 0);\n    __decorate([\n        Property()\n    ], Draggable.prototype, \"queryPositionInfo\", void 0);\n    __decorate([\n        Property(false)\n    ], Draggable.prototype, \"enableTailMode\", void 0);\n    __decorate([\n        Property(false)\n    ], Draggable.prototype, \"skipDistanceCheck\", void 0);\n    __decorate([\n        Property(true)\n    ], Draggable.prototype, \"preventDefault\", void 0);\n    Draggable = Draggable_1 = __decorate([\n        NotifyPropertyChanges\n    ], Draggable);\n    return Draggable;\n    var Draggable_1;\n}(Base));\nexport { Draggable };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Base } from './base';\nimport { Browser } from './browser';\nimport { isVisible, matches } from './dom';\nimport { Property, NotifyPropertyChanges, Event } from './notify-property-change';\nimport { EventHandler } from './event-handler';\nimport { compareElementParent } from './util';\n/**\n * Droppable Module provides support to enable droppable functionality in Dom Elements.\n * ```html\n * <div id='drop'>Droppable</div>\n * <script>\n * let ele:HTMLElement = document.getElementById('drop');\n * var drag:Droppable = new Droppable(ele,{\n *     accept:'.drop',\n *     drop: function(e) {\n *      //drop handler code.\n *     }\n * });\n * </script>\n * ```\n */\nvar Droppable = /** @class */ (function (_super) {\n    __extends(Droppable, _super);\n    function Droppable(element, options) {\n        var _this = _super.call(this, options, element) || this;\n        _this.mouseOver = false;\n        _this.dragData = {};\n        _this.dragStopCalled = false;\n        _this.bind();\n        return _this;\n    }\n    Droppable.prototype.bind = function () {\n        this.wireEvents();\n    };\n    Droppable.prototype.wireEvents = function () {\n        EventHandler.add(this.element, Browser.touchEndEvent, this.intDrop, this);\n    };\n    // triggers when property changed\n    Droppable.prototype.onPropertyChanged = function (newProp, oldProp) {\n        //No Code to handle\n    };\n    Droppable.prototype.getModuleName = function () {\n        return 'droppable';\n    };\n    Droppable.prototype.intOver = function (event, element) {\n        if (!this.mouseOver) {\n            this.trigger('over', { event: event, target: element });\n            this.mouseOver = true;\n        }\n    };\n    Droppable.prototype.intOut = function (event, element) {\n        if (this.mouseOver) {\n            this.trigger('out', { evt: event, target: element });\n            this.mouseOver = false;\n        }\n    };\n    Droppable.prototype.intDrop = function (evt, element) {\n        if (!this.dragStopCalled) {\n            return;\n        }\n        else {\n            this.dragStopCalled = false;\n        }\n        var accept = true;\n        var drag = this.dragData[this.scope];\n        var isDrag = drag ? (drag.helper && isVisible(drag.helper)) : false;\n        var area;\n        if (isDrag) {\n            area = this.isDropArea(evt, drag.helper, element);\n            if (this.accept) {\n                accept = matches(drag.helper, this.accept);\n            }\n        }\n        if (isDrag && this.drop && area.canDrop && accept) {\n            this.trigger('drop', { event: evt, target: area.target, droppedElement: drag.helper, dragData: drag });\n        }\n    };\n    Droppable.prototype.isDropArea = function (evt, helper, element) {\n        var area = { canDrop: true, target: element || evt.target };\n        var isTouch = evt.type === 'touchend';\n        if (isTouch || area.target === helper) {\n            helper.style.display = 'none';\n            var coord = isTouch ? (evt.changedTouches[0]) : evt;\n            var ele = document.elementFromPoint(coord.clientX, coord.clientY);\n            area.canDrop = false;\n            area.canDrop = compareElementParent(ele, this.element);\n            if (area.canDrop) {\n                area.target = ele;\n            }\n            helper.style.display = '';\n        }\n        return area;\n    };\n    Droppable.prototype.destroy = function () {\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.intDrop);\n        _super.prototype.destroy.call(this);\n    };\n    __decorate([\n        Property()\n    ], Droppable.prototype, \"accept\", void 0);\n    __decorate([\n        Property('default')\n    ], Droppable.prototype, \"scope\", void 0);\n    __decorate([\n        Event()\n    ], Droppable.prototype, \"drop\", void 0);\n    __decorate([\n        Event()\n    ], Droppable.prototype, \"over\", void 0);\n    __decorate([\n        Event()\n    ], Droppable.prototype, \"out\", void 0);\n    Droppable = __decorate([\n        NotifyPropertyChanges\n    ], Droppable);\n    return Droppable;\n}(Base));\nexport { Droppable };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, NotifyPropertyChanges, Event } from './notify-property-change';\nimport { Base } from './base';\nvar keyCode = {\n    'backspace': 8,\n    'tab': 9,\n    'enter': 13,\n    'shift': 16,\n    'control': 17,\n    'alt': 18,\n    'pause': 19,\n    'capslock': 20,\n    'space': 32,\n    'escape': 27,\n    'pageup': 33,\n    'pagedown': 34,\n    'end': 35,\n    'home': 36,\n    'leftarrow': 37,\n    'uparrow': 38,\n    'rightarrow': 39,\n    'downarrow': 40,\n    'insert': 45,\n    'delete': 46,\n    'f1': 112,\n    'f2': 113,\n    'f3': 114,\n    'f4': 115,\n    'f5': 116,\n    'f6': 117,\n    'f7': 118,\n    'f8': 119,\n    'f9': 120,\n    'f10': 121,\n    'f11': 122,\n    'f12': 123,\n    'semicolon': 186,\n    'plus': 187,\n    'comma': 188,\n    'minus': 189,\n    'dot': 190,\n    'forwardslash': 191,\n    'graveaccent': 192,\n    'openbracket': 219,\n    'backslash': 220,\n    'closebracket': 221,\n    'singlequote': 222\n};\n/**\n * KeyboardEvents class enables you to bind key action desired key combinations for ex., Ctrl+A, Delete, Alt+Space etc.\n * ```html\n * <div id='testEle'>  </div>;\n * <script>\n *   let node: HTMLElement = document.querySelector('#testEle');\n *   let kbInstance = new KeyboardEvents({\n *       element: node,\n *       keyConfigs:{ selectAll : 'ctrl+a' },\n *       keyAction: function (e:KeyboardEvent, action:string) {\n *           // handler function code\n *       }\n *   });\n * </script>\n * ```\n */\nvar KeyboardEvents = /** @class */ (function (_super) {\n    __extends(KeyboardEvents, _super);\n    /**\n     * Initializes the KeyboardEvents\n     * @param {HTMLElement} element\n     * @param {KeyboardEventsModel} options\n     */\n    function KeyboardEvents(element, options) {\n        var _this = _super.call(this, options, element) || this;\n        /**\n         * To handle a key press event returns null\n         */\n        _this.keyPressHandler = function (e) {\n            var isAltKey = e.altKey;\n            var isCtrlKey = e.ctrlKey;\n            var isShiftKey = e.shiftKey;\n            var curkeyCode = e.which;\n            var keys = Object.keys(_this.keyConfigs);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                var configCollection = _this.keyConfigs[key].split(',');\n                for (var _a = 0, configCollection_1 = configCollection; _a < configCollection_1.length; _a++) {\n                    var rconfig = configCollection_1[_a];\n                    var rKeyObj = KeyboardEvents_1.getKeyConfigData(rconfig.trim());\n                    if (isAltKey === rKeyObj.altKey && isCtrlKey === rKeyObj.ctrlKey &&\n                        isShiftKey === rKeyObj.shiftKey && curkeyCode === rKeyObj.keyCode) {\n                        e.action = key;\n                        if (_this.keyAction) {\n                            _this.keyAction(e);\n                        }\n                    }\n                }\n            }\n        };\n        _this.bind();\n        return _this;\n    }\n    KeyboardEvents_1 = KeyboardEvents;\n    /**\n     * Unwire bound events and destroy the instance.\n     * @return {void}\n     */\n    KeyboardEvents.prototype.destroy = function () {\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Function can be used to specify certain action if a property is changed\n     * @param newProp\n     * @param oldProp\n     * @returns {void}\n     * @private\n     */\n    KeyboardEvents.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // No code are needed\n    };\n    ;\n    KeyboardEvents.prototype.bind = function () {\n        this.wireEvents();\n    };\n    /**\n     * To get the module name, returns 'keyboard'.\n     * @private\n     */\n    KeyboardEvents.prototype.getModuleName = function () {\n        return 'keyboard';\n    };\n    /**\n     * Wiring event handlers to events\n     */\n    KeyboardEvents.prototype.wireEvents = function () {\n        this.element.addEventListener(this.eventName, this.keyPressHandler);\n    };\n    /**\n     * Unwiring event handlers to events\n     */\n    KeyboardEvents.prototype.unwireEvents = function () {\n        this.element.removeEventListener(this.eventName, this.keyPressHandler);\n    };\n    /**\n     * To get the key configuration data\n     * @param {string} config - configuration data\n     * returns {KeyData}\n     */\n    KeyboardEvents.getKeyConfigData = function (config) {\n        if (config in this.configCache) {\n            return this.configCache[config];\n        }\n        var keys = config.toLowerCase().split('+');\n        var keyData = {\n            altKey: (keys.indexOf('alt') !== -1 ? true : false),\n            ctrlKey: (keys.indexOf('ctrl') !== -1 ? true : false),\n            shiftKey: (keys.indexOf('shift') !== -1 ? true : false),\n            keyCode: null\n        };\n        if (keys[keys.length - 1].length > 1 && !!Number(keys[keys.length - 1])) {\n            keyData.keyCode = Number(keys[keys.length - 1]);\n        }\n        else {\n            keyData.keyCode = KeyboardEvents_1.getKeyCode(keys[keys.length - 1]);\n        }\n        KeyboardEvents_1.configCache[config] = keyData;\n        return keyData;\n    };\n    // Return the keycode value as string \n    KeyboardEvents.getKeyCode = function (keyVal) {\n        return keyCode[keyVal] || keyVal.toUpperCase().charCodeAt(0);\n    };\n    KeyboardEvents.configCache = {};\n    __decorate([\n        Property({})\n    ], KeyboardEvents.prototype, \"keyConfigs\", void 0);\n    __decorate([\n        Property('keyup')\n    ], KeyboardEvents.prototype, \"eventName\", void 0);\n    __decorate([\n        Event()\n    ], KeyboardEvents.prototype, \"keyAction\", void 0);\n    KeyboardEvents = KeyboardEvents_1 = __decorate([\n        NotifyPropertyChanges\n    ], KeyboardEvents);\n    return KeyboardEvents;\n    var KeyboardEvents_1;\n}(Base));\nexport { KeyboardEvents };\n","import { extend } from './util';\nimport { defaultCulture } from './internationalization';\n/**\n * L10n modules provides localized text for different culture.\n * ```typescript\n * import {setCulture} from '@syncfusion/ts-base-library';\n * //load global locale object common for all components.\n * L10n.load({\n *    'fr-BE': {\n *       'button': {\n *            'check': 'vérifié'\n *        }\n *    }\n * });\n * //set globale default locale culture.\n * setCulture('fr-BE');\n * let instance: L10n = new L10n('button', {\n *    check: 'checked'\n * });\n * //Get locale text for current property.\n * instance.getConstant('check');\n * //Change locale culture in a component.\n * instance.setLocale('en-US');\n * ```\n */\nvar L10n = /** @class */ (function () {\n    /**\n     * Constructor\n     */\n    function L10n(controlName, localeStrings, locale) {\n        this.controlName = controlName;\n        this.localeStrings = localeStrings;\n        this.setLocale(locale || defaultCulture);\n    }\n    /**\n     * Sets the locale text\n     * @param {string} locale\n     * @returns {void}\n     */\n    L10n.prototype.setLocale = function (locale) {\n        var intLocale = this.intGetControlConstant(L10n.locale, locale);\n        this.currentLocale = intLocale || this.localeStrings;\n    };\n    /**\n     * Sets the global locale for all components.\n     * @param {Object} localeObject - specifies the localeObject to be set as global locale.\n     */\n    L10n.load = function (localeObject) {\n        this.locale = extend(this.locale, localeObject, {}, true);\n    };\n    /**\n     * Returns current locale text for the property based on the culture name and control name.\n     * @param {string} propertyName - specifies the property for which localize text to be returned.\n     * @return string\n     */\n    L10n.prototype.getConstant = function (prop) {\n        /* tslint:disable no-any */\n        return this.currentLocale[prop] || this.localeStrings[prop] || '';\n    };\n    /**\n     * Returns the control constant object for current object and the locale specified.\n     * @param {Object} curObject\n     * @param {string} locale\n     * @returns {Object}\n     */\n    L10n.prototype.intGetControlConstant = function (curObject, locale) {\n        if (curObject[locale]) {\n            return curObject[locale][this.controlName];\n        }\n        return null;\n    };\n    L10n.locale = {};\n    return L10n;\n}());\nexport { L10n };\n","/**\n * To import utils\n */\nimport { isNullOrUndefined, } from './util';\nvar SvgRenderer = /** @class */ (function () {\n    /* End-Properties */\n    function SvgRenderer(rootID) {\n        //Internal Variables \n        this.svgLink = 'http://www.w3.org/2000/svg';\n        this.rootId = rootID;\n    }\n    // method to get the attributes value\n    /* tslint:disable */\n    SvgRenderer.prototype.getOptionValue = function (options, key) {\n        return options[key];\n    }; /* tslint:enable */\n    /**\n     * To create a Html5 SVG element\n     * @param {SVGAttributes} options - Options to create SVG\n     * @return {Element}\n     */\n    SvgRenderer.prototype.createSvg = function (options) {\n        if (isNullOrUndefined(options.id)) {\n            options.id = this.rootId + '_svg';\n        }\n        this.svgObj = document.getElementById(options.id);\n        if (isNullOrUndefined(document.getElementById(options.id))) {\n            this.svgObj = document.createElementNS(this.svgLink, 'svg');\n        }\n        this.svgObj = this.setElementAttributes(options, this.svgObj);\n        this.setSVGSize(options.width, options.height);\n        return this.svgObj;\n    };\n    // method to set the height and width for the SVG element\n    SvgRenderer.prototype.setSVGSize = function (width, height) {\n        var element = document.getElementById(this.rootId);\n        var size = !isNullOrUndefined(element) ? element.getBoundingClientRect() : null;\n        if (isNullOrUndefined(this.width) || this.width <= 0) {\n            this.svgObj.setAttribute('width', width ? width.toString() : size.width.toString());\n        }\n        else {\n            this.svgObj.setAttribute('width', this.width.toString());\n        }\n        if (isNullOrUndefined(this.height) || this.height <= 0) {\n            this.svgObj.setAttribute('height', height ? height.toString() : '450');\n        }\n        else {\n            this.svgObj.setAttribute('height', this.height.toString());\n        }\n    };\n    /**\n     * To draw a path\n     * @param {PathAttributes} options - Options to draw a path in SVG\n     * @return {Element}\n     */\n    SvgRenderer.prototype.drawPath = function (options) {\n        var path = document.getElementById(options.id);\n        if (path === null) {\n            path = document.createElementNS(this.svgLink, 'path');\n        }\n        path = this.setElementAttributes(options, path);\n        return path;\n    };\n    /**\n     * To draw a line\n     * @param {LineAttributes} options - Options to draw a line in SVG\n     * @return {Element}\n     */\n    SvgRenderer.prototype.drawLine = function (options) {\n        var line = document.getElementById(options.id);\n        if (line === null) {\n            line = document.createElementNS(this.svgLink, 'line');\n        }\n        line = this.setElementAttributes(options, line);\n        return line;\n    };\n    /**\n     * To draw a rectangle\n     * @param {BaseAttibutes} options - Required options to draw a rectangle in SVG\n     * @return {Element}\n     */\n    SvgRenderer.prototype.drawRectangle = function (options) {\n        var rectangle = document.getElementById(options.id);\n        if (rectangle === null) {\n            rectangle = document.createElementNS(this.svgLink, 'rect');\n        }\n        rectangle = this.setElementAttributes(options, rectangle);\n        return rectangle;\n    };\n    /**\n     * To draw a circle\n     * @param {CircleAttributes} options - Required options to draw a circle in SVG\n     * @return {Element}\n     */\n    SvgRenderer.prototype.drawCircle = function (options) {\n        var circle = document.getElementById(options.id);\n        if (circle === null) {\n            circle = document.createElementNS(this.svgLink, 'circle');\n        }\n        circle = this.setElementAttributes(options, circle);\n        return circle;\n    };\n    /**\n     * To draw a polyline\n     * @param {PolylineAttributes} options - Options required to draw a polyline\n     * @return {Element}\n     */\n    SvgRenderer.prototype.drawPolyline = function (options) {\n        var polyline = document.getElementById(options.id);\n        if (polyline === null) {\n            polyline = document.createElementNS(this.svgLink, 'polyline');\n        }\n        polyline = this.setElementAttributes(options, polyline);\n        return polyline;\n    };\n    /**\n     * To draw an ellipse\n     * @param {EllipseAttributes} options - Options required to draw an ellipse\n     * @return {Element}\n     */\n    SvgRenderer.prototype.drawEllipse = function (options) {\n        var ellipse = document.getElementById(options.id);\n        if (ellipse === null) {\n            ellipse = document.createElementNS(this.svgLink, 'ellipse');\n        }\n        ellipse = this.setElementAttributes(options, ellipse);\n        return ellipse;\n    };\n    /**\n     * To draw a polygon\n     * @param {PolylineAttributes} options - Options needed to draw a polygon in SVG\n     * @return {Element}\n     */\n    SvgRenderer.prototype.drawPolygon = function (options) {\n        var polygon = document.getElementById(options.id);\n        if (polygon === null) {\n            polygon = document.createElementNS(this.svgLink, 'polygon');\n        }\n        polygon = this.setElementAttributes(options, polygon);\n        return polygon;\n    };\n    /**\n     * To draw an image\n     * @param {ImageAttributes} options - Required options to draw an image in SVG\n     * @return {Element}\n     */\n    SvgRenderer.prototype.drawImage = function (options) {\n        var img = document.createElementNS(this.svgLink, 'image');\n        img.setAttributeNS(null, 'height', options.height.toString());\n        img.setAttributeNS(null, 'width', options.width.toString());\n        img.setAttributeNS('http://www.w3.org/1999/xlink', 'href', options.href);\n        img.setAttributeNS(null, 'x', options.x.toString());\n        img.setAttributeNS(null, 'y', options.y.toString());\n        img.setAttributeNS(null, 'id', options.id);\n        img.setAttributeNS(null, 'visibility', options.visibility);\n        if (!isNullOrUndefined(this.getOptionValue(options, 'clip-path'))) {\n            img.setAttributeNS(null, 'clip-path', this.getOptionValue(options, 'clip-path'));\n        }\n        if (!isNullOrUndefined(options.preserveAspectRatio)) {\n            img.setAttributeNS(null, 'preserveAspectRatio', options.preserveAspectRatio);\n        }\n        return img;\n    };\n    /**\n     * To draw a text\n     * @param {TextAttributes} options - Options needed to draw a text in SVG\n     * @return {Element}\n     */\n    SvgRenderer.prototype.createText = function (options, label) {\n        var text = document.createElementNS(this.svgLink, 'text');\n        text = this.setElementAttributes(options, text);\n        if (!isNullOrUndefined(label)) {\n            text.textContent = label;\n        }\n        return text;\n    };\n    /**\n     * To create a tSpan\n     * @param {TextAttributes} options - Options to create tSpan\n     * @param {string} label - The text content which is to be rendered in the tSpan\n     * @return {Element}\n     */\n    SvgRenderer.prototype.createTSpan = function (options, label) {\n        var tSpan = document.createElementNS(this.svgLink, 'tspan');\n        tSpan = this.setElementAttributes(options, tSpan);\n        if (!isNullOrUndefined(label)) {\n            tSpan.textContent = label;\n        }\n        return tSpan;\n    };\n    /**\n     * To create a title\n     * @param {string} text - The text content which is to be rendered in the title\n     * @return {Element}\n     */\n    SvgRenderer.prototype.createTitle = function (text) {\n        var title = document.createElementNS(this.svgLink, 'title');\n        title.textContent = text;\n        return title;\n    };\n    /**\n     * To create defs element in SVG\n     * @return {Element}\n     */\n    SvgRenderer.prototype.createDefs = function () {\n        var defs = document.createElementNS(this.svgLink, 'defs');\n        return defs;\n    };\n    /**\n     * To create clip path in SVG\n     * @param {BaseAttibutes} options - Options needed to create clip path\n     * @return {Element}\n     */\n    SvgRenderer.prototype.createClipPath = function (options) {\n        var clipPath = document.createElementNS(this.svgLink, 'clipPath');\n        clipPath = this.setElementAttributes(options, clipPath);\n        return clipPath;\n    };\n    /**\n     * To create foreign object in SVG\n     * @param {BaseAttibutes} options - Options needed to create foreign object\n     * @return {Element}\n     */\n    SvgRenderer.prototype.createForeignObject = function (options) {\n        var foreignObject = document.createElementNS(this.svgLink, 'foreignObject');\n        foreignObject = this.setElementAttributes(options, foreignObject);\n        return foreignObject;\n    };\n    /**\n     * To create group element in SVG\n     * @param {BaseAttibutes} options - Options needed to create group\n     * @return {Element}\n     */\n    SvgRenderer.prototype.createGroup = function (options) {\n        var group = document.createElementNS(this.svgLink, 'g');\n        group = this.setElementAttributes(options, group);\n        return group;\n    };\n    /**\n     * To create pattern in SVG\n     * @param {PatternAttributes} options - Required options to create pattern in SVG\n     * @param {string} type - Specifies the name of the pattern\n     * @return {Element}\n     */\n    SvgRenderer.prototype.createPattern = function (options, element) {\n        var pattern = document.createElementNS(this.svgLink, element);\n        pattern = this.setElementAttributes(options, pattern);\n        return pattern;\n    };\n    /**\n     * To create radial gradient in SVG\n     * @param {string[]} colors - Specifies the colors required to create radial gradient\n     * @param {string[]} colorStop - Specifies the colorstop required to create radial gradient\n     * @param {string} name - Specifies the name of the gradient\n     * @param {RadialGradient} options - value for radial gradient\n     * @return {string}\n     */\n    SvgRenderer.prototype.createRadialGradient = function (colors, name, options) {\n        var colorName;\n        if (!isNullOrUndefined(colors[0].colorStop)) {\n            var newOptions = {\n                'id': this.rootId + '_' + name + 'radialGradient',\n                'cx': options.cx + '%',\n                'cy': options.cy + '%',\n                'r': options.r + '%',\n                'fx': options.fx + '%',\n                'fy': options.fy + '%'\n            };\n            this.drawGradient('radialGradient', newOptions, colors);\n            colorName = 'url(#' + this.rootId + '_' + name + 'radialGradient)';\n        }\n        else {\n            colorName = colors[0].color.toString();\n        }\n        return colorName;\n    };\n    /**\n     * To create linear gradient in SVG\n     * @param {string[]} colors - Array of string specifies the values for color\n     * @param {string[]} colors - Array of string specifies the values for colorStop\n     * @param {string} name - Specifies the name of the gradient\n     * @param {LinearGradient} options - Specifies the options for gradient\n     * @return {string}\n     */\n    SvgRenderer.prototype.createLinearGradient = function (colors, name, options) {\n        var colorName;\n        if (!isNullOrUndefined(colors[0].colorStop)) {\n            var newOptions = {\n                'id': this.rootId + '_' + name + 'linearGradient',\n                'x1': options.x1 + '%',\n                'y1': options.y1 + '%',\n                'x2': options.x2 + '%',\n                'y2': options.y2 + '%'\n            };\n            this.drawGradient('linearGradient', newOptions, colors);\n            colorName = 'url(#' + this.rootId + '_' + name + 'linearGradient)';\n        }\n        else {\n            colorName = colors[0].color.toString();\n        }\n        return colorName;\n    };\n    /**\n     * To render the gradient element in SVG\n     * @param {string} gradientType - Specifies the type of the gradient\n     * @param {RadialGradient | LinearGradient} options - Options required to render a gradient\n     * @param {string[]} colors - Array of string specifies the values for color\n     * @param {string[]} colorStop - Array of string specifies the values for colorStop\n     * @return {Element}\n     */\n    SvgRenderer.prototype.drawGradient = function (gradientType, options, colors) {\n        var defs = this.createDefs();\n        var gradient = document.createElementNS(this.svgLink, gradientType);\n        gradient = this.setElementAttributes(options, gradient);\n        for (var i = 0; i < colors.length; i++) {\n            var stop_1 = document.createElementNS(this.svgLink, 'stop');\n            stop_1.setAttribute('offset', colors[i].colorStop);\n            stop_1.setAttribute('stop-color', colors[i].color);\n            stop_1.setAttribute('stop-opacity', '1');\n            gradient.appendChild(stop_1);\n        }\n        defs.appendChild(gradient);\n        return defs;\n    };\n    /**\n     * To render a clip path\n     * @param {BaseAttibutes} options - Options required to render a clip path\n     * @return {Element}\n     */\n    SvgRenderer.prototype.drawClipPath = function (options) {\n        var defs = this.createDefs();\n        var clipPath = this.createClipPath({ 'id': options.id });\n        var rect = this.drawRectangle(options);\n        clipPath.appendChild(rect);\n        defs.appendChild(clipPath);\n        return defs;\n    };\n    /**\n     * To create circular clip path in SVG\n     * @param {CircleAttributes} options - Options required to create circular clip path\n     * @return {Element}\n     */\n    SvgRenderer.prototype.drawCircularClipPath = function (options) {\n        var defs = this.createDefs();\n        var clipPath = this.createClipPath({ 'id': options.id });\n        var circle = this.drawCircle(options);\n        clipPath.appendChild(circle);\n        defs.appendChild(clipPath);\n        return defs;\n    };\n    /**\n     * To set the attributes to the element\n     * @param {SVGCanvasAttributes} options - Attributes to set for the element\n     * @param {Element} element - The element to which the attributes need to be set\n     * @return {Element}\n     */\n    SvgRenderer.prototype.setElementAttributes = function (options, element) {\n        var keys = Object.keys(options);\n        for (var i = 0; i < keys.length; i++) {\n            element.setAttribute(keys[i], options[keys[i]]);\n        }\n        return element;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { extend } from './util';\nimport { Property, Complex, NotifyPropertyChanges, Event } from './notify-property-change';\nimport { Browser } from './browser';\nimport { Base } from './base';\nimport { ChildProperty } from './child-property';\nimport { EventHandler } from './event-handler';\n/**\n * SwipeSettings is a framework module that provides support to handle swipe event like swipe up, swipe right, etc..,\n * @private\n */\nvar SwipeSettings = /** @class */ (function (_super) {\n    __extends(SwipeSettings, _super);\n    function SwipeSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(50)\n    ], SwipeSettings.prototype, \"swipeThresholdDistance\", void 0);\n    return SwipeSettings;\n}(ChildProperty));\nexport { SwipeSettings };\nvar swipeRegex = /(Up|Down)/;\n/**\n * Touch class provides support to handle the touch event like tap, double tap, tap hold, etc..,\n * ```typescript\n *    let node: HTMLElement;\n * let touchObj: Touch = new Touch({\n *    element: node,\n *    tap: function (e) {\n *        // tap handler function code\n *    }\n *    tapHold: function (e) {\n *        // tap hold handler function code\n *    }\n *    scroll: function (e) {\n *        // scroll handler function code\n *    }\n *    swipe: function (e) {\n *        // swipe handler function code\n *    }\n * });\n * ```\n */\nvar Touch = /** @class */ (function (_super) {\n    __extends(Touch, _super);\n    /* End-Properties */\n    function Touch(element, options) {\n        var _this = _super.call(this, options, element) || this;\n        _this.touchAction = true;\n        _this.tapCount = 0;\n        _this.startEvent = function (evt) {\n            if (_this.touchAction === true) {\n                var point = (evt.changedTouches ? evt.changedTouches[0] : evt);\n                if (evt.changedTouches !== undefined) {\n                    _this.touchAction = false;\n                }\n                _this.isTouchMoved = false;\n                _this.movedDirection = '';\n                _this.startPoint = _this.lastMovedPoint = { clientX: point.clientX, clientY: point.clientY };\n                _this.startEventData = point;\n                _this.hScrollLocked = _this.vScrollLocked = false;\n                _this.tStampStart = Date.now();\n                _this.timeOutTapHold = setTimeout(function () { _this.tapHoldEvent(evt); }, _this.tapHoldThreshold);\n                EventHandler.add(_this.element, Browser.touchMoveEvent, _this.moveEvent, _this);\n                EventHandler.add(_this.element, Browser.touchEndEvent, _this.endEvent, _this);\n            }\n        };\n        _this.moveEvent = function (evt) {\n            var point = evt.changedTouches ? evt.changedTouches[0] : evt;\n            _this.movedPoint = point;\n            _this.isTouchMoved = !(point.clientX === _this.startPoint.clientX && point.clientY === _this.startPoint.clientY);\n            var eScrollArgs = {};\n            if (_this.isTouchMoved) {\n                clearTimeout(_this.timeOutTapHold);\n                _this.calcScrollPoints(evt);\n                var scrollArg = {\n                    startEvents: _this.startEventData,\n                    originalEvent: evt, startX: _this.startPoint.clientX,\n                    startY: _this.startPoint.clientY, distanceX: _this.distanceX,\n                    distanceY: _this.distanceY, scrollDirection: _this.scrollDirection,\n                    velocity: _this.getVelocity(point)\n                };\n                eScrollArgs = extend(eScrollArgs, {}, scrollArg);\n                _this.trigger('scroll', eScrollArgs);\n                _this.lastMovedPoint = { clientX: point.clientX, clientY: point.clientY };\n            }\n        };\n        _this.endEvent = function (evt) {\n            clearTimeout(_this.timeOutTapHold);\n            clearTimeout(_this.timeOutTap);\n            var point = evt;\n            if (evt.changedTouches) {\n                point = evt.changedTouches[0];\n            }\n            var diffX = point.clientX - _this.startPoint.clientX;\n            var diffY = point.clientY - _this.startPoint.clientY;\n            diffX = Math.floor(diffX < 0 ? -1 * diffX : diffX);\n            diffY = Math.floor(diffY < 0 ? -1 * diffY : diffX);\n            _this.isTouchMoved = diffX > 1 || diffY > 1;\n            _this.endPoint = point;\n            var eSwipeArgs;\n            var tDistance = _this.swipeSettings.swipeThresholdDistance;\n            _this.calcPoints(evt);\n            var swipeArgs = {\n                originalEvent: evt,\n                startEvents: _this.startEventData,\n                startX: _this.startPoint.clientX,\n                startY: _this.startPoint.clientY,\n                distanceX: _this.distanceX, distanceY: _this.distanceY, swipeDirection: _this.movedDirection,\n                velocity: _this.getVelocity(point)\n            };\n            if (!_this.isTouchMoved) {\n                if (typeof _this.tap === 'function') {\n                    _this.trigger('tap', { originalEvent: evt, tapCount: ++_this.tapCount });\n                    _this.timeOutTap = setTimeout(function () {\n                        _this.tapCount = 0;\n                    }, _this.tapThreshold);\n                }\n            }\n            else {\n                eSwipeArgs = extend(eSwipeArgs, _this.defaultArgs, swipeArgs);\n                var canTrigger = false;\n                var ele = _this.element;\n                var scrollBool = _this.isScrollable(ele);\n                var moved = swipeRegex.test(_this.movedDirection);\n                if ((tDistance < _this.distanceX && !moved) || (tDistance < _this.distanceY && moved)) {\n                    if (!scrollBool) {\n                        canTrigger = true;\n                    }\n                    else {\n                        canTrigger = _this.checkSwipe(ele, moved);\n                    }\n                }\n                if (canTrigger) {\n                    _this.trigger('swipe', eSwipeArgs);\n                }\n            }\n            _this.modeClear = setTimeout(function () {\n                _this.touchAction = true;\n            }, (typeof _this.tap !== 'function' ? 0 : 10));\n            _this.lastTapTime = new Date().getTime();\n            EventHandler.remove(_this.element, Browser.touchMoveEvent, _this.moveEvent);\n            EventHandler.remove(_this.element, Browser.touchEndEvent, _this.endEvent);\n        };\n        _this.bind();\n        return _this;\n    }\n    // triggers when property changed \n    /**\n     * @private\n     * @param newProp\n     * @param oldProp\n     */\n    Touch.prototype.onPropertyChanged = function (newProp, oldProp) {\n        //No Code to handle\n    };\n    Touch.prototype.bind = function () {\n        this.wireEvents();\n        if (Browser.isIE) {\n            this.element.classList.add('e-block-touch');\n        }\n    };\n    /**\n     * To destroy the touch instance.\n     * @return {void}\n     */\n    Touch.prototype.destroy = function () {\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n    };\n    // Need to changes the event binding once we updated the event handler.\n    Touch.prototype.wireEvents = function () {\n        EventHandler.add(this.element, Browser.touchStartEvent, this.startEvent, this);\n    };\n    Touch.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.startEvent);\n    };\n    /**\n     * Returns module name as touch\n     * @returns {string}\n     * @private\n     */\n    Touch.prototype.getModuleName = function () {\n        return 'touch';\n    };\n    /**\n     * Returns if the HTML element is Scrollable.\n     * @param {HTMLElement} element - HTML Element to check if Scrollable.\n     * @returns {boolean}\n     */\n    Touch.prototype.isScrollable = function (element) {\n        var eleStyle = getComputedStyle(element);\n        var style = eleStyle.overflow + eleStyle.overflowX + eleStyle.overflowY;\n        if ((/(auto|scroll)/).test(style)) {\n            return true;\n        }\n        return false;\n    };\n    Touch.prototype.tapHoldEvent = function (evt) {\n        this.tapCount = 0;\n        this.touchAction = true;\n        var eTapArgs;\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.moveEvent);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.endEvent);\n        eTapArgs = { originalEvent: evt };\n        this.trigger('tapHold', eTapArgs);\n    };\n    Touch.prototype.calcPoints = function (evt) {\n        var point = evt.changedTouches ? evt.changedTouches[0] : evt;\n        this.defaultArgs = { originalEvent: evt };\n        this.distanceX = Math.abs((Math.abs(point.clientX) - Math.abs(this.startPoint.clientX)));\n        this.distanceY = Math.abs((Math.abs(point.clientY) - Math.abs(this.startPoint.clientY)));\n        if (this.distanceX > this.distanceY) {\n            this.movedDirection = (point.clientX > this.startPoint.clientX) ? 'Right' : 'Left';\n        }\n        else {\n            this.movedDirection = (point.clientY < this.startPoint.clientY) ? 'Up' : 'Down';\n        }\n    };\n    Touch.prototype.calcScrollPoints = function (evt) {\n        var point = evt.changedTouches ? evt.changedTouches[0] : evt;\n        this.defaultArgs = { originalEvent: evt };\n        this.distanceX = Math.abs((Math.abs(point.clientX) - Math.abs(this.lastMovedPoint.clientX)));\n        this.distanceY = Math.abs((Math.abs(point.clientY) - Math.abs(this.lastMovedPoint.clientY)));\n        if ((this.distanceX > this.distanceY || this.hScrollLocked === true) && this.vScrollLocked === false) {\n            this.scrollDirection = (point.clientX > this.lastMovedPoint.clientX) ? 'Right' : 'Left';\n            this.hScrollLocked = true;\n        }\n        else {\n            this.scrollDirection = (point.clientY < this.lastMovedPoint.clientY) ? 'Up' : 'Down';\n            this.vScrollLocked = true;\n        }\n    };\n    Touch.prototype.getVelocity = function (pnt) {\n        var newX = pnt.clientX;\n        var newY = pnt.clientY;\n        var newT = Date.now();\n        var xDist = newX - this.startPoint.clientX;\n        var yDist = newY - this.startPoint.clientX;\n        var interval = newT - this.tStampStart;\n        return Math.sqrt(xDist * xDist + yDist * yDist) / interval;\n    };\n    // tslint:disable-next-line:no-any\n    Touch.prototype.checkSwipe = function (ele, flag) {\n        var keys = ['scroll', 'offset'];\n        var temp = flag ? ['Height', 'Top'] : ['Width', 'Left'];\n        if ((ele[keys[0] + temp[0]] <= ele[keys[1] + temp[0]])) {\n            return true;\n        }\n        return (ele[keys[0] + temp[1]] === 0) ||\n            (ele[keys[1] + temp[0]] + ele[keys[0] + temp[1]] >= ele[keys[0] + temp[0]]);\n    };\n    __decorate([\n        Event()\n    ], Touch.prototype, \"tap\", void 0);\n    __decorate([\n        Event()\n    ], Touch.prototype, \"tapHold\", void 0);\n    __decorate([\n        Event()\n    ], Touch.prototype, \"swipe\", void 0);\n    __decorate([\n        Event()\n    ], Touch.prototype, \"scroll\", void 0);\n    __decorate([\n        Property(350)\n    ], Touch.prototype, \"tapThreshold\", void 0);\n    __decorate([\n        Property(750)\n    ], Touch.prototype, \"tapHoldThreshold\", void 0);\n    __decorate([\n        Complex({}, SwipeSettings)\n    ], Touch.prototype, \"swipeSettings\", void 0);\n    Touch = __decorate([\n        NotifyPropertyChanges\n    ], Touch);\n    return Touch;\n}(Base));\nexport { Touch };\n","import { getValue, setValue } from '@syncfusion/ej2-base';\nimport { clearTemplate } from './util';\nvar ComplexBase = /** @class */ (function () {\n    function ComplexBase() {\n        this.hasChanges = false;\n        this.propCollection = {};\n        this.tags = [];\n        this.tagObjects = [];\n    }\n    ComplexBase.prototype.ngOnInit = function () {\n        this.registeredTemplate = {};\n        for (var _i = 0, _a = this.tags; _i < _a.length; _i++) {\n            var tag = _a[_i];\n            var objInstance = getValue('child' + tag.substring(0, 1).toUpperCase() + tag.substring(1), this);\n            if (objInstance) {\n                this.tagObjects.push({ instance: objInstance, name: tag });\n            }\n        }\n        var templateProperties = Object.keys(this);\n        templateProperties = templateProperties.filter(function (val) {\n            return /Ref$/i.test(val);\n        });\n        for (var _b = 0, templateProperties_1 = templateProperties; _b < templateProperties_1.length; _b++) {\n            var tempName = templateProperties_1[_b];\n            var propName = tempName.replace('Ref', '');\n            setValue(propName.replace('_', '.'), getValue(propName, this), this.propCollection);\n        }\n    };\n    ComplexBase.prototype.ngOnChanges = function (changes) {\n        for (var _i = 0, _a = Object.keys(changes); _i < _a.length; _i++) {\n            var propName = _a[_i];\n            var changedVal = changes[propName];\n            this.propCollection[propName] = changedVal.currentValue;\n        }\n        this.hasChanges = true;\n    };\n    ComplexBase.prototype.clearTemplate = function (templateNames) {\n        clearTemplate(this, templateNames);\n    };\n    ;\n    ComplexBase.prototype.getProperties = function () {\n        for (var _i = 0, _a = this.tagObjects; _i < _a.length; _i++) {\n            var tagObject = _a[_i];\n            this.propCollection[tagObject.name] = tagObject.instance.getProperties();\n        }\n        return this.propCollection;\n    };\n    ComplexBase.prototype.isChanged = function () {\n        var result = this.hasChanges;\n        for (var _i = 0, _a = this.tagObjects; _i < _a.length; _i++) {\n            var item = _a[_i];\n            result = result || item.instance.hasChanges;\n        }\n        return result;\n    };\n    ComplexBase.prototype.ngAfterContentChecked = function () {\n        this.hasChanges = this.isChanged();\n        var templateProperties = Object.keys(this);\n        templateProperties = templateProperties.filter(function (val) {\n            return /Ref$/i.test(val);\n        });\n    };\n    ComplexBase.prototype.ngAfterViewChecked = function () {\n        this.hasChanges = false;\n    };\n    return ComplexBase;\n}());\nexport { ComplexBase };\nvar ArrayBase = /** @class */ (function () {\n    function ArrayBase(propertyName) {\n        this.list = [];\n        this.hasChanges = false;\n        this.propertyName = propertyName;\n    }\n    ArrayBase.prototype.ngOnInit = function () {\n        this.isInitChanges = true;\n    };\n    ArrayBase.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        var index = 0;\n        this.list = this.children.map(function (child) {\n            child.index = index++;\n            child.property = _this.propertyName;\n            return child;\n        });\n        this.hasChanges = true;\n    };\n    ArrayBase.prototype.getProperties = function () {\n        var onlyProp = [];\n        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {\n            var item = _a[_i];\n            onlyProp.push(item.getProperties());\n        }\n        return onlyProp;\n    };\n    ArrayBase.prototype.isChanged = function () {\n        var result = false;\n        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {\n            var item = _a[_i];\n            result = result || item.hasChanges;\n        }\n        return !!this.list.length && result;\n    };\n    ArrayBase.prototype.clearTemplate = function (templateNames) {\n        var _this = this;\n        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {\n            var item = _a[_i];\n            item.clearTemplate(templateNames && templateNames.map(function (val) {\n                return new RegExp(_this.propertyName).test(val) ? val.replace(_this.propertyName + '.', '') : val;\n            }));\n        }\n    };\n    ArrayBase.prototype.ngAfterContentChecked = function () {\n        this.hasChanges = this.isChanged();\n    };\n    ArrayBase.prototype.ngAfterViewInit = function () {\n        this.isInitChanges = false;\n    };\n    return ArrayBase;\n}());\nexport { ArrayBase };\n","declare let global: any;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ndeclare var WorkerGlobalScope: any;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _root: any = __window || __global || __self;\n\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n  if (!_root) {\n    throw new Error('RxJS could not find any global context (window, self, global)');\n  }\n})();\n\nexport { _root as root };","export const isArray = Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number');\n","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport const errorObject: any = { e: {} };","/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport class UnsubscriptionError extends Error {\n  constructor(public errors: any[]) {\n    super();\n    const err: any = Error.call(this, errors ?\n      `${errors.length} errors occurred during unsubscription:\n  ${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '');\n    (<any> this).name = err.name = 'UnsubscriptionError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","export interface NextObserver<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error?: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface ErrorObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface CompletionObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error?: (err: any) => void;\n  complete: () => void;\n}\n\nexport type PartialObserver<T> = NextObserver<T> | ErrorObserver<T> | CompletionObserver<T>;\n\nexport interface Observer<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error: (err: any) => void;\n  complete: () => void;\n}\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void { throw err; },\n  complete(): void { /*noop*/ }\n};\n","import { root } from '../util/root';\n\nconst Symbol: any = root.Symbol;\n\nexport const rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n  Symbol.for('rxSubscriber') : '@@rxSubscriber';\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { Observer, PartialObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { empty as emptyObserver } from './Observer';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  public syncErrorValue: any = null;\n  public syncErrorThrown: boolean = false;\n  public syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            this.destination = (<Subscriber<any>> destinationOrNext);\n            (<any> this.destination).add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached {@link Error}. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  protected _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _parent, _parents } = this;\n    this._parent = null;\n    this._parents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parent = _parent;\n    this._parents = _parents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._error) {\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        throw err;\n      } else {\n        _parentSubscriber.syncErrorValue = err;\n        _parentSubscriber.syncErrorThrown = true;\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      throw err;\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      parent.syncErrorValue = err;\n      parent.syncErrorThrown = true;\n      return true;\n    }\n    return false;\n  }\n\n  protected _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { root } from '../util/root';\n\nexport function getSymbolObservable(context: any) {\n  let $$observable: any;\n  let Symbol = context.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (Symbol.observable) {\n      $$observable = Symbol.observable;\n    } else {\n        $$observable = Symbol('observable');\n        Symbol.observable = $$observable;\n    }\n  } else {\n    $$observable = '@@observable';\n  }\n\n  return $$observable;\n}\n\nexport const observable = getSymbolObservable(root);\n\n/**\n * @deprecated use observable instead\n */\nexport const $$observable = observable;\n","import { PartialObserver } from './Observer';\nimport { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, AnonymousSubscription, TeardownLogic } from './Subscription';\nimport { root } from './util/root';\nimport { toSubscriber } from './util/toSubscriber';\nimport { IfObservable } from './observable/IfObservable';\nimport { ErrorObservable } from './observable/ErrorObservable';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { OperatorFunction } from './interfaces';\nimport { pipeFromArray } from './util/pipe';\n\nexport interface Subscribable<T> {\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): AnonymousSubscription;\n}\n\nexport type SubscribableOrPromise<T> = Subscribable<T> | PromiseLike<T>;\nexport type ObservableInput<T> = SubscribableOrPromise<T> | ArrayLike<T>;\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  public _isScalar: boolean = false;\n\n  protected source: Observable<any>;\n  protected operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n   * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n   * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n   * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n   *\n   * @example <caption>Subscribe with an Observer</caption>\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() { // We actually could just remove this method,\n   *   },        // since we do not really care about errors right now.\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   * .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Subscribe with functions</caption>\n   * let sum = 0;\n   *\n   * Rx.Observable.of(1, 2, 3)\n   * .subscribe(\n   *   function(value) {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   function() {\n   *     console.log('Sum equals: ' + sum);\n   *   }\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Cancel a subscription</caption>\n   * const subscription = Rx.Observable.interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => console.log('completed!') // Will not be called, even\n   * );                                // when cancelling subscription\n   *\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   *\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      operator.call(sink, this.source);\n    } else {\n      sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n    }\n\n    if (sink.syncErrorThrowable) {\n      sink.syncErrorThrowable = false;\n      if (sink.syncErrorThrown) {\n        throw sink.syncErrorValue;\n      }\n    }\n\n    return sink;\n  }\n\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      sink.syncErrorThrown = true;\n      sink.syncErrorValue = err;\n      sink.error(err);\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, PromiseCtor?: typeof Promise): Promise<void> {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a RefernceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        if (subscription) {\n          // if there is a subscription, then we can surmise\n          // the next handling is asynchronous. Any errors thrown\n          // need to be rejected explicitly and unsubscribe must be\n          // called manually\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscription.unsubscribe();\n          }\n        } else {\n          // if there is NO subscription, then we're getting a nexted\n          // value synchronously during subscription. We can just call it.\n          // If it errors, Observable's `subscribe` will ensure the\n          // unsubscription logic is called, then synchronously rethrow the error.\n          // After that, Promise will trap the error and send it\n          // down the rejection path.\n          next(value);\n        }\n      }, reject, resolve);\n    });\n  }\n\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words\n  static if: typeof IfObservable.create;\n  static throw: typeof ErrorObservable.create;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * @example\n   *\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * Rx.Observable.interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   */\n  pipe<R>(...operations: OperatorFunction<T, R>[]): Observable<R> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(PromiseCtor?: PromiseConstructorLike) {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ScalarObservable<T> extends Observable<T> {\n  static create<T>(value: T, scheduler?: IScheduler): ScalarObservable<T> {\n    return new ScalarObservable(value, scheduler);\n  }\n\n  static dispatch(state: any): void {\n    const { done, value, subscriber } = state;\n\n    if (done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(value);\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.done = true;\n    (<any> this).schedule(state);\n  }\n\n  _isScalar: boolean = true;\n\n  constructor(public value: T, private scheduler?: IScheduler) {\n    super();\n    if (scheduler) {\n      this._isScalar = false;\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const value = this.value;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ScalarObservable.dispatch, 0, {\n        done: false, value, subscriber\n      });\n    } else {\n      subscriber.next(value);\n      if (!subscriber.closed) {\n        subscriber.complete();\n      }\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nexport interface DispatchArg<T> {\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class EmptyObservable<T> extends Observable<T> {\n\n  /**\n   * Creates an Observable that emits no items to the Observer and immediately\n   * emits a complete notification.\n   *\n   * <span class=\"informal\">Just emits 'complete', and nothing else.\n   * </span>\n   *\n   * <img src=\"./img/empty.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the complete notification. It can be used for composing with other\n   * Observables, such as in a {@link mergeMap}.\n   *\n   * @example <caption>Emit the number 7, then complete.</caption>\n   * var result = Rx.Observable.empty().startWith(7);\n   * result.subscribe(x => console.log(x));\n   *\n   * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n   * var interval = Rx.Observable.interval(1000);\n   * var result = interval.mergeMap(x =>\n   *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n   * );\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following to the console:\n   * // x is equal to the count on the interval eg(0,1,2,3,...)\n   * // x will occur every 1000ms\n   * // if x % 2 is equal to 1 print abc\n   * // if x % 2 is not equal to 1 nothing will be output\n   *\n   * @see {@link create}\n   * @see {@link never}\n   * @see {@link of}\n   * @see {@link throw}\n   *\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emission of the complete notification.\n   * @return {Observable} An \"empty\" Observable: emits only the complete\n   * notification.\n   * @static true\n   * @name empty\n   * @owner Observable\n   */\n  static create<T>(scheduler?: IScheduler): Observable<T> {\n    return new EmptyObservable<T>(scheduler);\n  }\n\n  static dispatch<T>(arg: DispatchArg<T>) {\n    const { subscriber } = arg;\n    subscriber.complete();\n  }\n\n  constructor(private scheduler?: IScheduler) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber });\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { isScheduler } from '../util/isScheduler';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayObservable<T> extends Observable<T> {\n\n  static create<T>(array: T[], scheduler?: IScheduler): Observable<T> {\n    return new ArrayObservable(array, scheduler);\n  }\n\n  static of<T>(item1: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, item6: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(...array: Array<T | IScheduler>): Observable<T>;\n  /**\n   * Creates an Observable that emits some values you specify as arguments,\n   * immediately one after the other, and then emits a complete notification.\n   *\n   * <span class=\"informal\">Emits the arguments you provide, then completes.\n   * </span>\n   *\n   * <img src=\"./img/of.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the arguments given, and the complete notification thereafter. It can\n   * be used for composing with other Observables, such as with {@link concat}.\n   * By default, it uses a `null` IScheduler, which means the `next`\n   * notifications are sent synchronously, although with a different IScheduler\n   * it is possible to determine when those notifications will be delivered.\n   *\n   * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n   * var numbers = Rx.Observable.of(10, 20, 30);\n   * var letters = Rx.Observable.of('a', 'b', 'c');\n   * var interval = Rx.Observable.interval(1000);\n   * var result = numbers.concat(letters).concat(interval);\n   * result.subscribe(x => console.log(x));\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link never}\n   * @see {@link throw}\n   *\n   * @param {...T} values Arguments that represent `next` values to be emitted.\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emissions of the `next` notifications.\n   * @return {Observable<T>} An Observable that emits each given input value.\n   * @static true\n   * @name of\n   * @owner Observable\n   */\n  static of<T>(...array: Array<T | IScheduler>): Observable<T> {\n    let scheduler = <IScheduler>array[array.length - 1];\n    if (isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    const len = array.length;\n    if (len > 1) {\n      return new ArrayObservable<T>(<any>array, scheduler);\n    } else if (len === 1) {\n      return new ScalarObservable<T>(<any>array[0], scheduler);\n    } else {\n      return new EmptyObservable<T>(scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n\n    const { array, index, count, subscriber } = state;\n\n    if (index >= count) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(array[index]);\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  value: any;\n\n  constructor(private array: T[], private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && array.length === 1) {\n      this._isScalar = true;\n      this.value = array[0];\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const array = this.array;\n    const count = array.length;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayObservable.dispatch, 0, {\n        array, index, count, subscriber\n      });\n    } else {\n      for (let i = 0; i < count && !subscriber.closed; i++) {\n        subscriber.next(array[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number');","import { root } from '../util/root';\n\nexport function symbolIteratorPonyfill(root: any) {\n  const Symbol: any = root.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (!Symbol.iterator) {\n      Symbol.iterator = Symbol('iterator polyfill');\n    }\n    return Symbol.iterator;\n  } else {\n    // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n    const { Set } = root;\n    if (Set && typeof new Set()['@@iterator'] === 'function') {\n      return '@@iterator';\n    }\n    const { Map } = root;\n    // required for compatability with es6-shim\n    if (Map) {\n      let keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        let key = keys[i];\n        // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n        if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {\n          return key;\n        }\n      }\n    }\n    return '@@iterator';\n  }\n}\n\nexport const iterator = symbolIteratorPonyfill(root);\n\n/**\n * @deprecated use iterator instead\n */\nexport const $$iterator = iterator;\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index: number = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, private outerValue: T, private outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport class ObjectUnsubscribedError extends Error {\n  constructor() {\n    const err: any = super('object unsubscribed');\n    (<any> this).name = err.name = 'ObjectUnsubscribedError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Subject } from './Subject';\nimport { Observer } from './Observer';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observer } from './Observer';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { ISubscription, Subscription, TeardownLogic } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements ISubscription {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  protected _subject: Subject<T>;\n  protected _refCount: number = 0;\n  protected _connection: Subscription;\n  _isComplete = false;\n\n  constructor(protected source: Observable<T>,\n              protected subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      } else {\n        this._connection = connection;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nconst connectableProto = <any>ConnectableObservable.prototype;\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = {\n  operator: { value: null },\n  _refCount: { value: 0, writable: true },\n  _subject: { value: null, writable: true },\n  _connection: { value: null, writable: true },\n  _subscribe: { value: connectableProto._subscribe },\n  _isComplete: { value: connectableProto._isComplete, writable: true },\n  getSubject: { value: connectableProto.getSubject },\n  connect: { value: connectableProto.connect },\n  refCount: { value: connectableProto.refCount }\n};\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  protected _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","\n/**\n * Creates a token that can be used in a DI Provider.\n * \n * ### Example ([live demo](http://plnkr.co/edit/Ys9ezXpj2Mnoy3Uc8KBp?p=preview))\n * \n * ```typescript\n * var t = new OpaqueToken(\"value\");\n * \n * var injector = Injector.resolveAndCreate([\n *   {provide: t, useValue: \"bindingValue\"}\n * ]);\n * \n * expect(injector.get(t)).toEqual(\"bindingValue\");\n * ```\n * \n * Using an `OpaqueToken` is preferable to using strings as tokens because of possible collisions\n * caused by multiple providers using the same string as two different tokens.\n * \n * Using an `OpaqueToken` is preferable to using an `Object` as tokens because it provides better\n * error messages.\n * @deprecated since v4.0.0 because it does not support type information, use `InjectionToken<?>`\n * instead.\n */\nexport class OpaqueToken {\n/**\n * @param {?} _desc\n */\nconstructor(protected _desc: string) {}\n/**\n * @return {?}\n */\ntoString(): string { return `Token ${this._desc}`; }\n}\n\nfunction OpaqueToken_tsickle_Closure_declarations() {\n/** @type {?} */\nOpaqueToken.prototype._desc;\n}\n\n/**\n * Creates a token that can be used in a DI Provider.\n * \n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n * \n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n * \n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n * \n * ### Example\n * \n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n * \n * \\@stable\n */\nexport class InjectionToken<T> extends OpaqueToken {\nprivate _differentiate_from_OpaqueToken_structurally: any;\n/**\n * @param {?} desc\n */\nconstructor(desc: string) { super(desc); }\n/**\n * @return {?}\n */\ntoString(): string { return `InjectionToken ${this._desc}`; }\n}\n\nfunction InjectionToken_tsickle_Closure_declarations() {\n/** @type {?} */\nInjectionToken.prototype._differentiate_from_OpaqueToken_structurally;\n}\n\n","\nexport type ChangeDetectionStrategy = number;\nexport let ChangeDetectionStrategy: any = {};\nChangeDetectionStrategy.OnPush = 0;\nChangeDetectionStrategy.Default = 1;\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\n\nexport type ChangeDetectorStatus = number;\nexport let ChangeDetectorStatus: any = {};\nChangeDetectorStatus.CheckOnce = 0;\nChangeDetectorStatus.Checked = 1;\nChangeDetectorStatus.CheckAlways = 2;\nChangeDetectorStatus.Detached = 3;\nChangeDetectorStatus.Errored = 4;\nChangeDetectorStatus.Destroyed = 5;\nChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = \"CheckOnce\";\nChangeDetectorStatus[ChangeDetectorStatus.Checked] = \"Checked\";\nChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = \"CheckAlways\";\nChangeDetectorStatus[ChangeDetectorStatus.Detached] = \"Detached\";\nChangeDetectorStatus[ChangeDetectorStatus.Errored] = \"Errored\";\nChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = \"Destroyed\";\n\n/**\n * @param {?} changeDetectionStrategy\n * @return {?}\n */\nexport function isDefaultChangeDetectionStrategy(changeDetectionStrategy: ChangeDetectionStrategy):\n    boolean {\n  return changeDetectionStrategy == null ||\n      changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n","\nexport type ViewEncapsulation = number;\nexport let ViewEncapsulation: any = {};\nViewEncapsulation.Emulated = 0;\nViewEncapsulation.Native = 1;\nViewEncapsulation.None = 2;\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n\n/**\n * Metadata properties available for configuring Views.\n * \n * For details on the `\\@Component` annotation, see {\\@link Component}.\n * \n * ### Example\n * \n * ```\n * \\@Component({ \n *   selector: 'greet',\n *   template: 'Hello {{name}}!',\n * })\n * class Greet {\n *   name: string;\n * \n *   constructor() {\n *     this.name = 'World';\n *   }\n * }\n * ```\n * \n * @deprecated Use Component instead.\n * \n * {\\@link Component}\n */\nexport class ViewMetadata {\n/**\n * {\\@link Component#templateUrl}\n */\ntemplateUrl: string|undefined;\n/**\n * {\\@link Component#template}\n */\ntemplate: string|undefined;\n/**\n * {\\@link Component#stylesUrl}\n */\nstyleUrls: string[]|undefined;\n/**\n * {\\@link Component#styles}\n */\nstyles: string[]|undefined;\n/**\n * {\\@link Component#encapsulation}\n */\nencapsulation: ViewEncapsulation|undefined;\n/**\n * {\\@link Component#animation}\n */\nanimations: any[]|undefined;\n/**\n * {\\@link Component#interpolation}\n */\ninterpolation: [string, string]|undefined;\n/**\n * @param {?=} opts\n */\nconstructor(opts: {\n    templateUrl?: string,\n    template?: string,\n    encapsulation?: ViewEncapsulation,\n    styles?: string[],\n    styleUrls?: string[],\n    animations?: any[],\n    interpolation?: [string, string]\n  } = {}) {\n    this.templateUrl = opts.templateUrl;\n    this.template = opts.template;\n    this.styleUrls = opts.styleUrls;\n    this.styles = opts.styles;\n    this.encapsulation = opts.encapsulation;\n    this.animations = opts.animations;\n    this.interpolation = opts.interpolation;\n  }\n}\n\nfunction ViewMetadata_tsickle_Closure_declarations() {\n/**\n * {\\@link Component#templateUrl}\n * @type {?}\n */\nViewMetadata.prototype.templateUrl;\n/**\n * {\\@link Component#template}\n * @type {?}\n */\nViewMetadata.prototype.template;\n/**\n * {\\@link Component#stylesUrl}\n * @type {?}\n */\nViewMetadata.prototype.styleUrls;\n/**\n * {\\@link Component#styles}\n * @type {?}\n */\nViewMetadata.prototype.styles;\n/**\n * {\\@link Component#encapsulation}\n * @type {?}\n */\nViewMetadata.prototype.encapsulation;\n/**\n * {\\@link Component#animation}\n * @type {?}\n */\nViewMetadata.prototype.animations;\n/**\n * {\\@link Component#interpolation}\n * @type {?}\n */\nViewMetadata.prototype.interpolation;\n}\n\n","\n/**\n * \\@whatItDoes Represents the version of Angular\n * \n * \\@stable\n */\nexport class Version {\n/**\n * @param {?} full\n */\nconstructor(public full: string) {}\n/**\n * @return {?}\n */\nget major(): string { return this.full.split('.')[0]; }\n/**\n * @return {?}\n */\nget minor(): string { return this.full.split('.')[1]; }\n/**\n * @return {?}\n */\nget patch(): string { return this.full.split('.').slice(2).join('.'); }\n}\n\nfunction Version_tsickle_Closure_declarations() {\n/** @type {?} */\nVersion.prototype.full;\n}\n\n/**\n * \\@stable\n */\nexport const VERSION = new Version('4.4.6');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {InjectionToken} from './injection_token';\n\nconst /** @type {?} */ _THROW_IF_NOT_FOUND = new Object();\nexport const /** @type {?} */ THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nclass _NullInjector implements Injector {\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = _THROW_IF_NOT_FOUND): any {\n    if (notFoundValue === _THROW_IF_NOT_FOUND) {\n      throw new Error(`No provider for ${stringify(token)}!`);\n    }\n    return notFoundValue;\n  }\n}\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse \n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n * \n * \\@description \n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n * \n * ### Example\n * \n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n * \n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n * \n * \\@stable\n * @abstract\n */\nexport abstract class Injector {\n  static THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n  static NULL: Injector = new _NullInjector();\n/**\n * Retrieves an instance from the injector based on the provided token.\n * If not found:\n * - Throws an error if no `notFoundValue` that is not equal to\n * Injector.THROW_IF_NOT_FOUND is given\n * - Returns the `notFoundValue` otherwise\n * @abstract\n * @template T\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget<T>(token: Type<T>|InjectionToken<T>, notFoundValue?: T) {}\n/**\n * @deprecated from v4.0.0 use Type<T> or InjectionToken<T>\n * @suppress {duplicate}\n * @abstract\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue?: any) {}\n}\n\nfunction Injector_tsickle_Closure_declarations() {\n/** @type {?} */\nInjector.THROW_IF_NOT_FOUND;\n/** @type {?} */\nInjector.NULL;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {DebugContext} from './view';\n\nexport const /** @type {?} */ ERROR_TYPE = 'ngType';\nexport const /** @type {?} */ ERROR_COMPONENT_TYPE = 'ngComponentType';\nexport const /** @type {?} */ ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nexport const /** @type {?} */ ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nexport const /** @type {?} */ ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getType(error: Error): Function {\n  return ( /** @type {?} */((error as any)))[ERROR_TYPE];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getDebugContext(error: Error): DebugContext {\n  return ( /** @type {?} */((error as any)))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getOriginalError(error: Error): Error {\n  return ( /** @type {?} */((error as any)))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getErrorLogger(error: Error): (console: Console, ...values: any[]) => void {\n  return ( /** @type {?} */((error as any)))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console: Console, ...values: any[]) {\n  ( /** @type {?} */((<any>console.error)))(...values);\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {stringify} from '../util';\nimport {resolveForwardRef} from './forward_ref';\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n * \n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n * \n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n * \n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * \\@experimental\n */\nexport class ReflectiveKey {\n/**\n * Private\n * @param {?} token\n * @param {?} id\n */\nconstructor(public token: Object,\npublic id: number) {\n    if (!token) {\n      throw new Error('Token must be defined!');\n    }\n  }\n/**\n * Returns a stringified token.\n * @return {?}\n */\nget displayName(): string { return stringify(this.token); }\n/**\n * Retrieves a `Key` for a token.\n * @param {?} token\n * @return {?}\n */\nstatic get(token: Object): ReflectiveKey {\n    return _globalKeyRegistry.get(resolveForwardRef(token));\n  }\n/**\n * @return {?} the number of keys registered in the system.\n */\nstatic get numberOfKeys(): number { return _globalKeyRegistry.numberOfKeys; }\n}\n\nfunction ReflectiveKey_tsickle_Closure_declarations() {\n/** @type {?} */\nReflectiveKey.prototype.token;\n/** @type {?} */\nReflectiveKey.prototype.id;\n}\n\n/**\n * \\@internal\n */\nexport class KeyRegistry {\nprivate _allKeys = new Map<Object, ReflectiveKey>();\n/**\n * @param {?} token\n * @return {?}\n */\nget(token: Object): ReflectiveKey {\n    if (token instanceof ReflectiveKey) return token;\n\n    if (this._allKeys.has(token)) {\n      return /** @type {?} */(( this._allKeys.get(token)));\n    }\n\n    const /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n    this._allKeys.set(token, newKey);\n    return newKey;\n  }\n/**\n * @return {?}\n */\nget numberOfKeys(): number { return this._allKeys.size; }\n}\n\nfunction KeyRegistry_tsickle_Closure_declarations() {\n/** @type {?} */\nKeyRegistry.prototype._allKeys;\n}\n\n\nconst /** @type {?} */ _globalKeyRegistry = new KeyRegistry();\n","\n/**\n * \\@whatItDoes Represents a type that a Component or other object is instances of.\n * \n * \\@description \n * \n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n * \n * \\@stable\n */\nexport const Type = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nexport function isType(v: any): v is Type<any> {\n  return typeof v === 'function';\n}\n\nexport interface Type<T> extends Function { new (...args: any[]): T; }\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type} from '../type';\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n\nexport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nexport {GetterFn, MethodFn, SetterFn} from './types';\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nexport class Reflector {\n/**\n * @param {?} reflectionCapabilities\n */\nconstructor(public reflectionCapabilities: PlatformReflectionCapabilities) {}\n/**\n * @param {?} caps\n * @return {?}\n */\nupdateCapabilities(caps: PlatformReflectionCapabilities) { this.reflectionCapabilities = caps; }\n/**\n * @param {?} type\n * @return {?}\n */\nfactory(type: Type<any>): Function { return this.reflectionCapabilities.factory(type); }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nparameters(typeOrFunc: Type<any>): any[][] {\n    return this.reflectionCapabilities.parameters(typeOrFunc);\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nannotations(typeOrFunc: Type<any>): any[] {\n    return this.reflectionCapabilities.annotations(typeOrFunc);\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\npropMetadata(typeOrFunc: Type<any>): {[key: string]: any[]} {\n    return this.reflectionCapabilities.propMetadata(typeOrFunc);\n  }\n/**\n * @param {?} type\n * @param {?} lcProperty\n * @return {?}\n */\nhasLifecycleHook(type: any, lcProperty: string): boolean {\n    return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetter(name: string): GetterFn { return this.reflectionCapabilities.getter(name); }\n/**\n * @param {?} name\n * @return {?}\n */\nsetter(name: string): SetterFn { return this.reflectionCapabilities.setter(name); }\n/**\n * @param {?} name\n * @return {?}\n */\nmethod(name: string): MethodFn { return this.reflectionCapabilities.method(name); }\n/**\n * @param {?} type\n * @return {?}\n */\nimportUri(type: any): string { return this.reflectionCapabilities.importUri(type); }\n/**\n * @param {?} type\n * @return {?}\n */\nresourceUri(type: any): string { return this.reflectionCapabilities.resourceUri(type); }\n/**\n * @param {?} name\n * @param {?} moduleUrl\n * @param {?} members\n * @param {?} runtime\n * @return {?}\n */\nresolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n  }\n/**\n * @param {?} identifier\n * @param {?} name\n * @return {?}\n */\nresolveEnum(identifier: any, name: string): any {\n    return this.reflectionCapabilities.resolveEnum(identifier, name);\n  }\n}\n\nfunction Reflector_tsickle_Closure_declarations() {\n/** @type {?} */\nReflector.prototype.reflectionCapabilities;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ReflectionCapabilities} from './reflection_capabilities';\nimport {Reflector} from './reflector';\n\nexport {Reflector} from './reflector';\n/**\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nexport const reflector = new Reflector(new ReflectionCapabilities());\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {isPromise} from '../src/util/lang';\n\nimport {Inject, Injectable, InjectionToken, Optional} from './di';\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nexport const APP_INITIALIZER = new InjectionToken<Array<() => void>>('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n * \n * \\@experimental\n */\nexport class ApplicationInitStatus {\nprivate resolve: Function;\nprivate reject: Function;\nprivate initialized = false;\nprivate _donePromise: Promise<any>;\nprivate _done = false;\n/**\n * @param {?} appInits\n */\nconstructor(\nprivate appInits: (() => any)[]) {\n    this._donePromise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n/**\n * \\@internal\n * @return {?}\n */\nrunInitializers() {\n    if (this.initialized) {\n      return;\n    }\n\n    const /** @type {?} */ asyncInitPromises: Promise<any>[] = [];\n\n    const /** @type {?} */ complete = () => {\n      this._done = true;\n      this.resolve();\n    };\n\n    if (this.appInits) {\n      for (let /** @type {?} */ i = 0; i < this.appInits.length; i++) {\n        const /** @type {?} */ initResult = this.appInits[i]();\n        if (isPromise(initResult)) {\n          asyncInitPromises.push(initResult);\n        }\n      }\n    }\n\n    Promise.all(asyncInitPromises).then(() => { complete(); }).catch(e => { this.reject(e); });\n\n    if (asyncInitPromises.length === 0) {\n      complete();\n    }\n    this.initialized = true;\n  }\n/**\n * @return {?}\n */\nget done(): boolean { return this._done; }\n/**\n * @return {?}\n */\nget donePromise(): Promise<any> { return this._donePromise; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER, ] }, { type: Optional }, ]},\n];\n}\n\nfunction ApplicationInitStatus_tsickle_Closure_declarations() {\n/** @type {?} */\nApplicationInitStatus.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nApplicationInitStatus.ctorParameters;\n/** @type {?} */\nApplicationInitStatus.prototype.resolve;\n/** @type {?} */\nApplicationInitStatus.prototype.reject;\n/** @type {?} */\nApplicationInitStatus.prototype.initialized;\n/** @type {?} */\nApplicationInitStatus.prototype._donePromise;\n/** @type {?} */\nApplicationInitStatus.prototype._done;\n/** @type {?} */\nApplicationInitStatus.prototype.appInits;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken} from './di';\nimport {ComponentRef} from './linker/component_factory';\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated} is being used.\n * \n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n */\nexport const APP_ID = new InjectionToken<string>('AppId');\n/**\n * @return {?}\n */\nexport function _appIdRandomProviderFactory() {\n  return `${_randomChar()}${_randomChar()}${_randomChar()}`;\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n */\nexport const APP_ID_RANDOM_PROVIDER = {\n  provide: APP_ID,\n  useFactory: _appIdRandomProviderFactory,\n  deps: <any[]>[],\n};\n/**\n * @return {?}\n */\nfunction _randomChar(): string {\n  return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n */\nexport const PLATFORM_INITIALIZER = new InjectionToken<Array<() => void>>('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * \\@experimental\n */\nexport const PLATFORM_ID = new InjectionToken<Object>('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n * \n * `(componentRef: ComponentRef) => void`.\n * \n * \\@experimental\n */\nexport const APP_BOOTSTRAP_LISTENER =\n    new InjectionToken<Array<(compRef: ComponentRef<any>) => void>>('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * \\@experimental\n */\nexport const PACKAGE_ROOT_URL = new InjectionToken<string>('Application Packages Root URL');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable} from './di';\nexport class Console {\n/**\n * @param {?} message\n * @return {?}\n */\nlog(message: string): void {\n    // tslint:disable-next-line:no-console\n    console.log(message);\n  }\n/**\n * @param {?} message\n * @return {?}\n */\nwarn(message: string): void {\n    // tslint:disable-next-line:no-console\n    console.warn(message);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Console_tsickle_Closure_declarations() {\n/** @type {?} */\nConsole.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nConsole.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable, InjectionToken} from '../di';\nimport {MissingTranslationStrategy} from '../i18n/tokens';\nimport {ViewEncapsulation} from '../metadata';\nimport {Type} from '../type';\n\nimport {ComponentFactory} from './component_factory';\nimport {NgModuleFactory} from './ng_module_factory';\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n * \n * \\@experimental\n */\nexport class ModuleWithComponentFactories<T> {\n/**\n * @param {?} ngModuleFactory\n * @param {?} componentFactories\n */\nconstructor(\npublic ngModuleFactory: NgModuleFactory<T>,\npublic componentFactories: ComponentFactory<any>[]) {}\n}\n\nfunction ModuleWithComponentFactories_tsickle_Closure_declarations() {\n/** @type {?} */\nModuleWithComponentFactories.prototype.ngModuleFactory;\n/** @type {?} */\nModuleWithComponentFactories.prototype.componentFactories;\n}\n\n/**\n * @return {?}\n */\nfunction _throwError() {\n  throw new Error(`Runtime compiler is not loaded`);\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n * \n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nexport class Compiler {\n/**\n * Compiles the given NgModule and all of its components. All templates of the components listed\n * in `entryComponents` have to be inlined.\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> { throw _throwError(); }\n/**\n * Compiles the given NgModule and all of its components\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> { throw _throwError(); }\n/**\n * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    throw _throwError();\n  }\n/**\n * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    throw _throwError();\n  }\n/**\n * Exposes the CSS-style selectors that have been used in `ngContent` directives within\n * the template of the given component.\n * This is used by the `upgrade` library to compile the appropriate transclude content\n * in the AngularJS wrapper component.\n * \n * @deprecated since v4. Use ComponentFactory.ngContentSelectors instead.\n * @param {?} component\n * @return {?}\n */\ngetNgContentSelectors(component: Type<any>): string[] { throw _throwError(); }\n/**\n * Clears all caches.\n * @return {?}\n */\nclearCache(): void {}\n/**\n * Clears the cache for the given component/ngModule.\n * @param {?} type\n * @return {?}\n */\nclearCacheFor(type: Type<any>) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Compiler_tsickle_Closure_declarations() {\n/** @type {?} */\nCompiler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCompiler.ctorParameters;\n}\n\n\n/**\n * Options for creating a compiler\n *\n * @experimental\n */\nexport type CompilerOptions = {\n  /**\n   * @deprecated since v4 this option has no effect anymore.\n   */\n  useDebug?: boolean,\n  useJit?: boolean,\n  defaultEncapsulation?: ViewEncapsulation,\n  providers?: any[],\n  missingTranslation?: MissingTranslationStrategy,\n  // Whether to support the `<template>` tag and the `template` attribute to define angular\n  // templates. They have been deprecated in 4.x, `<ng-template>` should be used instead.\n  enableLegacyTemplate?: boolean,\n  preserveWhitespaces?: boolean,\n};\n/**\n * Token to provide CompilerOptions in the platform injector.\n * \n * \\@experimental\n */\nexport const COMPILER_OPTIONS = new InjectionToken<CompilerOptions[]>('compilerOptions');\n/**\n * A factory for creating a Compiler\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class CompilerFactory {\n/**\n * @abstract\n * @param {?=} options\n * @return {?}\n */\ncreateCompiler(options?: CompilerOptions[]) {}\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\n\nimport {ElementRef} from './element_ref';\nimport {NgModuleRef} from './ng_module_factory';\nimport {ViewRef} from './view_ref';\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n * \n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nexport abstract class ComponentRef<C> {\n/**\n * Location of the Host Element of this Component Instance.\n * @abstract\n * @return {?}\n */\nlocation() {}\n/**\n * The injector on which the component instance exists.\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * The instance of the Component.\n * @abstract\n * @return {?}\n */\ninstance() {}\n/**\n * The {\\@link ViewRef} of the Host View of this Component instance.\n * @abstract\n * @return {?}\n */\nhostView() {}\n/**\n * The {\\@link ChangeDetectorRef} of the Component instance.\n * @abstract\n * @return {?}\n */\nchangeDetectorRef() {}\n/**\n * The component type.\n * @abstract\n * @return {?}\n */\ncomponentType() {}\n/**\n * Destroys the component instance and all of the data structures associated with it.\n * @abstract\n * @return {?}\n */\ndestroy() {}\n/**\n * Allows to register a callback that will be called when the component is destroyed.\n * @abstract\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function) {}\n}\n/**\n * \\@stable\n * @abstract\n */\nexport abstract class ComponentFactory<C> {\n/**\n * @abstract\n * @return {?}\n */\nselector() {}\n/**\n * @abstract\n * @return {?}\n */\ncomponentType() {}\n/**\n * selector for all <ng-content> elements in the component.\n * @abstract\n * @return {?}\n */\nngContentSelectors() {}\n/**\n * the inputs of the component.\n * @abstract\n * @return {?}\n */\ninputs() {}\n/**\n * the outputs of the component.\n * @abstract\n * @return {?}\n */\noutputs() {}\n/**\n * Creates a new component.\n * @abstract\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @param {?=} ngModule\n * @return {?}\n */\ncreate(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {global} from '../util';\n\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * @experimental\n */\nexport interface WtfScopeFn { (arg0?: any, arg1?: any): any; }\n\ninterface WTF {\n  trace: Trace;\n}\n\ninterface Trace {\n  events: Events;\n  leaveScope(scope: Scope, returnValue: any): any /** TODO #9100 */;\n  beginTimeRange(rangeType: string, action: string): Range;\n  endTimeRange(range: Range): any /** TODO #9100 */;\n}\n\nexport interface Range {}\n\ninterface Events {\n  createScope(signature: string, flags: any): Scope;\n}\n\nexport interface Scope { (...args: any[] /** TODO #9100 */): any; }\n\nlet /** @type {?} */ trace: Trace;\nlet /** @type {?} */ events: Events;\n/**\n * @return {?}\n */\nexport function detectWTF(): boolean {\n  const /** @type {?} */ wtf: WTF = ( /** @type {?} */((global as any)) /** TODO #9100 */)['wtf'];\n  if (wtf) {\n    trace = wtf['trace'];\n    if (trace) {\n      events = trace['events'];\n      return true;\n    }\n  }\n  return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nexport function createScope(signature: string, flags: any = null): any {\n  return events.createScope(signature, flags);\n}\n\nexport function leave<T>(scope: Scope): void;\nexport function leave<T>(scope: Scope, returnValue?: T): T;\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nexport function leave<T>(scope: Scope, returnValue?: any): any {\n  trace.leaveScope(scope, returnValue);\n  return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nexport function startTimeRange(rangeType: string, action: string): Range {\n  return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nexport function endTimeRange(range: Range): void {\n  trace.endTimeRange(range);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\n\nimport {ComponentFactoryResolver} from './component_factory_resolver';\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n * \n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class NgModuleRef<T> {\n/**\n * The injector that contains all of the providers of the NgModule.\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * The ComponentFactoryResolver to get hold of the ComponentFactories\n * declared in the `entryComponents` property of the module.\n * @abstract\n * @return {?}\n */\ncomponentFactoryResolver() {}\n/**\n * The NgModule instance.\n * @abstract\n * @return {?}\n */\ninstance() {}\n/**\n * Destroys the module instance and all of the data structures associated with it.\n * @abstract\n * @return {?}\n */\ndestroy() {}\n/**\n * Allows to register a callback that will be called when the module is destroyed.\n * @abstract\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: () => void) {}\n}\n\nexport interface InternalNgModuleRef<T> extends NgModuleRef<T> {\n  // Note: we are using the prefix _ as NgModuleData is an NgModuleRef and therefore directly\n  // exposed to the user.\n  _bootstrapComponents: Type<any>[];\n}\n/**\n * \\@experimental\n * @abstract\n */\nexport abstract class NgModuleFactory<T> {\n/**\n * @abstract\n * @return {?}\n */\nmoduleType() {}\n/**\n * @abstract\n * @param {?} parentInjector\n * @return {?}\n */\ncreate(parentInjector: Injector|null) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Subject} from 'rxjs/Subject';\n/**\n * Use by directives and components to emit custom Events.\n * \n * ### Examples\n * \n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n * \n * ```\n * \\@Component({ \n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n * \n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n * \n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n * \n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n * \n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n * \n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nexport class EventEmitter<T> extends Subject<T> {\n  // TODO: mark this as internal once all the facades are gone\n  // we can't mark it as internal now because EventEmitter exported via @angular/core would not\n  // contain this property making it incompatible with all the code that uses EventEmitter via\n  // facades, which are local to the code and do not have this property stripped.\n  // tslint:disable-next-line\n  __isAsync: boolean;\n/**\n * Creates an instance of {\\@link EventEmitter}, which depending on `isAsync`,\n * delivers events synchronously or asynchronously.\n * \n * @param {?=} isAsync By default, events are delivered synchronously (default value: `false`).\n * Set to `true` for asynchronous event delivery.\n */\nconstructor(isAsync: boolean = false) {\n    super();\n    this.__isAsync = isAsync;\n  }\n/**\n * @param {?=} value\n * @return {?}\n */\nemit(value?: T) { super.next(value); }\n/**\n * @param {?=} generatorOrNext\n * @param {?=} error\n * @param {?=} complete\n * @return {?}\n */\nsubscribe(generatorOrNext?: any, error?: any, complete?: any): any {\n    let /** @type {?} */ schedulerFn: (t: any) => any;\n    let /** @type {?} */ errorFn = (err: any): any => null;\n    let /** @type {?} */ completeFn = (): any => null;\n\n    if (generatorOrNext && typeof generatorOrNext === 'object') {\n      schedulerFn = this.__isAsync ? (value: any) => {\n        setTimeout(() => generatorOrNext.next(value));\n      } : (value: any) => { generatorOrNext.next(value); };\n\n      if (generatorOrNext.error) {\n        errorFn = this.__isAsync ? (err) => { setTimeout(() => generatorOrNext.error(err)); } :\n                                   (err) => { generatorOrNext.error(err); };\n      }\n\n      if (generatorOrNext.complete) {\n        completeFn = this.__isAsync ? () => { setTimeout(() => generatorOrNext.complete()); } :\n                                      () => { generatorOrNext.complete(); };\n      }\n    } else {\n      schedulerFn = this.__isAsync ? (value: any) => { setTimeout(() => generatorOrNext(value)); } :\n                                     (value: any) => { generatorOrNext(value); };\n\n      if (error) {\n        errorFn =\n            this.__isAsync ? (err) => { setTimeout(() => error(err)); } : (err) => { error(err); };\n      }\n\n      if (complete) {\n        completeFn =\n            this.__isAsync ? () => { setTimeout(() => complete()); } : () => { complete(); };\n      }\n    }\n\n    return super.subscribe(schedulerFn, errorFn, completeFn);\n  }\n}\n\nfunction EventEmitter_tsickle_Closure_declarations() {\n/** @type {?} */\nEventEmitter.prototype.__isAsync;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken, Injector} from '../di';\nimport {ViewEncapsulation} from '../metadata/view';\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nexport class RenderComponentType {\n/**\n * @param {?} id\n * @param {?} templateUrl\n * @param {?} slotCount\n * @param {?} encapsulation\n * @param {?} styles\n * @param {?} animations\n */\nconstructor(\npublic id: string,\npublic templateUrl: string,\npublic slotCount: number,\npublic encapsulation: ViewEncapsulation,\npublic styles: Array<string|any[]>,\npublic animations: any) {}\n}\n\nfunction RenderComponentType_tsickle_Closure_declarations() {\n/** @type {?} */\nRenderComponentType.prototype.id;\n/** @type {?} */\nRenderComponentType.prototype.templateUrl;\n/** @type {?} */\nRenderComponentType.prototype.slotCount;\n/** @type {?} */\nRenderComponentType.prototype.encapsulation;\n/** @type {?} */\nRenderComponentType.prototype.styles;\n/** @type {?} */\nRenderComponentType.prototype.animations;\n}\n\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nexport abstract class RenderDebugInfo {\n/**\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * @abstract\n * @return {?}\n */\ncomponent() {}\n/**\n * @abstract\n * @return {?}\n */\nproviderTokens() {}\n/**\n * @abstract\n * @return {?}\n */\nreferences() {}\n/**\n * @abstract\n * @return {?}\n */\ncontext() {}\n/**\n * @abstract\n * @return {?}\n */\nsource() {}\n}\n\n/**\n * @deprecated Use the `Renderer2` instead.\n */\nexport interface DirectRenderer {\n  remove(node: any): void;\n  appendChild(node: any, parent: any): void;\n  insertBefore(node: any, refNode: any): void;\n  nextSibling(node: any): any;\n  parentElement(node: any): any;\n}\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nexport abstract class Renderer {\n/**\n * @abstract\n * @param {?} selectorOrNode\n * @param {?=} debugInfo\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|any, debugInfo?: RenderDebugInfo) {}\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?} name\n * @param {?=} debugInfo\n * @return {?}\n */\ncreateElement(parentElement: any, name: string, debugInfo?: RenderDebugInfo) {}\n/**\n * @abstract\n * @param {?} hostElement\n * @return {?}\n */\ncreateViewRoot(hostElement: any) {}\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?=} debugInfo\n * @return {?}\n */\ncreateTemplateAnchor(parentElement: any, debugInfo?: RenderDebugInfo) {}\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?} value\n * @param {?=} debugInfo\n * @return {?}\n */\ncreateText(parentElement: any, value: string, debugInfo?: RenderDebugInfo) {}\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?} nodes\n * @return {?}\n */\nprojectNodes(parentElement: any, nodes: any[]) {}\n/**\n * @abstract\n * @param {?} node\n * @param {?} viewRootNodes\n * @return {?}\n */\nattachViewAfter(node: any, viewRootNodes: any[]) {}\n/**\n * @abstract\n * @param {?} viewRootNodes\n * @return {?}\n */\ndetachView(viewRootNodes: any[]) {}\n/**\n * @abstract\n * @param {?} hostElement\n * @param {?} viewAllNodes\n * @return {?}\n */\ndestroyView(hostElement: any, viewAllNodes: any[]) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlisten(renderElement: any, name: string, callback: Function) {}\n/**\n * @abstract\n * @param {?} target\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlistenGlobal(target: string, name: string, callback: Function) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetElementProperty(renderElement: any, propertyName: string, propertyValue: any) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} attributeName\n * @param {?} attributeValue\n * @return {?}\n */\nsetElementAttribute(renderElement: any, attributeName: string, attributeValue: string) {}\n/**\n * Used only in debug mode to serialize property changes to dom nodes as attributes.\n * @abstract\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetBindingDebugInfo(renderElement: any, propertyName: string, propertyValue: string) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nsetElementClass(renderElement: any, className: string, isAdd: boolean) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} styleName\n * @param {?} styleValue\n * @return {?}\n */\nsetElementStyle(renderElement: any, styleName: string, styleValue: string) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} methodName\n * @param {?=} args\n * @return {?}\n */\ninvokeElementMethod(renderElement: any, methodName: string, args?: any[]) {}\n/**\n * @abstract\n * @param {?} renderNode\n * @param {?} text\n * @return {?}\n */\nsetText(renderNode: any, text: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} startingStyles\n * @param {?} keyframes\n * @param {?} duration\n * @param {?} delay\n * @param {?} easing\n * @param {?=} previousPlayers\n * @return {?}\n */\nanimate(\n      element: any, startingStyles: any, keyframes: any[], duration: number, delay: number,\n      easing: string, previousPlayers?: any[]) {}\n}\n\nexport const /** @type {?} */ Renderer2Interceptor = new InjectionToken<Renderer2[]>('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n * \n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty} or {\\@link\n * Renderer#setElementAttribute}\n * respectively.\n * \n * If you are implementing a custom renderer, you must implement this interface.\n * \n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n * \n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nexport abstract class RootRenderer {\n/**\n * @abstract\n * @param {?} componentType\n * @return {?}\n */\nrenderComponent(componentType: RenderComponentType) {}\n}\n\n/**\n * @experimental\n */\nexport interface RendererType2 {\n  id: string;\n  encapsulation: ViewEncapsulation;\n  styles: (string|any[])[];\n  data: {[kind: string]: any};\n}\n/**\n * \\@experimental\n * @abstract\n */\nexport abstract class RendererFactory2 {\n/**\n * @abstract\n * @param {?} hostElement\n * @param {?} type\n * @return {?}\n */\ncreateRenderer(hostElement: any, type: RendererType2|null) {}\n/**\n * @abstract\n * @return {?}\n */\nbegin?() {}\n/**\n * @abstract\n * @return {?}\n */\nend?() {}\n/**\n * @abstract\n * @return {?}\n */\nwhenRenderingDone?() {}\n}\nexport type RendererStyleFlags2 = number;\nexport let RendererStyleFlags2: any = {};\nRendererStyleFlags2.Important = 1;\nRendererStyleFlags2.DashCase = 2;\nRendererStyleFlags2[RendererStyleFlags2.Important] = \"Important\";\nRendererStyleFlags2[RendererStyleFlags2.DashCase] = \"DashCase\";\n\n/**\n * \\@experimental\n * @abstract\n */\nexport abstract class Renderer2 {\n/**\n * This field can be used to store arbitrary data on this renderer instance.\n * This is useful for renderers that delegate to other renderers.\n * @abstract\n * @return {?}\n */\ndata() {}\n/**\n * @abstract\n * @return {?}\n */\ndestroy() {}\n/**\n * @abstract\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\ncreateElement(name: string, namespace?: string|null) {}\n/**\n * @abstract\n * @param {?} value\n * @return {?}\n */\ncreateComment(value: string) {}\n/**\n * @abstract\n * @param {?} value\n * @return {?}\n */\ncreateText(value: string) {}\n/**\n * This property is allowed to be null / undefined,\n * in which case the view engine won't call it.\n * This is used as a performance optimization for production mode.\n */\ndestroyNode: ((node: any) => void)|null;\n/**\n * @abstract\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nappendChild(parent: any, newChild: any) {}\n/**\n * @abstract\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\ninsertBefore(parent: any, newChild: any, refChild: any) {}\n/**\n * @abstract\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nremoveChild(parent: any, oldChild: any) {}\n/**\n * @abstract\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|any) {}\n/**\n * Attention: On WebWorkers, this will always return a value,\n * as we are asking for a result synchronously. I.e.\n * the caller can't rely on checking whether this is null or not.\n * @abstract\n * @param {?} node\n * @return {?}\n */\nparentNode(node: any) {}\n/**\n * Attention: On WebWorkers, this will always return a value,\n * as we are asking for a result synchronously. I.e.\n * the caller can't rely on checking whether this is null or not.\n * @abstract\n * @param {?} node\n * @return {?}\n */\nnextSibling(node: any) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @param {?=} namespace\n * @return {?}\n */\nsetAttribute(el: any, name: string, value: string, namespace?: string|null) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nremoveAttribute(el: any, name: string, namespace?: string|null) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\naddClass(el: any, name: string) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nremoveClass(el: any, name: string) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} style\n * @param {?} value\n * @param {?=} flags\n * @return {?}\n */\nsetStyle(el: any, style: string, value: any, flags?: RendererStyleFlags2) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} style\n * @param {?=} flags\n * @return {?}\n */\nremoveStyle(el: any, style: string, flags?: RendererStyleFlags2) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: any, name: string, value: any) {}\n/**\n * @abstract\n * @param {?} node\n * @param {?} value\n * @return {?}\n */\nsetValue(node: any, value: string) {}\n/**\n * @abstract\n * @param {?} target\n * @param {?} eventName\n * @param {?} callback\n * @return {?}\n */\nlisten(\n      target: 'window'|'document'|'body'|any, eventName: string,\n      callback: (event: any) => boolean | void) {}\n}\n\nfunction Renderer2_tsickle_Closure_declarations() {\n/**\n * This property is allowed to be null / undefined,\n * in which case the view engine won't call it.\n * This is used as a performance optimization for production mode.\n * @type {?}\n */\nRenderer2.prototype.destroyNode;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ElementRef} from './element_ref';\nimport {EmbeddedViewRef} from './view_ref';\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n * \n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n * \n * To instantiate Embedded Views based on a Template, use\n * {\\@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n * View Container.\n * \\@stable\n * @abstract\n */\nexport abstract class TemplateRef<C> {\n/**\n * @abstract\n * @return {?}\n */\nelementRef() {}\n/**\n * @abstract\n * @param {?} context\n * @return {?}\n */\ncreateEmbeddedView(context: C) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector} from '../di/injector';\nimport {ComponentFactory, ComponentRef} from './component_factory';\nimport {ElementRef} from './element_ref';\nimport {NgModuleRef} from './ng_module_factory';\nimport {TemplateRef} from './template_ref';\nimport {EmbeddedViewRef, ViewRef} from './view_ref';\n/**\n * Represents a container where one or more Views can be attached.\n * \n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n * \n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n * \n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n * \n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nexport abstract class ViewContainerRef {\n/**\n * Anchor element that specifies the location of this container in the containing View.\n * <!-- TODO: rename to anchorElement -->\n * @abstract\n * @return {?}\n */\nelement() {}\n/**\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * @abstract\n * @return {?}\n */\nparentInjector() {}\n/**\n * Destroys all Views in this container.\n * @abstract\n * @return {?}\n */\nclear() {}\n/**\n * Returns the {\\@link ViewRef} for the View located in this container at the specified index.\n * @abstract\n * @param {?} index\n * @return {?}\n */\nget(index: number) {}\n/**\n * Returns the number of Views currently attached to this container.\n * @abstract\n * @return {?}\n */\nlength() {}\n/**\n * Instantiates an Embedded View based on the {\\@link TemplateRef `templateRef`} and inserts it\n * into this container at the specified `index`.\n * \n * If `index` is not specified, the new View will be inserted as the last View in the container.\n * \n * Returns the {\\@link ViewRef} for the newly created View.\n * @abstract\n * @template C\n * @param {?} templateRef\n * @param {?=} context\n * @param {?=} index\n * @return {?}\n */\ncreateEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number) {}\n/**\n * Instantiates a single {\\@link Component} and inserts its Host View into this container at the\n * specified `index`.\n * \n * The component is instantiated using its {\\@link ComponentFactory} which can be\n * obtained via {\\@link ComponentFactoryResolver#resolveComponentFactory}.\n * \n * If `index` is not specified, the new View will be inserted as the last View in the container.\n * \n * You can optionally specify the {\\@link Injector} that will be used as parent for the Component.\n * \n * Returns the {\\@link ComponentRef} of the Host View created for the newly instantiated Component.\n * @abstract\n * @template C\n * @param {?} componentFactory\n * @param {?=} index\n * @param {?=} injector\n * @param {?=} projectableNodes\n * @param {?=} ngModule\n * @return {?}\n */\ncreateComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][], ngModule?: NgModuleRef<any>) {}\n/**\n * Inserts a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n * \n * If `index` is not specified, the new View will be inserted as the last View in the container.\n * \n * Returns the inserted {\\@link ViewRef}.\n * @abstract\n * @param {?} viewRef\n * @param {?=} index\n * @return {?}\n */\ninsert(viewRef: ViewRef, index?: number) {}\n/**\n * Moves a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n * \n * Returns the inserted {\\@link ViewRef}.\n * @abstract\n * @param {?} viewRef\n * @param {?} currentIndex\n * @return {?}\n */\nmove(viewRef: ViewRef, currentIndex: number) {}\n/**\n * Returns the index of the View, specified via {\\@link ViewRef}, within the current container or\n * `-1` if this container doesn't contain the View.\n * @abstract\n * @param {?} viewRef\n * @return {?}\n */\nindexOf(viewRef: ViewRef) {}\n/**\n * Destroys a View attached to this container at the specified `index`.\n * \n * If `index` is not specified, the last View in the container will be removed.\n * @abstract\n * @param {?=} index\n * @return {?}\n */\nremove(index?: number) {}\n/**\n * Use along with {\\@link #insert} to move a View within the current container.\n * \n * If the `index` param is omitted, the last {\\@link ViewRef} is detached.\n * @abstract\n * @param {?=} index\n * @return {?}\n */\ndetach(index?: number) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef} from '../change_detection/change_detector_ref';\n/**\n * \\@stable\n * @abstract\n */\nexport abstract class ViewRef extends ChangeDetectorRef {\n/**\n * Destroys the view and all of the data structures associated with it.\n * @abstract\n * @return {?}\n */\ndestroy() {}\n/**\n * @abstract\n * @return {?}\n */\ndestroyed() {}\n/**\n * @abstract\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function) {}\n}\n/**\n * Represents an Angular View.\n * \n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n * \n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n * \n * ### Example\n * \n * Given this template...\n * \n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n * \n * We have two {\\@link TemplateRef}s:\n * \n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n * \n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n * \n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n * \n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n * \n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nexport abstract class EmbeddedViewRef<C> extends ViewRef {\n/**\n * @abstract\n * @return {?}\n */\ncontext() {}\n/**\n * @abstract\n * @return {?}\n */\nrootNodes() {}\n}\n\nexport interface InternalViewRef extends ViewRef {\n  detachFromAppRef(): void;\n  attachToAppRef(appRef: ApplicationRef): void;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Optional, Provider, SkipSelf} from '../../di';\nimport {ChangeDetectorRef} from '../change_detector_ref';\n\n/**\n * A type describing supported iterable types.\n *\n * @stable\n */\nexport type NgIterable<T> = Array<T>| Iterable<T>;\n\n/**\n * A strategy for tracking changes over time to an iterable. Used by {@link NgFor} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * @stable\n */\nexport interface IterableDiffer<V> {\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: NgIterable<V>): IterableChanges<V>|null;\n}\n\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * @stable\n */\nexport interface IterableChanges<V> {\n  /**\n   * Iterate over all changes. `IterableChangeRecord` will contain information about changes\n   * to each item.\n   */\n  forEachItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /**\n   * Iterate over a set of operations which when applied to the original `Iterable` will produce the\n   * new `Iterable`.\n   *\n   * NOTE: These are not necessarily the actual operations which were applied to the original\n   * `Iterable`, rather these are a set of computed operations which may not be the same as the\n   * ones applied.\n   *\n   * @param record A change which needs to be applied\n   * @param previousIndex The `IterableChangeRecord#previousIndex` of the `record` refers to the\n   *        original `Iterable` location, where as `previousIndex` refers to the transient location\n   *        of the item, after applying the operations up to this point.\n   * @param currentIndex The `IterableChangeRecord#currentIndex` of the `record` refers to the\n   *        original `Iterable` location, where as `currentIndex` refers to the transient location\n   *        of the item, after applying the operations up to this point.\n   */\n  forEachOperation(\n      fn: (record: IterableChangeRecord<V>, previousIndex: number, currentIndex: number) => void):\n      void;\n\n  /**\n   * Iterate over changes in the order of original `Iterable` showing where the original items\n   * have moved.\n   */\n  forEachPreviousItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all added items. */\n  forEachAddedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all moved items. */\n  forEachMovedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all removed items. */\n  forEachRemovedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all items which had their identity (as computed by the `trackByFn`) changed. */\n  forEachIdentityChange(fn: (record: IterableChangeRecord<V>) => void): void;\n}\n\n/**\n * Record representing the item change information.\n *\n * @stable\n */\nexport interface IterableChangeRecord<V> {\n  /** Current index of the item in `Iterable` or null if removed. */\n  readonly currentIndex: number|null;\n\n  /** Previous index of the item in `Iterable` or null if added. */\n  readonly previousIndex: number|null;\n\n  /** The item. */\n  readonly item: V;\n\n  /** Track by identity as computed by the `trackByFn`. */\n  readonly trackById: any;\n}\n\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n */\nexport interface CollectionChangeRecord<V> extends IterableChangeRecord<V> {}\n\n\n/**\n * Nolonger used.\n *\n * @deprecated v4.0.0 - Use TrackByFunction instead\n */\nexport interface TrackByFn { (index: number, item: any): any; }\n\n/**\n * An optional function passed into {@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * @stable\n */\nexport interface TrackByFunction<T> { (index: number, item: T): any; }\n\n/**\n * Provides a factory for {@link IterableDiffer}.\n *\n * @stable\n */\nexport interface IterableDifferFactory {\n  supports(objects: any): boolean;\n  create<V>(trackByFn?: TrackByFunction<V>): IterableDiffer<V>;\n\n  /**\n   * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n   */\n  create<V>(_cdr?: ChangeDetectorRef|TrackByFunction<V>, trackByFn?: TrackByFunction<V>):\n      IterableDiffer<V>;\n}\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nexport class IterableDiffers {\n/**\n * @deprecated v4.0.0 - Should be private\n */\nfactories: IterableDifferFactory[];\n/**\n * @param {?} factories\n */\nconstructor(factories: IterableDifferFactory[]) { this.factories = factories; }\n/**\n * @param {?} factories\n * @param {?=} parent\n * @return {?}\n */\nstatic create(factories: IterableDifferFactory[], parent?: IterableDiffers): IterableDiffers {\n    if (parent != null) {\n      const /** @type {?} */ copied = parent.factories.slice();\n      factories = factories.concat(copied);\n      return new IterableDiffers(factories);\n    } else {\n      return new IterableDiffers(factories);\n    }\n  }\n/**\n * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n * {\\@link IterableDiffers} instance.\n * \n * The following example shows how to extend an existing list of factories,\n * which will only be applied to the injector for this component and its children.\n * This step is all that's required to make a new {\\@link IterableDiffer} available.\n * \n * ### Example\n * \n * ```\n * \\@Component({ \n *   viewProviders: [\n *     IterableDiffers.extend([new ImmutableListDiffer()])\n *   ]\n * })\n * ```\n * @param {?} factories\n * @return {?}\n */\nstatic extend(factories: IterableDifferFactory[]): Provider {\n    return {\n      provide: IterableDiffers,\n      useFactory: (parent: IterableDiffers) => {\n        if (!parent) {\n          // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n          // to\n          // bootstrap(), which would override default pipes instead of extending them.\n          throw new Error('Cannot extend IterableDiffers without a parent injector');\n        }\n        return IterableDiffers.create(factories, parent);\n      },\n      // Dependency technically isn't optional, but we can provide a better error message this way.\n      deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n    };\n  }\n/**\n * @param {?} iterable\n * @return {?}\n */\nfind(iterable: any): IterableDifferFactory {\n    const /** @type {?} */ factory = this.factories.find(f => f.supports(iterable));\n    if (factory != null) {\n      return factory;\n    } else {\n      throw new Error(\n          `Cannot find a differ supporting object '${iterable}' of type '${getTypeNameForDebugging(iterable)}'`);\n    }\n  }\n}\n\nfunction IterableDiffers_tsickle_Closure_declarations() {\n/**\n * @deprecated v4.0.0 - Should be private\n * @type {?}\n */\nIterableDiffers.prototype.factories;\n}\n\n/**\n * @param {?} type\n * @return {?}\n */\nexport function getTypeNameForDebugging(type: any): string {\n  return type['name'] || typeof type;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Optional, Provider, SkipSelf} from '../../di';\nimport {ChangeDetectorRef} from '../change_detector_ref';\n\n\n\n/**\n * A differ that tracks changes made to an object over time.\n *\n * @stable\n */\nexport interface KeyValueDiffer<K, V> {\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: Map<K, V>): KeyValueChanges<K, V>;\n\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: {[key: string]: V}): KeyValueChanges<string, V>;\n  // TODO(TS2.1): diff<KP extends string>(this: KeyValueDiffer<KP, V>, object: Record<KP, V>):\n  // KeyValueDiffer<KP, V>;\n}\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * @stable\n */\nexport interface KeyValueChanges<K, V> {\n  /**\n   * Iterate over all changes. `KeyValueChangeRecord` will contain information about changes\n   * to each item.\n   */\n  forEachItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over changes in the order of original Map showing where the original items\n   * have moved.\n   */\n  forEachPreviousItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all keys for which values have changed.\n   */\n  forEachChangedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all added items.\n   */\n  forEachAddedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all removed items.\n   */\n  forEachRemovedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n}\n\n/**\n * Record representing the item change information.\n *\n * @stable\n */\nexport interface KeyValueChangeRecord<K, V> {\n  /**\n   * Current key in the Map.\n   */\n  readonly key: K;\n\n  /**\n   * Current value for the key or `null` if removed.\n   */\n  readonly currentValue: V|null;\n\n  /**\n   * Previous value for the key or `null` if added.\n   */\n  readonly previousValue: V|null;\n}\n\n/**\n * Provides a factory for {@link KeyValueDiffer}.\n *\n * @stable\n */\nexport interface KeyValueDifferFactory {\n  /**\n   * Test to see if the differ knows how to diff this kind of object.\n   */\n  supports(objects: any): boolean;\n\n  /**\n   * Create a `KeyValueDiffer`.\n   */\n  create<K, V>(): KeyValueDiffer<K, V>;\n\n  /**\n   * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n   */\n  create<K, V>(_cdr?: ChangeDetectorRef): KeyValueDiffer<K, V>;\n}\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nexport class KeyValueDiffers {\n/**\n * @deprecated v4.0.0 - Should be private.\n */\nfactories: KeyValueDifferFactory[];\n/**\n * @param {?} factories\n */\nconstructor(factories: KeyValueDifferFactory[]) { this.factories = factories; }\n/**\n * @template S\n * @param {?} factories\n * @param {?=} parent\n * @return {?}\n */\nstatic create<S>(factories: KeyValueDifferFactory[], parent?: KeyValueDiffers): KeyValueDiffers {\n    if (parent) {\n      const /** @type {?} */ copied = parent.factories.slice();\n      factories = factories.concat(copied);\n    }\n    return new KeyValueDiffers(factories);\n  }\n/**\n * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n * {\\@link KeyValueDiffers} instance.\n * \n * The following example shows how to extend an existing list of factories,\n * which will only be applied to the injector for this component and its children.\n * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n * \n * ### Example\n * \n * ```\n * \\@Component({ \n *   viewProviders: [\n *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n *   ]\n * })\n * ```\n * @template S\n * @param {?} factories\n * @return {?}\n */\nstatic extend<S>(factories: KeyValueDifferFactory[]): Provider {\n    return {\n      provide: KeyValueDiffers,\n      useFactory: (parent: KeyValueDiffers) => {\n        if (!parent) {\n          // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n          // to bootstrap(), which would override default pipes instead of extending them.\n          throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n        }\n        return KeyValueDiffers.create(factories, parent);\n      },\n      // Dependency technically isn't optional, but we can provide a better error message this way.\n      deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n    };\n  }\n/**\n * @param {?} kv\n * @return {?}\n */\nfind(kv: any): KeyValueDifferFactory {\n    const /** @type {?} */ factory = this.factories.find(f => f.supports(kv));\n    if (factory) {\n      return factory;\n    }\n    throw new Error(`Cannot find a differ supporting object '${kv}'`);\n  }\n}\n\nfunction KeyValueDiffers_tsickle_Closure_declarations() {\n/**\n * @deprecated v4.0.0 - Should be private.\n * @type {?}\n */\nKeyValueDiffers.prototype.factories;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nimport {DefaultKeyValueDifferFactory} from './differs/default_keyvalue_differ';\nimport {IterableDifferFactory, IterableDiffers} from './differs/iterable_differs';\nimport {KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\n\nexport {SimpleChanges} from '../metadata/lifecycle_hooks';\nexport {SimpleChange, ValueUnwrapper, WrappedValue, devModeEqual} from './change_detection_util';\nexport {ChangeDetectorRef} from './change_detector_ref';\nexport {ChangeDetectionStrategy, ChangeDetectorStatus, isDefaultChangeDetectionStrategy} from './constants';\nexport {DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nexport {DefaultIterableDiffer} from './differs/default_iterable_differ';\nexport {DefaultKeyValueDifferFactory} from './differs/default_keyvalue_differ';\nexport {CollectionChangeRecord, IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, IterableDiffers, NgIterable, TrackByFn, TrackByFunction} from './differs/iterable_differs';\nexport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\nexport {PipeTransform} from './pipe_transform';\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nconst keyValDiff: KeyValueDifferFactory[] = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nconst iterableDiff: IterableDifferFactory[] = [new DefaultIterableDifferFactory()];\n\nexport const /** @type {?} */ defaultIterableDiffers = new IterableDiffers(iterableDiff);\n\nexport const /** @type {?} */ defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken} from '../di/injection_token';\n/**\n * \\@experimental i18n support is experimental.\n */\nexport const LOCALE_ID = new InjectionToken<string>('LocaleId');\n/**\n * \\@experimental i18n support is experimental.\n */\nexport const TRANSLATIONS = new InjectionToken<string>('Translations');\n/**\n * \\@experimental i18n support is experimental.\n */\nexport const TRANSLATIONS_FORMAT = new InjectionToken<string>('TranslationsFormat');\nexport type MissingTranslationStrategy = number;\nexport let MissingTranslationStrategy: any = {};\nMissingTranslationStrategy.Error = 0;\nMissingTranslationStrategy.Warning = 1;\nMissingTranslationStrategy.Ignore = 2;\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n\n","\nexport type SecurityContext = number;\nexport let SecurityContext: any = {};\nSecurityContext.NONE = 0;\nSecurityContext.HTML = 1;\nSecurityContext.STYLE = 2;\nSecurityContext.SCRIPT = 3;\nSecurityContext.URL = 4;\nSecurityContext.RESOURCE_URL = 5;\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class Sanitizer {\n/**\n * @abstract\n * @param {?} context\n * @param {?} value\n * @return {?}\n */\nsanitize(context: SecurityContext, value: {}|string|null) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di/injector';\nimport {ComponentFactory, ComponentRef} from '../linker/component_factory';\nimport {ComponentFactoryBoundToModule, ComponentFactoryResolver} from '../linker/component_factory_resolver';\nimport {ElementRef} from '../linker/element_ref';\nimport {InternalNgModuleRef, NgModuleRef} from '../linker/ng_module_factory';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {EmbeddedViewRef, InternalViewRef, ViewRef} from '../linker/view_ref';\nimport {Renderer as RendererV1, Renderer2} from '../render/api';\nimport {Type} from '../type';\nimport {stringify} from '../util';\nimport {VERSION} from '../version';\n\nimport {callNgModuleLifecycle, initNgModule, resolveNgModuleDep} from './ng_module';\nimport {DepFlags, ElementData, NgModuleData, NgModuleDefinition, NodeDef, NodeFlags, Services, TemplateData, ViewContainerData, ViewData, ViewDefinitionFactory, ViewState, asElementData, asProviderData, asTextData} from './types';\nimport {markParentViewsForCheck, resolveDefinition, rootRenderNodes, splitNamespace, tokenKey, viewParentEl} from './util';\nimport {attachEmbeddedView, detachEmbeddedView, moveEmbeddedView, renderDetachView} from './view_attach';\n\nconst /** @type {?} */ EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} ngContentSelectors\n * @return {?}\n */\nexport function createComponentFactory(\n    selector: string, componentType: Type<any>, viewDefFactory: ViewDefinitionFactory,\n    inputs: {[propName: string]: string} | null, outputs: {[propName: string]: string},\n    ngContentSelectors: string[]): ComponentFactory<any> {\n  return new ComponentFactory_(\n      selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n/**\n * @param {?} componentFactory\n * @return {?}\n */\nexport function getComponentViewDefinitionFactory(componentFactory: ComponentFactory<any>):\n    ViewDefinitionFactory {\n  return ( /** @type {?} */((componentFactory as ComponentFactory_))).viewDefFactory;\n}\nclass ComponentFactory_ extends ComponentFactory<any> {\n/**\n * \\@internal\n */\nviewDefFactory: ViewDefinitionFactory;\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} _inputs\n * @param {?} _outputs\n * @param {?} ngContentSelectors\n */\nconstructor(\npublic selector: string,\npublic componentType: Type<any>,\n      viewDefFactory: ViewDefinitionFactory,\nprivate _inputs: {[propName: string]: string}|null,\nprivate _outputs: {[propName: string]: string},\npublic ngContentSelectors: string[]) {\n    // Attention: this ctor is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    super();\n    this.viewDefFactory = viewDefFactory;\n  }\n/**\n * @return {?}\n */\nget inputs() {\n    const /** @type {?} */ inputsArr: {propName: string, templateName: string}[] = [];\n    const /** @type {?} */ inputs = /** @type {?} */(( this._inputs));\n    for (let /** @type {?} */ propName in inputs) {\n      const /** @type {?} */ templateName = inputs[propName];\n      inputsArr.push({propName, templateName});\n    }\n    return inputsArr;\n  }\n/**\n * @return {?}\n */\nget outputs() {\n    const /** @type {?} */ outputsArr: {propName: string, templateName: string}[] = [];\n    for (let /** @type {?} */ propName in this._outputs) {\n      const /** @type {?} */ templateName = this._outputs[propName];\n      outputsArr.push({propName, templateName});\n    }\n    return outputsArr;\n  }\n/**\n * Creates a new component.\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @param {?=} ngModule\n * @return {?}\n */\ncreate(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<any> {\n    if (!ngModule) {\n      throw new Error('ngModule should be provided');\n    }\n    const /** @type {?} */ viewDef = resolveDefinition(this.viewDefFactory);\n    const /** @type {?} */ componentNodeIndex = /** @type {?} */(( /** @type {?} */(( viewDef.nodes[0].element)).componentProvider)).nodeIndex;\n    const /** @type {?} */ view = Services.createRootView(\n        injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n    const /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n    if (rootSelectorOrNode) {\n      view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n    }\n\n    return new ComponentRef_(view, new ViewRef_(view), component);\n  }\n}\n\nfunction ComponentFactory__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nComponentFactory_.prototype.viewDefFactory;\n/** @type {?} */\nComponentFactory_.prototype.selector;\n/** @type {?} */\nComponentFactory_.prototype.componentType;\n/** @type {?} */\nComponentFactory_.prototype._inputs;\n/** @type {?} */\nComponentFactory_.prototype._outputs;\n/** @type {?} */\nComponentFactory_.prototype.ngContentSelectors;\n}\n\nclass ComponentRef_ extends ComponentRef<any> {\nprivate _elDef: NodeDef;\n/**\n * @param {?} _view\n * @param {?} _viewRef\n * @param {?} _component\n */\nconstructor(private _view: ViewData,\nprivate _viewRef: ViewRef,\nprivate _component: any) {\n    super();\n    this._elDef = this._view.def.nodes[0];\n  }\n/**\n * @return {?}\n */\nget location(): ElementRef {\n    return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return new Injector_(this._view, this._elDef); }\n/**\n * @return {?}\n */\nget instance(): any { return this._component; }\n/**\n * @return {?}\n */\nget hostView(): ViewRef { return this._viewRef; }\n/**\n * @return {?}\n */\nget changeDetectorRef(): ChangeDetectorRef { return this._viewRef; }\n/**\n * @return {?}\n */\nget componentType(): Type<any> { return /** @type {?} */(( <any>this._component.constructor)); }\n/**\n * @return {?}\n */\ndestroy(): void { this._viewRef.destroy(); }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function): void { this._viewRef.onDestroy(callback); }\n}\n\nfunction ComponentRef__tsickle_Closure_declarations() {\n/** @type {?} */\nComponentRef_.prototype._elDef;\n/** @type {?} */\nComponentRef_.prototype._view;\n/** @type {?} */\nComponentRef_.prototype._viewRef;\n/** @type {?} */\nComponentRef_.prototype._component;\n}\n\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nexport function createViewContainerData(\n    view: ViewData, elDef: NodeDef, elData: ElementData): ViewContainerData {\n  return new ViewContainerRef_(view, elDef, elData);\n}\nclass ViewContainerRef_ implements ViewContainerData {\n/**\n * \\@internal\n */\n_embeddedViews: ViewData[] = [];\n/**\n * @param {?} _view\n * @param {?} _elDef\n * @param {?} _data\n */\nconstructor(private _view: ViewData,\nprivate _elDef: NodeDef,\nprivate _data: ElementData) {}\n/**\n * @return {?}\n */\nget element(): ElementRef { return new ElementRef(this._data.renderElement); }\n/**\n * @return {?}\n */\nget injector(): Injector { return new Injector_(this._view, this._elDef); }\n/**\n * @return {?}\n */\nget parentInjector(): Injector {\n    let /** @type {?} */ view = this._view;\n    let /** @type {?} */ elDef = this._elDef.parent;\n    while (!elDef && view) {\n      elDef = viewParentEl(view);\n      view = /** @type {?} */(( view.parent));\n    }\n\n    return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n  }\n/**\n * @return {?}\n */\nclear(): void {\n    const /** @type {?} */ len = this._embeddedViews.length;\n    for (let /** @type {?} */ i = len - 1; i >= 0; i--) {\n      const /** @type {?} */ view = /** @type {?} */(( detachEmbeddedView(this._data, i)));\n      Services.destroyView(view);\n    }\n  }\n/**\n * @param {?} index\n * @return {?}\n */\nget(index: number): ViewRef|null {\n    const /** @type {?} */ view = this._embeddedViews[index];\n    if (view) {\n      const /** @type {?} */ ref = new ViewRef_(view);\n      ref.attachToViewContainerRef(this);\n      return ref;\n    }\n    return null;\n  }\n/**\n * @return {?}\n */\nget length(): number { return this._embeddedViews.length; }\n/**\n * @template C\n * @param {?} templateRef\n * @param {?=} context\n * @param {?=} index\n * @return {?}\n */\ncreateEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C> {\n    const /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || /** @type {?} */(( <any>{})));\n    this.insert(viewRef, index);\n    return viewRef;\n  }\n/**\n * @template C\n * @param {?} componentFactory\n * @param {?=} index\n * @param {?=} injector\n * @param {?=} projectableNodes\n * @param {?=} ngModuleRef\n * @return {?}\n */\ncreateComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][], ngModuleRef?: NgModuleRef<any>): ComponentRef<C> {\n    const /** @type {?} */ contextInjector = injector || this.parentInjector;\n    if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n      ngModuleRef = contextInjector.get(NgModuleRef);\n    }\n    const /** @type {?} */ componentRef =\n        componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n    this.insert(componentRef.hostView, index);\n    return componentRef;\n  }\n/**\n * @param {?} viewRef\n * @param {?=} index\n * @return {?}\n */\ninsert(viewRef: ViewRef, index?: number): ViewRef {\n    if (viewRef.destroyed) {\n      throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n    }\n    const /** @type {?} */ viewRef_ = /** @type {?} */(( <ViewRef_>viewRef));\n    const /** @type {?} */ viewData = viewRef_._view;\n    attachEmbeddedView(this._view, this._data, index, viewData);\n    viewRef_.attachToViewContainerRef(this);\n    return viewRef;\n  }\n/**\n * @param {?} viewRef\n * @param {?} currentIndex\n * @return {?}\n */\nmove(viewRef: ViewRef_, currentIndex: number): ViewRef {\n    if (viewRef.destroyed) {\n      throw new Error('Cannot move a destroyed View in a ViewContainer!');\n    }\n    const /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n    moveEmbeddedView(this._data, previousIndex, currentIndex);\n    return viewRef;\n  }\n/**\n * @param {?} viewRef\n * @return {?}\n */\nindexOf(viewRef: ViewRef): number {\n    return this._embeddedViews.indexOf(( /** @type {?} */((<ViewRef_>viewRef)))._view);\n  }\n/**\n * @param {?=} index\n * @return {?}\n */\nremove(index?: number): void {\n    const /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n    if (viewData) {\n      Services.destroyView(viewData);\n    }\n  }\n/**\n * @param {?=} index\n * @return {?}\n */\ndetach(index?: number): ViewRef|null {\n    const /** @type {?} */ view = detachEmbeddedView(this._data, index);\n    return view ? new ViewRef_(view) : null;\n  }\n}\n\nfunction ViewContainerRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nViewContainerRef_.prototype._embeddedViews;\n/** @type {?} */\nViewContainerRef_.prototype._view;\n/** @type {?} */\nViewContainerRef_.prototype._elDef;\n/** @type {?} */\nViewContainerRef_.prototype._data;\n}\n\n/**\n * @param {?} view\n * @return {?}\n */\nexport function createChangeDetectorRef(view: ViewData): ChangeDetectorRef {\n  return new ViewRef_(view);\n}\nexport class ViewRef_ implements EmbeddedViewRef<any>, InternalViewRef {\n/**\n * \\@internal\n */\n_view: ViewData;\nprivate _viewContainerRef: ViewContainerRef|null;\nprivate _appRef: ApplicationRef|null;\n/**\n * @param {?} _view\n */\nconstructor(_view: ViewData) {\n    this._view = _view;\n    this._viewContainerRef = null;\n    this._appRef = null;\n  }\n/**\n * @return {?}\n */\nget rootNodes(): any[] { return rootRenderNodes(this._view); }\n/**\n * @return {?}\n */\nget context() { return this._view.context; }\n/**\n * @return {?}\n */\nget destroyed(): boolean { return (this._view.state & ViewState.Destroyed) !== 0; }\n/**\n * @return {?}\n */\nmarkForCheck(): void { markParentViewsForCheck(this._view); }\n/**\n * @return {?}\n */\ndetach(): void { this._view.state &= ~ViewState.Attached; }\n/**\n * @return {?}\n */\ndetectChanges(): void {\n    const /** @type {?} */ fs = this._view.root.rendererFactory;\n    if (fs.begin) {\n      fs.begin();\n    }\n    Services.checkAndUpdateView(this._view);\n    if (fs.end) {\n      fs.end();\n    }\n  }\n/**\n * @return {?}\n */\ncheckNoChanges(): void { Services.checkNoChangesView(this._view); }\n/**\n * @return {?}\n */\nreattach(): void { this._view.state |= ViewState.Attached; }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function) {\n    if (!this._view.disposables) {\n      this._view.disposables = [];\n    }\n    this._view.disposables.push( /** @type {?} */((<any>callback)));\n  }\n/**\n * @return {?}\n */\ndestroy() {\n    if (this._appRef) {\n      this._appRef.detachView(this);\n    } else if (this._viewContainerRef) {\n      this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n    }\n    Services.destroyView(this._view);\n  }\n/**\n * @return {?}\n */\ndetachFromAppRef() {\n    this._appRef = null;\n    renderDetachView(this._view);\n    Services.dirtyParentQueries(this._view);\n  }\n/**\n * @param {?} appRef\n * @return {?}\n */\nattachToAppRef(appRef: ApplicationRef) {\n    if (this._viewContainerRef) {\n      throw new Error('This view is already attached to a ViewContainer!');\n    }\n    this._appRef = appRef;\n  }\n/**\n * @param {?} vcRef\n * @return {?}\n */\nattachToViewContainerRef(vcRef: ViewContainerRef) {\n    if (this._appRef) {\n      throw new Error('This view is already attached directly to the ApplicationRef!');\n    }\n    this._viewContainerRef = vcRef;\n  }\n}\n\nfunction ViewRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nViewRef_.prototype._view;\n/** @type {?} */\nViewRef_.prototype._viewContainerRef;\n/** @type {?} */\nViewRef_.prototype._appRef;\n}\n\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createTemplateData(view: ViewData, def: NodeDef): TemplateData {\n  return new TemplateRef_(view, def);\n}\nclass TemplateRef_ extends TemplateRef<any> implements TemplateData {\n/**\n * \\@internal\n */\n_projectedViews: ViewData[];\n/**\n * @param {?} _parentView\n * @param {?} _def\n */\nconstructor(private _parentView: ViewData,\nprivate _def: NodeDef) { super(); }\n/**\n * @param {?} context\n * @return {?}\n */\ncreateEmbeddedView(context: any): EmbeddedViewRef<any> {\n    return new ViewRef_(Services.createEmbeddedView(\n        this._parentView, this._def, /** @type {?} */(( /** @type {?} */(( this._def.element)).template)), context));\n  }\n/**\n * @return {?}\n */\nget elementRef(): ElementRef {\n    return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n  }\n}\n\nfunction TemplateRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nTemplateRef_.prototype._projectedViews;\n/** @type {?} */\nTemplateRef_.prototype._parentView;\n/** @type {?} */\nTemplateRef_.prototype._def;\n}\n\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nexport function createInjector(view: ViewData, elDef: NodeDef): Injector {\n  return new Injector_(view, elDef);\n}\nclass Injector_ implements Injector {\n/**\n * @param {?} view\n * @param {?} elDef\n */\nconstructor(private view: ViewData,\nprivate elDef: NodeDef|null) {}\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n    const /** @type {?} */ allowPrivateServices =\n        this.elDef ? (this.elDef.flags & NodeFlags.ComponentView) !== 0 : false;\n    return Services.resolveDep(\n        this.view, this.elDef, allowPrivateServices,\n        {flags: DepFlags.None, token, tokenKey: tokenKey(token)}, notFoundValue);\n  }\n}\n\nfunction Injector__tsickle_Closure_declarations() {\n/** @type {?} */\nInjector_.prototype.view;\n/** @type {?} */\nInjector_.prototype.elDef;\n}\n\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function nodeValue(view: ViewData, index: number): any {\n  const /** @type {?} */ def = view.def.nodes[index];\n  if (def.flags & NodeFlags.TypeElement) {\n    const /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n    return /** @type {?} */(( def.element)).template ? elData.template : elData.renderElement;\n  } else if (def.flags & NodeFlags.TypeText) {\n    return asTextData(view, def.nodeIndex).renderText;\n  } else if (def.flags & (NodeFlags.CatProvider | NodeFlags.TypePipe)) {\n    return asProviderData(view, def.nodeIndex).instance;\n  }\n  throw new Error(`Illegal state: read nodeValue for node index ${index}`);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function createRendererV1(view: ViewData): RendererV1 {\n  return new RendererAdapter(view.renderer);\n}\nclass RendererAdapter implements RendererV1 {\n/**\n * @param {?} delegate\n */\nconstructor(private delegate: Renderer2) {}\n/**\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|Element): Element {\n    return this.delegate.selectRootElement(selectorOrNode);\n  }\n/**\n * @param {?} parent\n * @param {?} namespaceAndName\n * @return {?}\n */\ncreateElement(parent: Element|DocumentFragment, namespaceAndName: string): Element {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    const /** @type {?} */ el = this.delegate.createElement(name, ns);\n    if (parent) {\n      this.delegate.appendChild(parent, el);\n    }\n    return el;\n  }\n/**\n * @param {?} hostElement\n * @return {?}\n */\ncreateViewRoot(hostElement: Element): Element|DocumentFragment { return hostElement; }\n/**\n * @param {?} parentElement\n * @return {?}\n */\ncreateTemplateAnchor(parentElement: Element|DocumentFragment): Comment {\n    const /** @type {?} */ comment = this.delegate.createComment('');\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, comment);\n    }\n    return comment;\n  }\n/**\n * @param {?} parentElement\n * @param {?} value\n * @return {?}\n */\ncreateText(parentElement: Element|DocumentFragment, value: string): any {\n    const /** @type {?} */ node = this.delegate.createText(value);\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, node);\n    }\n    return node;\n  }\n/**\n * @param {?} parentElement\n * @param {?} nodes\n * @return {?}\n */\nprojectNodes(parentElement: Element|DocumentFragment, nodes: Node[]) {\n    for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n      this.delegate.appendChild(parentElement, nodes[i]);\n    }\n  }\n/**\n * @param {?} node\n * @param {?} viewRootNodes\n * @return {?}\n */\nattachViewAfter(node: Node, viewRootNodes: Node[]) {\n    const /** @type {?} */ parentElement = this.delegate.parentNode(node);\n    const /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n    for (let /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n      this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n    }\n  }\n/**\n * @param {?} viewRootNodes\n * @return {?}\n */\ndetachView(viewRootNodes: (Element|Text|Comment)[]) {\n    for (let /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n      const /** @type {?} */ node = viewRootNodes[i];\n      const /** @type {?} */ parentElement = this.delegate.parentNode(node);\n      this.delegate.removeChild(parentElement, node);\n    }\n  }\n/**\n * @param {?} hostElement\n * @param {?} viewAllNodes\n * @return {?}\n */\ndestroyView(hostElement: Element|DocumentFragment, viewAllNodes: Node[]) {\n    for (let /** @type {?} */ i = 0; i < viewAllNodes.length; i++) { /** @type {?} */((\n      this.delegate.destroyNode))(viewAllNodes[i]);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlisten(renderElement: any, name: string, callback: Function): Function {\n    return this.delegate.listen(renderElement, name, /** @type {?} */(( <any>callback)));\n  }\n/**\n * @param {?} target\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlistenGlobal(target: string, name: string, callback: Function): Function {\n    return this.delegate.listen(target, name, /** @type {?} */(( <any>callback)));\n  }\n/**\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetElementProperty(\n      renderElement: Element|DocumentFragment, propertyName: string, propertyValue: any): void {\n    this.delegate.setProperty(renderElement, propertyName, propertyValue);\n  }\n/**\n * @param {?} renderElement\n * @param {?} namespaceAndName\n * @param {?} attributeValue\n * @return {?}\n */\nsetElementAttribute(renderElement: Element, namespaceAndName: string, attributeValue: string):\n      void {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    if (attributeValue != null) {\n      this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n    } else {\n      this.delegate.removeAttribute(renderElement, name, ns);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetBindingDebugInfo(renderElement: Element, propertyName: string, propertyValue: string): void {}\n/**\n * @param {?} renderElement\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nsetElementClass(renderElement: Element, className: string, isAdd: boolean): void {\n    if (isAdd) {\n      this.delegate.addClass(renderElement, className);\n    } else {\n      this.delegate.removeClass(renderElement, className);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} styleName\n * @param {?} styleValue\n * @return {?}\n */\nsetElementStyle(renderElement: HTMLElement, styleName: string, styleValue: string): void {\n    if (styleValue != null) {\n      this.delegate.setStyle(renderElement, styleName, styleValue);\n    } else {\n      this.delegate.removeStyle(renderElement, styleName);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} methodName\n * @param {?} args\n * @return {?}\n */\ninvokeElementMethod(renderElement: Element, methodName: string, args: any[]): void {\n    ( /** @type {?} */((renderElement as any)))[methodName].apply(renderElement, args);\n  }\n/**\n * @param {?} renderNode\n * @param {?} text\n * @return {?}\n */\nsetText(renderNode: Text, text: string): void { this.delegate.setValue(renderNode, text); }\n/**\n * @return {?}\n */\nanimate(): any { throw new Error('Renderer.animate is no longer supported!'); }\n}\n\nfunction RendererAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nRendererAdapter.prototype.delegate;\n}\n\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nexport function createNgModuleRef(\n    moduleType: Type<any>, parent: Injector, bootstrapComponents: Type<any>[],\n    def: NgModuleDefinition): NgModuleRef<any> {\n  return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nclass NgModuleRef_ implements NgModuleData, InternalNgModuleRef<any> {\nprivate _destroyListeners: (() => void)[] = [];\nprivate _destroyed: boolean = false;\npublic _providers: any[];\n/**\n * @param {?} _moduleType\n * @param {?} _parent\n * @param {?} _bootstrapComponents\n * @param {?} _def\n */\nconstructor(\nprivate _moduleType: Type<any>,\npublic _parent: Injector,\npublic _bootstrapComponents: Type<any>[],\npublic _def: NgModuleDefinition) {\n    initNgModule(this);\n  }\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n    return resolveNgModuleDep(\n        this, {token: token, tokenKey: tokenKey(token), flags: DepFlags.None}, notFoundValue);\n  }\n/**\n * @return {?}\n */\nget instance() { return this.get(this._moduleType); }\n/**\n * @return {?}\n */\nget componentFactoryResolver() { return this.get(ComponentFactoryResolver); }\n/**\n * @return {?}\n */\nget injector(): Injector { return this; }\n/**\n * @return {?}\n */\ndestroy(): void {\n    if (this._destroyed) {\n      throw new Error(\n          `The ng module ${stringify(this.instance.constructor)} has already been destroyed.`);\n    }\n    this._destroyed = true;\n    callNgModuleLifecycle(this, NodeFlags.OnDestroy);\n    this._destroyListeners.forEach((listener) => listener());\n  }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n}\n\nfunction NgModuleRef__tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleRef_.prototype._destroyListeners;\n/** @type {?} */\nNgModuleRef_.prototype._destroyed;\n/** @type {?} */\nNgModuleRef_.prototype._providers;\n/** @type {?} */\nNgModuleRef_.prototype._moduleType;\n/** @type {?} */\nNgModuleRef_.prototype._parent;\n/** @type {?} */\nNgModuleRef_.prototype._bootstrapComponents;\n/** @type {?} */\nNgModuleRef_.prototype._def;\n}\n\n","/**\n * Angular Component Base Module\n */\nimport { getValue, isUndefined, setValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { EventEmitter } from '@angular/core';\nimport { clearTemplate } from './util';\nvar ComponentBase = /** @class */ (function () {\n    function ComponentBase() {\n    }\n    ComponentBase.prototype.ngOnInit = function () {\n        this.registeredTemplate = {};\n        this.ngBoundedEvents = {};\n        this.tags = this.tags || [];\n        this.complexTemplate = this.complexTemplate || [];\n        this.tagObjects = [];\n        for (var _i = 0, _a = this.tags; _i < _a.length; _i++) {\n            var tag = _a[_i];\n            var tagObject = {\n                instance: getValue('child' + tag.substring(0, 1).toUpperCase() + tag.substring(1), this),\n                name: tag\n            };\n            this.tagObjects.push(tagObject);\n        }\n        var complexTemplates = Object.keys(this);\n        complexTemplates = complexTemplates.filter(function (val) {\n            return /Ref$/i.test(val) && /\\_/i.test(val);\n        });\n        for (var _b = 0, complexTemplates_1 = complexTemplates; _b < complexTemplates_1.length; _b++) {\n            var tempName = complexTemplates_1[_b];\n            var propName = tempName.replace('Ref', '');\n            var val = {};\n            setValue(propName.replace('_', '.'), getValue(propName, this), val);\n            this.setProperties(val, true);\n        }\n    };\n    ComponentBase.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        // Used setTimeout for template binding\n        // Refer Link: https://github.com/angular/angular/issues/6005\n        setTimeout(function () {\n            /* istanbul ignore else  */\n            if (typeof window !== 'undefined') {\n                _this.appendTo(_this.element);\n            }\n        });\n    };\n    ComponentBase.prototype.ngOnDestroy = function () {\n        /* istanbul ignore else  */\n        if (typeof window !== 'undefined') {\n            this.destroy();\n            this.clearTemplate(null);\n        }\n    };\n    ComponentBase.prototype.clearTemplate = function (templateNames) {\n        clearTemplate(this, templateNames);\n    };\n    ;\n    ComponentBase.prototype.ngAfterContentChecked = function () {\n        for (var _i = 0, _a = this.tagObjects; _i < _a.length; _i++) {\n            var tagObject = _a[_i];\n            if (!isUndefined(tagObject.instance) && (tagObject.instance.isInitChanges || tagObject.instance.hasChanges)) {\n                if (tagObject.instance.isInitChanges) {\n                    var propObj = {};\n                    propObj[tagObject.name] = tagObject.instance.getProperties();\n                    this.setProperties(propObj, tagObject.instance.isInitChanges);\n                }\n                else {\n                    for (var _b = 0, _c = tagObject.instance.list; _b < _c.length; _b++) {\n                        var list = _c[_b];\n                        if (list.hasChanges) {\n                            var curIndex = tagObject.instance.list.indexOf(list);\n                            getValue(tagObject.name, this)[curIndex].setProperties(list.getProperties());\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ComponentBase.prototype.registerEvents = function (eventList) {\n        var ngEventsEmitter = {};\n        if (eventList && eventList.length) {\n            for (var _i = 0, eventList_1 = eventList; _i < eventList_1.length; _i++) {\n                var event_1 = eventList_1[_i];\n                ngEventsEmitter[event_1] = new EventEmitter(false);\n            }\n            this.setProperties(ngEventsEmitter, true);\n        }\n    };\n    ComponentBase.prototype.addTwoWay = function (propList) {\n        var _this = this;\n        var _loop_1 = function (prop) {\n            getValue(prop, this_1);\n            Object.defineProperty(this_1, prop, {\n                get: function () {\n                    return getValue(prop, _this.properties);\n                },\n                set: function (newVal) {\n                    var oldVal = getValue(prop, _this.properties);\n                    if (oldVal === newVal) {\n                        return;\n                    }\n                    _this.saveChanges(prop, newVal, oldVal);\n                    setValue(prop, (isNullOrUndefined(newVal) ? null : newVal), _this.properties);\n                    getValue(prop + 'Change', _this).emit(newVal);\n                }\n            });\n            setValue(prop + 'Change', new EventEmitter(), this_1);\n        };\n        var this_1 = this;\n        for (var _i = 0, propList_1 = propList; _i < propList_1.length; _i++) {\n            var prop = propList_1[_i];\n            _loop_1(prop);\n        }\n    };\n    ComponentBase.prototype.addEventListener = function (eventName, handler) {\n        var eventObj = getValue(eventName, this);\n        if (!isUndefined(eventObj)) {\n            if (!this.ngBoundedEvents[eventName]) {\n                this.ngBoundedEvents[eventName] = new Map();\n            }\n            this.ngBoundedEvents[eventName].set(handler, eventObj.subscribe(handler));\n        }\n    };\n    ComponentBase.prototype.removeEventListener = function (eventName, handler) {\n        var eventObj = getValue(eventName, this);\n        if (!isUndefined(eventObj)) {\n            this.ngBoundedEvents[eventName].get(handler).unsubscribe();\n        }\n    };\n    ComponentBase.prototype.trigger = function (eventName, eventArgs) {\n        var eventObj = getValue(eventName, this);\n        if (!isUndefined(eventObj)) {\n            eventObj.next(eventArgs);\n        }\n        var localEventObj = getValue('local' + eventName.charAt(0).toUpperCase() + eventName.slice(1), this);\n        if (!isUndefined(localEventObj)) {\n            localEventObj.call(this, eventArgs);\n        }\n    };\n    return ComponentBase;\n}());\nexport { ComponentBase };\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector} from '../di/injector';\nimport {NgModuleFactory, NgModuleRef} from '../linker/ng_module_factory';\nimport {Type} from '../type';\n\nimport {initServicesIfNeeded} from './services';\nimport {NgModuleDefinitionFactory, ProviderOverride, Services} from './types';\nimport {resolveDefinition} from './util';\n/**\n * @param {?} override\n * @return {?}\n */\nexport function overrideProvider(override: ProviderOverride) {\n  initServicesIfNeeded();\n  return Services.overrideProvider(override);\n}\n/**\n * @return {?}\n */\nexport function clearProviderOverrides() {\n  initServicesIfNeeded();\n  return Services.clearProviderOverrides();\n}\n/**\n * @param {?} ngModuleType\n * @param {?} bootstrapComponents\n * @param {?} defFactory\n * @return {?}\n */\nexport function createNgModuleFactory(\n    ngModuleType: Type<any>, bootstrapComponents: Type<any>[],\n    defFactory: NgModuleDefinitionFactory): NgModuleFactory<any> {\n  return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nclass NgModuleFactory_ extends NgModuleFactory<any> {\n/**\n * @param {?} moduleType\n * @param {?} _bootstrapComponents\n * @param {?} _ngModuleDefFactory\n */\nconstructor(\npublic readonly moduleType: Type<any>,\nprivate _bootstrapComponents: Type<any>[],\nprivate _ngModuleDefFactory: NgModuleDefinitionFactory) {\n    // Attention: this ctor is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    super();\n  }\n/**\n * @param {?} parentInjector\n * @return {?}\n */\ncreate(parentInjector: Injector|null): NgModuleRef<any> {\n    initServicesIfNeeded();\n    const /** @type {?} */ def = resolveDefinition(this._ngModuleDefFactory);\n    return Services.createNgModuleRef(\n        this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n  }\n}\n\nfunction NgModuleFactory__tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleFactory_.prototype.moduleType;\n/** @type {?} */\nNgModuleFactory_.prototype._bootstrapComponents;\n/** @type {?} */\nNgModuleFactory_.prototype._ngModuleDefFactory;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {anchorDef, elementDef} from './element';\nexport {clearProviderOverrides, createNgModuleFactory, overrideProvider} from './entrypoint';\nexport {ngContentDef} from './ng_content';\nexport {moduleDef, moduleProvideDef} from './ng_module';\nexport {directiveDef, pipeDef, providerDef} from './provider';\nexport {pureArrayDef, pureObjectDef, purePipeDef} from './pure_expression';\nexport {queryDef} from './query';\nexport {ViewRef_, createComponentFactory, getComponentViewDefinitionFactory, nodeValue} from './refs';\nexport {initServicesIfNeeded} from './services';\nexport {textDef} from './text';\nexport {EMPTY_ARRAY, EMPTY_MAP, createRendererType2, elementEventFullName, inlineInterpolate, interpolate, rootRenderNodes, tokenKey, unwrapValue} from './util';\nexport {viewDef} from './view';\nexport {attachEmbeddedView, detachEmbeddedView, moveEmbeddedView} from './view_attach';\n\nexport {DefinitionFactory,NodeLogger,Definition,NgModuleDefinition,NgModuleDefinitionFactory,ViewDefinition,ViewDefinitionFactory,ViewUpdateFn,NodeCheckFn,ArgumentType,ViewHandleEventFn,ViewFlags,NodeDef,NodeFlags,BindingDef,BindingFlags,OutputDef,OutputType,QueryValueType,ElementDef,ElementHandleEventFn,ProviderDef,NgModuleProviderDef,DepDef,DepFlags,TextDef,QueryDef,QueryBindingDef,QueryBindingType,NgContentDef,NgModuleData,ViewData,ViewState,DisposableFn,NodeData,TextData,asTextData,ElementData,ViewContainerData,TemplateData,asElementData,ProviderData,asProviderData,PureExpressionData,asPureExpressionData,asQueryList,RootData,DebugContext,CheckType,ProviderOverride,Services} from './types';\n","/**\n * Angular Form Base Module\n */\nvar FormBase = /** @class */ (function () {\n    function FormBase() {\n    }\n    FormBase.prototype.propagateChange = function (_) { return; };\n    FormBase.prototype.propagateTouch = function () { return; };\n    FormBase.prototype.localChange = function (e) {\n        var value = (e.checked === undefined ? e.value : e.checked);\n        if (this.propagateChange !== undefined && value !== undefined) {\n            // Update angular from our control\n            this.propagateChange(value);\n        }\n    };\n    FormBase.prototype.registerOnChange = function (registerFunction) {\n        this.propagateChange = registerFunction;\n    };\n    FormBase.prototype.registerOnTouched = function (registerFunction) {\n        this.propagateTouch = registerFunction;\n    };\n    FormBase.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        /* istanbul ignore else  */\n        if (typeof window !== 'undefined') {\n            // Used setTimeout for template binding\n            // Refer Link: https://github.com/angular/angular/issues/6005\n            setTimeout(function () {\n                _this.appendTo(_this.element);\n                var ele = _this.inputElement || _this.element;\n                ele.addEventListener('focus', _this.ngOnFocus.bind(_this));\n                ele.addEventListener('blur', _this.ngOnBlur.bind(_this));\n            });\n        }\n    };\n    FormBase.prototype.setDisabledState = function (disabled) {\n        this.enabled = !disabled;\n    };\n    FormBase.prototype.writeValue = function (value) {\n        //update control value from angular\n        if (this.checked === undefined) {\n            this.value = value;\n        }\n        else {\n            if (typeof value === 'boolean') {\n                this.checked = value;\n            }\n            else {\n                this.checked = value === this.value;\n            }\n        }\n        if (value === null) {\n            return;\n        }\n    };\n    FormBase.prototype.ngOnFocus = function (e) {\n        this.focus.emit(e);\n    };\n    FormBase.prototype.ngOnBlur = function (e) {\n        this.propagateTouch();\n        this.blur.emit(e);\n    };\n    return FormBase;\n}());\nexport { FormBase };\n"],"names":["createInstance","classFunction","params","arrayParam","unshift","undefined","Function","prototype","bind","apply","setImmediate","handler","unbind","num","Uint16Array","window","msCrypto","crypto","getRandomValues","secret","combineArray","messageHandler","event","source","data","length","addEventListener","postMessage","removeEventListener","getValue","nameSpace","obj","value","splits","split","i","isUndefined","setValue","key","keys","start","fromObj","isNullOrUndefined","deleteObject","isObject","objCon","constructor","getEnumValue","enumObject","enumValue","merge","destination","temrObj","tempProp","_i","keys_1","Object","extend","copied","first","second","deep","result","arguments","arguments_1","obj1","forEach","clone","src","copy","getUniqueID","definedName","uid","debounce","eventFunction","delay","out","_this","this","args","later","clearTimeout","setTimeout","queryParams","array","keys_2","push","encodeURIComponent","join","isObjectArray","parser","toString","call","compareElementParent","child","parent","node","document","parentNode","throwError","message","Error","e","stack","print","element","printWindow","div","createElement","links","slice","getElementsByTagName","querySelectorAll","reference","open","appendChild","cloneNode","len","outerHTML","write","innerHTML","close","focus","interval","setInterval","ready","clearInterval","formatUnit","indexOf","getInstance","component","elem","querySelector","instances","_a","inst","addInstance","instance","ret","tagName","properties","className","id","styles","setAttribute","attrs","attributes","addClass","elements","classes","classList","getClassList","ele","_b","classList_1","contains","add","removeClass","classList_2","remove","isVisible","style","visibility","offsetWidth","prepend","fromElements","toElement","docFrag","createDocumentFragment","insertBefore","firstElementChild","append","detach","removeChild","EventHandler","clearEvents","select","selector","context","selectAll","closest","el","nodeType","matches","siblings","childNodes_1","Array","childNodes","curNode","Node","ELEMENT_NODE","getAttributeOrDefault","property","attrVal","getAttribute","setStyleAttribute","addClasses","removeClasses","msMatchesSelector","webkitMatchesSelector","getObject","curKey","defaultValue","type","hasOwnProperty","getObjectArray","isSetter","isFactory","curType","setProperties","propertyGetter","propertySetter","newValue","oldVal","saveChanges","complexGetter","complexSetter","complexFactoryGetter","complexFactorySetter","complexArrayGetter","defCollection","complexArraySetter","oldValueCollection","newValCollection","complexArrayFactorySetter","complexArrayFactoryGetter","Property","target","propertyDescriptor","set","get","enumerable","configurable","defineProperty","addPropertyCollection","Complex","ComplexFactory","Collection","CollectionFactory","Event","eventDescriptor","oldValue","finalContext","getParentContext","prefix","NotifyPropertyChanges","classConstructor","propertyType","propList","props","complexProps","colProps","events","propNames","complexPropNames","colPropNames","eventNames","propertyName","getBuilderProperties","builderObject","propCollections","isPropertyArray","rex","_c","prop","test","childType","tempValue","CreateBuilder","builderFunction","create","temp","curText","rippleEffect","rippleOptions","done","rippleModel","getRippleModel","rippleFlag","isRippleEnabled","rippleHandler","rippleUpHandler","rippleLeaveHandler","Browser","isPointer","removeAttribute","ignore","isCenterRipple","duration","offset","getBoundingClientRect","offsetX","pageX","body","scrollLeft","offsetY","pageY","scrollTop","Math","max","abs","left","right","top","bottom","radius","sqrt","diameter","x","y","rippleElement","getComputedStyle","getPropertyValue","transform","removeRipple","eventArgs","rippleElements","opacity","getElementsByClassName","enableRipple","isRipple","setCulture","cultureName","defaultCulture","onIntlChange","notify","locale","setCurrencyCode","currencyCode","defaultCurrencyCode","loadCldr","data_1","cldrData","enableRtl","status","rightToLeft","getNumericObject","numObject","IntlBase","getDependables","mapper","dateObject","numSystem","symbPattern","pattern","getSymbolPattern","getFormatData","dateSeparator","getDateSeparator","getDefaultDateObject","compile","template","helper","fnCode","evalExp","str","localKeys","replace","LINES","DBL_QUOTED_STR","exp","match","cnt","matchStr","CALL_FUNCTION","rlStr","IF_STMT","WORD","trim","addNameSpace","QUOTES","FOR_STMT","rlStr_1","mtc","fnStr","fNameSpace","ELSE_STMT","IF_OR_FOR","addNS","ignoreList","NOT_NUMBER","templateString","compiler","engineObj","propName","HAS_ROW","setTemplateEngine","classObj","getTemplateEngine","applyMixins","derivedClass","baseClass","getOwnPropertyNames","name","clearTemplate","templateNames","regTemplates","registeredTemplate","regProperties","filter","val","rt","destroyed","pNode","_view","renderer","rootNodes","m","destroy","_d","_e","tagObjects","tagObject","RegExp","object","__extends","d","b","__","extendStatics","tryCatchTarget","errorObject_1","fn","tryCatcher","errors","reduce","errs","err","concat","UnsubscriptionError_1","nextOrObserver","error","complete","Subscriber_1","rxSubscriber_1","Observer_1","fns","pipeFromArray","input","prev","noop_1","schedule","subscribe","then","outerSubscriber","outerValue","outerIndex","InnerSubscriber_1","closed","Observable_1","_isScalar","next","syncErrorThrowable","isArrayLike_1","isPromise_1","root_1","iterator_1","iterator","item","observable_1","obs","TypeError","msg","isObject_1","project","resultSelector","concurrent","Number","POSITIVE_INFINITY","lift","MergeMapOperator","mergeMap_1","identity_1","observables","scheduler","last","isScheduler_1","pop","mergeAll_1","ArrayObservable_1","RefCountOperator","subjectOrSubjectFactory","subjectFactory","MulticastOperator","connectable","ConnectableObservable_1","Subject_1","refCount_1","multicast_1","shareSubjectFactory","share_1","_symbolIterator","Symbol","Map","token","overriddenName","res","annotation","fnOrArray","String","stringify","isArray","annotations","annoLength","paramsAnnotations","ii","paramAnnotations","j","extractAnnotation","clsDef","applyParams","proto","extends","Reflect","defineMetadata","constructorName","objOrType","getOwnMetadata","DecoratorFactory","metaCtor","annotationInstance","chainAnnotation","TypeDecorator","cls","Class","chainFn","makeMetadataCtor","parentClass","values","unusedKey","index","parameters","ParamDecoratorFactory","PropDecoratorFactory","decoratorInstance","meta","__forward_ref__","forwardRef","originalError","findFirstClosedCycle","reverse","injector","constructResolvingMessage","errMsg","wrappedError","addKey","originalException","originalStack","typeOrFunc","signature","parameter","map","decoratorInvocations","decoratorInvocation","ctor","parentProto","getPrototypeOf","provider","factoryFn","resolvedDeps","useClass","resolveForwardRef","reflector","factory","_dependenciesFor","useExisting","aliasInstance","ReflectiveDependency","fromKey","ReflectiveKey","useFactory","constructDependencies","deps","providers","normalizedProvidersMap","existing","multiProvider","mixingMultiProvidersWithRegularProvidersError","resolvedFactories","resolvedProvider","ResolvedReflectiveProvider_","Type","provide","_normalizeProviders","dependencies","metadata","optional","Inject","_createDependency","paramMetadata","Optional","Self","SkipSelf","InjectionToken","_providers","getProviderAtIndex","zone","_nesting","hasPendingMicrotasks","isStable","onMicrotaskEmpty","emit","runOutsideAngular","onStable","_inner","fork","isAngularZone","onInvokeTask","delegate","current","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","hasPendingMacrotasks","macroTask","onHandleError","handleError","_platform","ALLOW_MULTIPLE_PLATFORMS","PlatformRef","requiredToken","platform","getPlatform","errorHandler","ngZone","isPromise","catch","list","flatItem","flatten","predicate","DebugElement","_nativeNodeToDebugNode","nativeNode","a","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","devModeEqual","isAObject","isBObject","isJsObject","comparator","iterator1","getSymbolIterator","iterator2","item1","item2","addRemoveOffset","moveOffsets","previousIndex","moveOffset","defaultIterableDiffers","view","nodes","currValue","isFirstCheck","_tokenKeyCache","def","bindingIdx","oldValues","state","checkBinding","currView","flags","endView","nodeIndex","eventName","renderHost","renderParent","componentRendererType","encapsulation","ViewEncapsulation","Native","asElementData","renderElement","DEFINITION_CACHE","NOOP","action","nextSibling","startIndex","endIndex","nodeDef","visitRenderNode","ngContentIndex","compView","isComponentView","hostView","hostElDef","viewParentEl","childCount","projectedNodes","root","projectableNodes","visitProjectedRenderNodes","rn","renderNode","bindingFlags","execRenderNodeAction","componentView","embeddedViews","_embeddedViews","k","visitRootRenderNodes","elDef","rootSelectorOrNode","selectorOrNode","ns","createComment","parentEl","getParentRenderElement","selectRootElement","outputs","output","handleEventClosure","renderEventHandlerClosure","elementEventFullName","listenTarget","listenerView","dispatchEvent","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","bindLen","bindings","changed","checkAndUpdateElementValue","checkAndUpdateBinding","binding","elData","renderNode$$1","setElementAttribute","setElementClass","setElementStyle","securityContext","renderValue","sanitizer","sanitize","SecurityContext","STYLE","unit","suffix","setStyle","_createProviderInstance","_def","provDef","depDef","notFoundValue","Injector","THROW_IF_NOT_FOUND","_parent","tokenKey$$1","tokenKey","InjectorRefTokenKey$1","NgModuleRefTokenKey","providerDef","providerInstance","_createProviderInstance$1","ngModule","injectable","_createClass","_callFactory","resolveNgModuleDep","depValues","lifecycles","UNDEFINED_VALUE","parentView","elementData","viewIndex","viewContainerParent","addToArray","vcElementData","projectedViews","dvcElementData","_projectedViews","viewDef","nodeFlags","parentNodeDef","removeFromArray","declaredViewContainer","oldViewIndex","newViewIndex","Services","dirtyParentQueries","prevRenderNode","arr","allowPrivateServices","createClass","subscription","eventHandlerClosure","providerData","asProviderData","directive","changes","updateProp","ngOnChanges","ngOnInit","callFactory","resolveDep","startView","ChangeDetectorRefTokenKey","RendererV1TokenKey","createRendererV1","findCompView","Renderer2TokenKey","ElementRefTokenKey","ElementRef","ViewContainerRefTokenKey","viewContainer","TemplateRefTokenKey","createChangeDetectorRef","InjectorRefTokenKey","createInjector","providerDef_1","allProviders","publicProviders","bindingIndex","WrappedValue","wrapped","callProviderLifecycles","childFlags","directChildFlags","callElementProvidersLifecycles","setCurrentNode","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryIds","nodeMatchedQueries","isEmbeddedView","tplDef","end","filterId","asQueryList","setDirty","queryList","dirty","directiveInstance","newValues","elementDef_1","calcQueryValues","reset","boundValue","bindingType","queryDef","valueType","matchedQueries","getQueryValue","childMatchedQueries","embeddedView","dvc","projectedView","queryValueType","asPureExpressionData","pipe","createText","_addInterpolationPart","anchorDef$$1","hostElement","compRenderer","rendererType","disposables","outputCount","hostDef","nodeData","compViewDef","resolveDefinition","createComponentView","listenToElementOutputs","createTemplateData","createViewContainerData","createProviderInstance","createPipeInstance","createDirectiveInstance","initView","createPureExpression","createQuery","appendNgContent","execEmbeddedViewsAction","ViewAction","CheckNoChanges","updateRenderer","markProjectedViewsForCheck","updateDirectives","CheckAndUpdate","execQueriesAction","callLifecycleHooksChildrenFirst","execComponentViewsAction","argStyle","checkAndUpdateNodeInline","i_1","checkAndUpdateElementInline","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkBindingNoChanges","Destroy","detachProjectedView","destroyNode","destroyViewNodes","asTextData","renderText","viewState","checkNoChangesView","execProjectedViewsAction","CheckNoChangesProjectedViews","checkAndUpdateView","CheckAndUpdateProjectedViews","destroyView","queryFlags","staticDynamicQueryFlag","checkType","nodeCount","checkAndUpdateQuery","initialized","services","isDevMode","createDebugServices","createProdServices","createRootView","createEmbeddedView","createNgModuleRef","overrideProvider","clearProviderOverrides","createDebugContext","createProdRootView","DebugContext_","handleEvent","prodCheckAndUpdateNode","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugClearProviderOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","elInjector","rendererFactory","Sanitizer","ErrorHandler","createRenderer","providerOverrides","override","size","elIndicesWithOverwrittenProviders","lastElementDef","has","elementIndicesWithOverwrittenProviders","viewDef$$1","elIndex","splitDepsDsl","hasOverrides","hasDeprecatedOverrides","checkIndex","callWithDebugContext","DebugAction","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextDirectiveWithBinding","nextRenderNodeWithBinding","givenValues","bindingValues","normalizeDebugBindingName","normalizeDebugBindingValue","attr","JSON","renderNodeIndex","self","oldAction","_currentAction","oldView","_currentView","oldNodeIndex","_currentNodeIndex","isViewDebugError","templateEle","stringCompiler","contRef_1","elementRef","nativeElement","_viewContainerRef","pName_1","$implicit","conRef","viewContainerRef","viewRef","viewCollection","Template","setter","getter","dataBind","headerRegex","defaultType","Ajax","options","async","mode","url","toUpperCase","send","Promise","resolve","reject","httpRequest","XMLHttpRequest","onreadystatechange","stateChange","setRequestHeader","contentType","beforeSend","successHandler","onSuccess","failureHandler","reason","onFailure","responseText","dataType","toLowerCase","parse","readyState","statusText","getResponseHeader","responseHeaders","header","headers","exec","getAllResponseHeaders","addOrGetEventData","__eventList","listener","bindTo","intDebounce","debounceListener","eventData","some","splice","copyData","shift","trigger","eventProp","eventData_1","event_1","Observer","boundedEvents","on","cntxt","notExist","isHandlerPresent","off","curObject","argument","curObject_1","cur","boundedEvents_1","Base","isProtectedOnChange","changedProperties","oldProperties","refreshing","finalUpdate","childChangedProperties","modelObserver","isDestroyed","muteOnChange","prevDetection","callChildDataBind","obj_1","clearChanges","newChanges","oldChanges","onPropertyChanged","moduleClass","getModuleName","ej2_instances","REGX_BROWSER","OPERA","EDGE","CHROME","PANTHOMEJS","SAFARI","WEBKIT","MSIE","MOZILLA","browserDetails","extractBrowserDetail","browserInfo","culture","clientInfo","userAgent","version","language","navigator","getEvent","isTouch","isDevice","move","getTouchStartEvent","getTouchEndEvent","getTouchMoveEvent","regX","uA","info","isMSPointer","isWebView","cordova","PhoneGap","phonegap","forge","touchStartEvent","touchMoveEvent","touchEndEvent","setPrototypeOf","__proto__","p","__decorate","decorators","desc","c","r","getOwnPropertyDescriptor","decorate","Animation","_super","easing","ease","linear","easeIn","easeOut","easeInOut","elasticInOut","elasticIn","elasticOut","Animation_1","animate","model","getModel","elements_1","element_1","delayAnimation","stop","animation","animationId","frameId","parseInt","cancelAnimationFrame","applyAnimation","timeStamp","step","timerId","startTime","prevTimeStamp","startAnimation","begin","avg","timingFunction","progress","requestAnimationFrame","performance","now","fail","newProp","oldProp","CanvasRenderer","rootID","rootId","getOptionValue","createCanvas","canvasObj","ctx","getContext","setCanvasSize","width","height","getElementById","setAttributes","lineWidth","dashArray","dashArrayString","setLineDash","strokeStyle","drawLine","save","beginPath","stroke","moveTo","x1","y1","lineTo","x2","y2","restore","dataUrl","toDataURL","drawRectangle","canvasCtx","cornerRadius","rx","globalAlpha","rect","drawCornerRadius","fill","fillStyle","fillRect","arcTo","closePath","drawPath","canvasTranslate","dataSplit","borderWidth","flag","translate","parseFloat","innerR","cx","c1","c2","c3","c4","bezierCurveTo","arc","counterClockWise","cy","PI","drawText","label","fontWeight","fontSize","fontFamily","font","anchor","textAlign","baseline","textBaseline","rotate","labelRotation","fillText","drawCircle","drawPolyline","points","point","drawEllipse","circumference","ry","scaleX","scaleY","scale","drawImage","imageObj","Image","href","createLinearGradient","colors","myGradient","colorStop","setGradientValues","createRadialGradient","colorName","color","newColorStop","stopColor","addColorStop","setElementAttributes","updateCanvasAttributes","img_1","onload","ModuleLoader","loadedModules","inject","requiredModules","moduleList","reqLength","clean","clearUnusedModule","modl","moduleList_1","module","modName","member","isModuleLoaded","moduleObject","memberName","getMemberName","isProperty","loadedModule","modules","usedModules","arg","removableModule_1","mod","substring","ChildProperty","parentObj","controlParent","isParentArray","updateChange","updateTimeOut","curIndex","defaultNumberingSystem","latn","_digits","_type","defaultNumberSymbols","decimal","group","percentSign","plusSign","minusSign","infinity","nan","exponential","latnNumberSystem","ParserBase","getMainObject","cName","getNumberingSystem","numberingSystems","reverseObject","propKeys_1","getSymbolRegex","regexStr","getSymbolMatch","matchKeys_1","constructRegex","convertValueParts","regex","getDefaultNumberingSystem","nSystem","getCurrentNumericOptions","curObj","numberSystem","needSymbols","digits","numericPair","numberParseRegex","numericRegex","symbolNumberSystem","symbolMatch","getNumberMapper","isNumber","numberSymbols","timeSeparator","latnNumberSystem_1","nPair","nRegex","errorText","ms","ls","mf","lf","NumberFormat","numberFormatter","option","cldr","symbolPattern","fOptions","cOptions","dOptions","dependable","base","numberMapper","parserObject","currencySymbol","getCurrencySymbol","numericObject","currency","percentSymbol","minusSymbol","symbols","formatRegex","format","customFormat","getProperNumericSkeleton","isCurrency","isPercent","isAccount","groupOne","checkValueRange","maximumSignificantDigits","minimumSignificantDigits","maximumFractionDigits","minimumFractionDigits","fractionDigits","useGrouping","defaultCurrency","nData","pData","groupSeparator","groupData","getGroupingDetails","minimumFraction","mval","maximumFraction","mfrac","lfrac","isNaN","isFinite","intNumberFormatter","negativeDataRegex","pattern_1","lastIndexOf","primary","s","secondary","val1","val2","checkbothExist","isFraction","decide","dint","str1","str2","checkRange","text","range","curData","zeroData","fValue","processSignificantDigits","processFraction","minimumIntegerDigits","processMinimumIntegers","groupNumbers","latnParseRegex","nlead","nend","min","toPrecision","level1","sep","decimalSymbol","level2","toFixed","lead","getResultantPattern","skeleton","resPattern","iType","basicPatterns","dPattern","tPattern","defaultObject","patternMatcher","needFraction","cSymbol","fractionOnly","customRegex","changeCurrencySymbol","groupPattern","fraction","fmatch","fractionRegex","sym","formatSplit","customNumberFormat","integerPart","fractionPart","isCurrencyPercent","parts","actual","symbol","part","loc","typeMapper","substr","dateObj","getActualDateTimeFormat","isExcelFormat","actualPattern","patternRegex","patternMatch","tLength","timeZonePattern","options_1","timeZone","numMapper","timezone","Date","getTimezoneOffset","hourFormat","gmtZeroFormat","DateFormat","getTimeZoneValue","gmtFormat","getActualNumberFormat","minFrac","parseOptions","custom","fractionDigitsPattern","minimumIntegerPattern","groupingPattern","minDigits","maxDigits","diff","integer","no","G","M","L","H","'"," a","yy","EEEE","E","$","%","-","0","1","dateParseRegex","dates","calendars","gregorian","months","stand-alone","abbreviated","2","3","4","5","6","7","8","9","10","11","12","narrow","wide","days","sun","mon","tue","wed","thu","fri","sat","short","dayPeriods","am","pm","eras","eraNames","0-alt-variant","1-alt-variant","eraAbbr","eraNarrow","dateFormats","full","long","medium","timeFormats","dateTimeFormats","availableFormats","Ed","Ehm","EHm","Ehms","EHms","Gy","GyMMM","GyMMMd","GyMMMEd","h","hm","Hm","hms","Hms","hmsv","Hmsv","hmv","Hmv","Md","MEd","MMM","MMMd","MMMEd","MMMMd","yM","yMd","yMEd","yMMM","yMMMd","yMMMEd","yMMMM","timeZoneNames","numbers","currencies","USD","displayName","symbol-alt-narrow","EUR","GBP","minimumGroupingDigits","symbols-numberSystem-latn","superscriptingExponent","perMille","decimalFormats-numberSystem-latn","standard","percentFormats-numberSystem-latn","currencyFormats-numberSystem-latn","accounting","monthIndex","month","C","P","N","A","weekdayKey","timeSetter","datePartMatcher","z","Z","dateFormat","formatOptions","dateSeperator","patternMatch_1","char","weekday","designator","eText","era","getDate","intDateFormatter","matches_1","length_1","curval","processNumber","curstr","getMonth","getDay","getFullYear","desig","getHours","dec","checkTwodigitNumber","tVal","curPattern","ishour","floor","latnRegex","minute","hour","day","DateParser","dateParser","hourOnly","numOptions","regexString","evalposition","gmtCorrection","zCorrectTemp","isgmtTraversed","nRegx","canUpdate","charKey","weekObject","hour12","tzone","hpattern","parseTimeZoneRegx","pos","parserRegex","parsedDateParts","internalDateParse","getDateObject","setMilliseconds","tKeys","year","setFullYear","tKeys_1","tValue","pDate","setDate","lDate","lastDay","setHours","tzValue","setMinutes","getMinutes","retOptions","props_1","matchString","internalNumberParser","tmatch","getZoneValue","tZone","splitStr","cRegex","NumberParser","numberParser","symbolRegex","symbolpattern","getParsedNumber","isNegative","Infinity","NaN","exponent","Internationalization","getDateFormat","getCulture","getNumberFormat","getDateParser","getNumberParser","formatNumber","formatDate","parseDate","parseNumber","getDatePattern","getNumberPattern","Component","needsID","moduleLoader","localObserver","detectFunction","appendTo","cancel","enablePersistence","setPersistData","refresh","preRender","injectModules","render","mergePersistData","event_2","getInjectedModules","injectedModules","localStorage","getItem","setItem","getPersistData","templateName","addOnPersist","persistObj","objValue","getActualProperties","ignoreOnPersist","iterateJsonProperties","newObj","this_1","newList","defaultPosition","Position","Draggable","dragLimit","Draggable_1","getDefaultPosition","padding","diffX","diffY","droppables","toggleEvents","isIE","scope","isUnWire","handle","initialize","evt","currentTarget","preventDefault","changedTouches","abort","intCoord","getCoordinates","initialPosition","relativeXPosition","relativeYPosition","intDragStart","intDestroy","documentElement","intCordinate","styleProp","margin","marginLeft","marginTop","marginRight","marginBottom","dragTarget","intClosest","calculateParentPosition","position","getMousePosition","distance","getHelperElement","dragTargetElement","helperElement","parentClientRect","offsetParent","dragStart","curTarget","getProperTargetElement","dragArea","setDragArea","enableTailMode","posValue","getProcessedPositionValue","intDrag","intDragStop","setGlobalDroppables","axis","queryPositionInfo","pageXOffset","pageYOffset","docHeight","getDocumentWidthHeight","docWidth","drag","eleObj","checkTargetElement","intOver","dragData","hoverObject","intOut","tLeft","tTop","pagex","pagey","dLeft","dTop","skipDistanceCheck","helperWidth","helperHeight","offsetHeight","iTop","iLeft","dragValue","docBody","docEle","dragStop","dragStopCalled","intDrop","eleWidthBound","eleHeightBound","elementArea","tborder","tpadding","lowerKey","prevStyle","display","elementFromPoint","clientX","clientY","cursorAt","sender","draggable","draggedElement","dropIns","getDropInstance","parent_1","parentElement","drop","eleInst","eleInst_1","Droppable","mouseOver","wireEvents","area","accept","isDrag","isDropArea","canDrop","droppedElement","coord","keyCode","backspace","tab","enter","control","alt","pause","capslock","space","escape","pageup","pagedown","home","leftarrow","uparrow","rightarrow","downarrow","insert","delete","f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","semicolon","plus","comma","minus","dot","forwardslash","graveaccent","openbracket","backslash","closebracket","singlequote","KeyboardEvents","keyPressHandler","isAltKey","altKey","isCtrlKey","ctrlKey","isShiftKey","shiftKey","curkeyCode","which","keyConfigs","configCollection_1","rconfig","rKeyObj","KeyboardEvents_1","getKeyConfigData","keyAction","unwireEvents","config","configCache","keyData","getKeyCode","keyVal","charCodeAt","L10n","controlName","localeStrings","setLocale","intLocale","intGetControlConstant","currentLocale","load","localeObject","getConstant","SvgRenderer","svgLink","createSvg","svgObj","createElementNS","setSVGSize","path","line","rectangle","circle","polyline","ellipse","drawPolygon","polygon","img","setAttributeNS","preserveAspectRatio","textContent","createTSpan","tSpan","createTitle","title","createDefs","createClipPath","clipPath","createForeignObject","foreignObject","createGroup","createPattern","newOptions","fx","fy","drawGradient","gradientType","defs","gradient","stop_1","drawClipPath","drawCircularClipPath","SwipeSettings","swipeRegex","Touch","touchAction","tapCount","startEvent","isTouchMoved","movedDirection","startPoint","lastMovedPoint","startEventData","hScrollLocked","vScrollLocked","tStampStart","timeOutTapHold","tapHoldEvent","tapHoldThreshold","moveEvent","endEvent","movedPoint","eScrollArgs","calcScrollPoints","startEvents","originalEvent","startX","startY","distanceX","distanceY","scrollDirection","velocity","getVelocity","timeOutTap","endPoint","eSwipeArgs","tDistance","swipeSettings","swipeThresholdDistance","calcPoints","swipeArgs","swipeDirection","defaultArgs","canTrigger","scrollBool","isScrollable","moved","checkSwipe","tap","tapThreshold","modeClear","lastTapTime","getTime","eleStyle","overflow","overflowX","overflowY","eTapArgs","pnt","newX","newY","newT","xDist","yDist","Engine","ComplexBase","hasChanges","propCollection","tags","tag","objInstance","templateProperties","templateProperties_1","changedVal","currentValue","getProperties","isChanged","ArrayBase","isInitChanges","children","onlyProp","__window","__self","WorkerGlobalScope","__global","global","_root","unsubscribe","_unsubscribe","Subscription","hasErrors","_parents","_subscriptions","isFunction_1","trial","tryCatch_1","flattenUnsubscriptionErrors","isArray_1","sub","teardown","EMPTY","_addParent","tmp","subscriptions","subscriptionIndex","empty","exports","for","destinationOrNext","Subscriber","SafeSubscriber","subscriber","isStopped","_next","_error","_complete","Subscription_1","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","syncErrorValue","syncErrorThrown","wrappedComplete","$$observable","observable","getSymbolObservable","_subscribe","Observable","operator","sink","toSubscriber_1","_trySubscribe","PromiseCtor","Rx","operations","pipe_1","ScalarObservable","dispatch","EmptyObservable","ArrayObservable","ScalarObservable_1","EmptyObservable_1","count","Set_1","Map_1","symbolIteratorPonyfill","InnerSubscriber","notifyNext","notifyError","notifyComplete","OuterSubscriber","innerValue","innerIndex","innerSub","observer","MergeMapSubscriber","active","_tryNext","buffer","_innerSub","ish","subscribeToResult_1","hasCompleted","_notifyResultSelector","OuterSubscriber_1","subject","SubjectSubscription","observers","subscriberIndex","Subject","SubjectSubscriber","AnonymousSubject","ObjectUnsubscribedError_1","hasError","thrownError","SubjectSubscription_1","_refCount","refCounter","RefCountSubscriber","connection","connect","refCount","sharedConnection","_connection","ConnectableObservable","getSubject","_subject","_isComplete","ConnectableSubscriber","connectableProto","writable","_desc","_global","ChangeDetectionStrategy","makePropDecorator","assign","isViewQuery","descendants","Query","OnPush","Default","NgModule","makeDecorator","Emulated","Version","_NullInjector","_THROW_IF_NOT_FOUND","ERROR_LOGGER","deprecatedParameter","_findOriginalError","_findContext","errorLogger","getErrorLogger","_console","getOriginalError","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","DELEGATE_CTOR","ReflectionCapabilities","paramTypes","parentCtor","tsickleCtorParams","ctorParameters","ctorParam","convertTsickleDecoratorIntoMetadata","_zipTypesAndAnnotations","_reflect","isType","getParentCtor","_ownParameters","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","_ownPropMetadata","Reflector","caps","reflectionCapabilities","method","importUri","identifier","_constructionCounter","keyIds","objs","_getByKey","ReflectiveInjector_","_instantiateProvider","_instantiate","ResolvedReflectiveFactory","ResolvedReflectiveFactory$$1","dep","_getByReflectiveDependency","INJECTOR_KEY","_getByKeySelf","keyId","UNDEFINED","_new","inj","inj_","_getObjByKeyId","appInits","_done","ApplicationInitStatus","asyncInitPromises","initResult","all","Injectable","PLATFORM_INITIALIZER","APP_BOOTSTRAP_LISTENER","Console","console","warn","Compiler","_throwError","ComponentFactory","ERROR_COMPONENT","trace","tslib_1.__extends","ComponentFactoryBoundToModule","wtf","EventEmitter","generatorOrNext","schedulerFn","errorFn","completeFn","__isAsync","onError","Zone","assertZonePatched","_outer","forkInnerZoneWithAngularBehavior","NgZone","_ngZone","_didWork","Testability","onUnstable","_isZoneStable","assertNotInAngularZone","scheduleMicroTask","_runCallbacksIfReady","_pendingCount","_callbacks","using","exactMatch","TestabilityRegistry","findInAncestors","_testabilityGetter","findTestabilityInTree","_injector","PlatformRef_","_destroyed","moduleFactory","enableLongStackTrace","run","ngZoneInjector","ReflectiveInjector","resolveAndCreate","useValue","moduleRef","exceptionHandler","onDestroy","_modules","_callAndReportToErrorHandler","initStatus","runInitializers","donePromise","_moduleDoBootstrap","moduleType","compilerOptions","appRef","ApplicationRef","_bootstrapComponents","f","bootstrap","ngDoBootstrap","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_rootComponents","_rootComponentTypes","_views","_runningTick","_enforceNoNewChanges","_stable","tick","isCurrentlyStable","stableSub","unstableSub","assertInAngularZone","ApplicationRef_","componentOrFactory","componentFactory","resolveComponentFactory","componentType","NgModuleRef","compRef","NULL","_unloadComponent","testability","registerApplication","location","_loadComponent","componentRef","attachView","_tickScope","detectChanges","checkNoChanges","_isStable","RendererFactory2","Renderer2","_emitter","_results","QueryList","_dirty","ViewContainerRef","EmbeddedViewRef","ViewRef","_debugContext","addChild","listeners","DebugNode","providerTokens","childIndex","newChildren","siblingIndex","refChild","newChild","refIndex","eventObj","trackByFn","_length","_collection","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_trackByFn","trackByIdentity","DefaultIterableDiffer","nextIt","nextRemove","record","getPreviousIndex","adjPreviousIndex","currentIndex","_nextRemoved","localMovePreviousIndex","localCurrentIndex","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","looseIdentical","trackById","_verifyReinsertion","_addIdentityChange","iterateListLike","isDirty","nextRecord","_nextPrevious","_nextAdded","_removalsTail","previousRecord","_prev","_moveAfter","_reinsertAfter","reinsertRecord","_addToRemovals","_unlink","clear","_nextMoved","prevRecord","_prevRemoved","_insertAfter","_DuplicateMap","toIndex","_identityChangesTail","_identityChangesHead","forEachItem","previous","forEachPreviousItem","additions","forEachAddedItem","moves","forEachMovedItem","removals","forEachRemovedItem","identityChanges","forEachIdentityChange","_nextIdentityChange","IterableChangeRecord_","_head","_DuplicateItemRecordList","_tail","_nextDup","atOrAfterIndex","_prevDup","duplicates","DefaultKeyValueDifferFactory","cd","DefaultKeyValueDiffer","_records","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","previousValue","before","record_1","KeyValueChangeRecord_","_nextChanged","IterableDiffers","factories","iterable","find","supports","KeyValueDiffers","kv","keyValDiff","parentPlatformFactory","marker","PLATFORM_ID","ApplicationModule","APP_ID_RANDOM_PROVIDER","_iterableDiffersFactory","_keyValueDiffersFactory","LOCALE_ID","_localeFactory","NONE","HTML","SCRIPT","URL","RESOURCE_URL","NS_PREFIX_RE","viewDefFactory","_inputs","_outputs","ngContentSelectors","ComponentFactory_","inputsArr","inputs","outputsArr","componentNodeIndex","EMPTY_CONTEXT","VERSION","_viewRef","_component","_elDef","ComponentRef_","_data","ViewContainerRef_","Injector_","ref","ViewRef_","ngModuleRef","contextInjector","parentInjector","viewRef_","_appRef","fs","detachView","vcRef","_parentView","TemplateRef","RendererAdapter","namespaceAndName","comment","viewRootNodes","attributeValue","isAdd","styleName","styleValue","_moduleType","NgModuleRef_","Renderer","CreateViewNodes","CAMEL_CASE_REGEXP","elView","elOrCompView","tokens","childDef","references","collectReferences","logViewDef","logNodeIndex","getRenderNodeIndex","currRenderNodeIndex","nodeLogger","DebugRenderer2","renderData","DebugRendererFactory2","whenRenderingDone","namespace","debugCtx","getCurrentDebugContext","debugEl","getDebugNode","debugChildEl","debugRefEl","oldChild","ComponentBase","_ngModuleDefFactory","NgModuleFactory_","ngBoundedEvents","complexTemplate","complexTemplates","complexTemplates_1","ngOnDestroy","propObj","registerEvents","eventList","ngEventsEmitter","eventList_1","addTwoWay","propList_1","newVal","localEventObj","charAt","FormBase","propagateChange","_","propagateTouch","localChange","checked","registerOnChange","registerFunction","registerOnTouched","inputElement","ngOnFocus","ngOnBlur","setDisabledState","disabled","enabled","writeValue","blur"],"mappings":"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"}