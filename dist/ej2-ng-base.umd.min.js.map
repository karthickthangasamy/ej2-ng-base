{"version":3,"file":"ej2-ng-base.umd.min.js","sources":["src/es5/util.js","src/es5/template.js","src/es5/complex-array-base.js","src/es5/component-base.js","src/es5/form-base.js"],"sourcesContent":["/**\n * Angular Utility Module\n */\n/* tslint:disable */\nexport function applyMixins(derivedClass, baseClass) {\n    baseClass.forEach(function (baseClass) {\n        Object.getOwnPropertyNames(baseClass.prototype).forEach(function (name) {\n            derivedClass.prototype[name] = baseClass.prototype[name];\n        });\n    });\n}\n/**\n * @private\n */\nexport function clearTemplate(_this, templateNames) {\n    var regTemplates = Object.keys(_this.registeredTemplate);\n    if (regTemplates.length) {\n        var regProperties = templateNames && templateNames.filter(function (val) {\n            return (/\\./g.test(val) ? false : true);\n        });\n        for (var _i = 0, _a = (regProperties && regProperties || regTemplates); _i < _a.length; _i++) {\n            var registeredTemplate = _a[_i];\n            for (var _b = 0, _c = _this.registeredTemplate[registeredTemplate]; _b < _c.length; _b++) {\n                var rt = _c[_b];\n                if (!rt.destroyed) {\n                    var pNode = rt._view.renderer.parentNode(rt.rootNodes[0]);\n                    for (var m = 0; m < rt.rootNodes.length; m++) {\n                        pNode.appendChild(rt.rootNodes[m]);\n                    }\n                    rt.destroy();\n                }\n            }\n            delete _this.registeredTemplate[registeredTemplate];\n        }\n    }\n    var _loop_1 = function (tagObject) {\n        if (tagObject.instance) {\n            tagObject.instance.clearTemplate((templateNames && templateNames.filter(function (val) {\n                return (new RegExp(tagObject.name).test(val) ? true : false);\n            })));\n        }\n    };\n    for (var _d = 0, _e = _this.tagObjects; _d < _e.length; _d++) {\n        var tagObject = _e[_d];\n        _loop_1(tagObject);\n    }\n}\n/**\n * To set value for the nameSpace in desired object.\n * @param {string} nameSpace - String value to the get the inner object\n * @param {any} value - Value that you need to set.\n * @param {any} obj - Object to get the inner object value.\n * @return {void}\n * @private\n */\nexport function setValue(nameSpace, value, object) {\n    var keys = nameSpace.split('.');\n    var fromObj = object || {};\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (i + 1 === keys.length) {\n            fromObj[key] = value === undefined ? {} : value;\n        }\n        else if (fromObj[key] === undefined) {\n            fromObj[key] = {};\n        }\n        fromObj = fromObj[key];\n    }\n    return fromObj;\n}\n","import { setTemplateEngine, getTemplateEngine } from '@syncfusion/ej2-base';\nimport { setValue, getValue } from '@syncfusion/ej2-base';\nvar stringCompiler = getTemplateEngine();\n/**\n * Angular Template Compiler\n */\nexport function compile(templateEle, helper) {\n    if (typeof templateEle === 'string') {\n        return stringCompiler(templateEle, helper);\n    }\n    else {\n        var contRef_1 = templateEle.elementRef.nativeElement._viewContainerRef;\n        var pName_1 = templateEle.elementRef.nativeElement.propName;\n        //tslint:disable-next-line        \n        return function (data, component, propName) {\n            var context = { $implicit: data };\n            var conRef = contRef_1 ? contRef_1 : component.viewContainerRef;\n            var viewRef = conRef.createEmbeddedView(templateEle, context);\n            var viewCollection = component ?\n                component.registeredTemplate : getValue('currentInstance.registeredTemplate', conRef);\n            propName = propName ? propName : pName_1;\n            if (typeof viewCollection[propName] === 'undefined') {\n                viewCollection[propName] = [];\n            }\n            viewCollection[propName].push(viewRef);\n            return viewRef.rootNodes;\n        };\n    }\n}\n/**\n * Property decorator for angular.\n */\nexport function Template(defaultValue) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: setter(key),\n            get: getter(key, defaultValue),\n            enumerable: true,\n            configurable: true\n        };\n        Object.defineProperty(target, key, propertyDescriptor);\n    };\n}\nfunction setter(key) {\n    return function (val) {\n        if (val === undefined) {\n            return;\n        }\n        setValue(key + 'Ref', val, this);\n        if (typeof val !== 'string') {\n            val.elementRef.nativeElement._viewContainerRef = this.viewContainerRef;\n            val.elementRef.nativeElement.propName = key;\n        }\n        else {\n            if (this.saveChanges) {\n                this.saveChanges(key, val, undefined);\n                this.dataBind();\n            }\n        }\n    };\n}\nfunction getter(key, defaultValue) {\n    return function () {\n        return getValue(key + 'Ref', this) || defaultValue;\n    };\n}\n//tslint:disable-next-line\nsetTemplateEngine({ compile: compile });\n","import { getValue, setValue } from '@syncfusion/ej2-base';\nimport { clearTemplate } from './util';\nvar ComplexBase = /** @class */ (function () {\n    function ComplexBase() {\n        this.hasChanges = false;\n        this.propCollection = {};\n        this.tags = [];\n        this.tagObjects = [];\n    }\n    ComplexBase.prototype.ngOnInit = function () {\n        this.registeredTemplate = {};\n        for (var _i = 0, _a = this.tags; _i < _a.length; _i++) {\n            var tag = _a[_i];\n            var objInstance = getValue('child' + tag.substring(0, 1).toUpperCase() + tag.substring(1), this);\n            if (objInstance) {\n                this.tagObjects.push({ instance: objInstance, name: tag });\n            }\n        }\n        var templateProperties = Object.keys(this);\n        templateProperties = templateProperties.filter(function (val) {\n            return /Ref$/i.test(val);\n        });\n        for (var _b = 0, templateProperties_1 = templateProperties; _b < templateProperties_1.length; _b++) {\n            var tempName = templateProperties_1[_b];\n            var propName = tempName.replace('Ref', '');\n            setValue(propName.replace('_', '.'), getValue(propName, this), this.propCollection);\n        }\n    };\n    ComplexBase.prototype.ngOnChanges = function (changes) {\n        for (var _i = 0, _a = Object.keys(changes); _i < _a.length; _i++) {\n            var propName = _a[_i];\n            var changedVal = changes[propName];\n            this.propCollection[propName] = changedVal.currentValue;\n        }\n        this.hasChanges = true;\n    };\n    ComplexBase.prototype.clearTemplate = function (templateNames) {\n        clearTemplate(this, templateNames);\n    };\n    ;\n    ComplexBase.prototype.getProperties = function () {\n        for (var _i = 0, _a = this.tagObjects; _i < _a.length; _i++) {\n            var tagObject = _a[_i];\n            this.propCollection[tagObject.name] = tagObject.instance.getProperties();\n        }\n        return this.propCollection;\n    };\n    ComplexBase.prototype.isChanged = function () {\n        var result = this.hasChanges;\n        for (var _i = 0, _a = this.tagObjects; _i < _a.length; _i++) {\n            var item = _a[_i];\n            result = result || item.instance.hasChanges;\n        }\n        return result;\n    };\n    ComplexBase.prototype.ngAfterContentChecked = function () {\n        this.hasChanges = this.isChanged();\n        var templateProperties = Object.keys(this);\n        templateProperties = templateProperties.filter(function (val) {\n            return /Ref$/i.test(val);\n        });\n    };\n    ComplexBase.prototype.ngAfterViewChecked = function () {\n        this.hasChanges = false;\n    };\n    return ComplexBase;\n}());\nexport { ComplexBase };\nvar ArrayBase = /** @class */ (function () {\n    function ArrayBase(propertyName) {\n        this.list = [];\n        this.hasChanges = false;\n        this.propertyName = propertyName;\n    }\n    ArrayBase.prototype.ngOnInit = function () {\n        this.isInitChanges = true;\n    };\n    ArrayBase.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        var index = 0;\n        this.list = this.children.map(function (child) {\n            child.index = index++;\n            child.property = _this.propertyName;\n            return child;\n        });\n        this.hasChanges = true;\n    };\n    ArrayBase.prototype.getProperties = function () {\n        var onlyProp = [];\n        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {\n            var item = _a[_i];\n            onlyProp.push(item.getProperties());\n        }\n        return onlyProp;\n    };\n    ArrayBase.prototype.isChanged = function () {\n        var result = false;\n        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {\n            var item = _a[_i];\n            result = result || item.hasChanges;\n        }\n        return !!this.list.length && result;\n    };\n    ArrayBase.prototype.clearTemplate = function (templateNames) {\n        var _this = this;\n        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {\n            var item = _a[_i];\n            item.clearTemplate(templateNames && templateNames.map(function (val) {\n                return new RegExp(_this.propertyName).test(val) ? val.replace(_this.propertyName + '.', '') : val;\n            }));\n        }\n    };\n    ArrayBase.prototype.ngAfterContentChecked = function () {\n        this.hasChanges = this.isChanged();\n    };\n    ArrayBase.prototype.ngAfterViewInit = function () {\n        this.isInitChanges = false;\n    };\n    return ArrayBase;\n}());\nexport { ArrayBase };\n","/**\n * Angular Component Base Module\n */\nimport { getValue, isUndefined, setValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { EventEmitter } from '@angular/core';\nimport { clearTemplate } from './util';\nvar ComponentBase = /** @class */ (function () {\n    function ComponentBase() {\n        this.isProtectedOnChange = true;\n    }\n    ComponentBase.prototype.saveChanges = function (key, newValue, oldValue) {\n        if (this.isProtectedOnChange) {\n            return;\n        }\n        this.oldProperties[key] = oldValue;\n        this.changedProperties[key] = newValue;\n        this.finalUpdate();\n        // tslint:disable-next-line:no-any\n        var changeTime = setTimeout(this.dataBind.bind(this));\n        var clearUpdate = function () {\n            clearTimeout(changeTime);\n        };\n        this.finalUpdate = clearUpdate;\n    };\n    ;\n    ComponentBase.prototype.ngOnInit = function () {\n        this.registeredTemplate = {};\n        this.ngBoundedEvents = {};\n        this.isAngular = true;\n        this.tags = this.tags || [];\n        this.complexTemplate = this.complexTemplate || [];\n        this.tagObjects = [];\n        for (var _i = 0, _a = this.tags; _i < _a.length; _i++) {\n            var tag = _a[_i];\n            var tagObject = {\n                instance: getValue('child' + tag.substring(0, 1).toUpperCase() + tag.substring(1), this),\n                name: tag\n            };\n            this.tagObjects.push(tagObject);\n        }\n        var complexTemplates = Object.keys(this);\n        complexTemplates = complexTemplates.filter(function (val) {\n            return /Ref$/i.test(val) && /\\_/i.test(val);\n        });\n        for (var _b = 0, complexTemplates_1 = complexTemplates; _b < complexTemplates_1.length; _b++) {\n            var tempName = complexTemplates_1[_b];\n            var propName = tempName.replace('Ref', '');\n            var val = {};\n            setValue(propName.replace('_', '.'), getValue(propName, this), val);\n            this.setProperties(val, true);\n        }\n    };\n    ComponentBase.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        // Used setTimeout for template binding\n        // Refer Link: https://github.com/angular/angular/issues/6005\n        setTimeout(function () {\n            /* istanbul ignore else  */\n            if (typeof window !== 'undefined') {\n                _this.appendTo(_this.element);\n            }\n        });\n    };\n    ComponentBase.prototype.ngOnDestroy = function () {\n        /* istanbul ignore else  */\n        if (typeof window !== 'undefined' && this.element.classList.contains('e-control')) {\n            this.destroy();\n            this.clearTemplate(null);\n        }\n    };\n    ComponentBase.prototype.clearTemplate = function (templateNames) {\n        clearTemplate(this, templateNames);\n    };\n    ;\n    ComponentBase.prototype.ngAfterContentChecked = function () {\n        for (var _i = 0, _a = this.tagObjects; _i < _a.length; _i++) {\n            var tagObject = _a[_i];\n            if (!isUndefined(tagObject.instance) && (tagObject.instance.isInitChanges || tagObject.instance.hasChanges)) {\n                if (tagObject.instance.isInitChanges) {\n                    var propObj = {};\n                    propObj[tagObject.name] = tagObject.instance.getProperties();\n                    this.setProperties(propObj, tagObject.instance.isInitChanges);\n                }\n                else {\n                    for (var _b = 0, _c = tagObject.instance.list; _b < _c.length; _b++) {\n                        var list = _c[_b];\n                        if (list.hasChanges) {\n                            var curIndex = tagObject.instance.list.indexOf(list);\n                            getValue(tagObject.name, this)[curIndex].setProperties(list.getProperties());\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ComponentBase.prototype.registerEvents = function (eventList) {\n        var ngEventsEmitter = {};\n        if (eventList && eventList.length) {\n            for (var _i = 0, eventList_1 = eventList; _i < eventList_1.length; _i++) {\n                var event_1 = eventList_1[_i];\n                ngEventsEmitter[event_1] = new EventEmitter(false);\n            }\n            this.setProperties(ngEventsEmitter, true);\n        }\n    };\n    ComponentBase.prototype.addTwoWay = function (propList) {\n        var _this = this;\n        var _loop_1 = function (prop) {\n            getValue(prop, this_1);\n            Object.defineProperty(this_1, prop, {\n                get: function () {\n                    return getValue(prop, _this.properties);\n                },\n                set: function (newVal) {\n                    var oldVal = getValue(prop, _this.properties);\n                    if (oldVal === newVal) {\n                        return;\n                    }\n                    _this.saveChanges(prop, newVal, oldVal);\n                    setValue(prop, (isNullOrUndefined(newVal) ? null : newVal), _this.properties);\n                    getValue(prop + 'Change', _this).emit(newVal);\n                }\n            });\n            setValue(prop + 'Change', new EventEmitter(), this_1);\n        };\n        var this_1 = this;\n        for (var _i = 0, propList_1 = propList; _i < propList_1.length; _i++) {\n            var prop = propList_1[_i];\n            _loop_1(prop);\n        }\n    };\n    ComponentBase.prototype.addEventListener = function (eventName, handler) {\n        var eventObj = getValue(eventName, this);\n        if (!isUndefined(eventObj)) {\n            if (!this.ngBoundedEvents[eventName]) {\n                this.ngBoundedEvents[eventName] = new Map();\n            }\n            this.ngBoundedEvents[eventName].set(handler, eventObj.subscribe(handler));\n        }\n    };\n    ComponentBase.prototype.removeEventListener = function (eventName, handler) {\n        var eventObj = getValue(eventName, this);\n        if (!isUndefined(eventObj)) {\n            this.ngBoundedEvents[eventName].get(handler).unsubscribe();\n        }\n    };\n    ComponentBase.prototype.trigger = function (eventName, eventArgs) {\n        var eventObj = getValue(eventName, this);\n        if (!isUndefined(eventObj)) {\n            eventObj.next(eventArgs);\n        }\n        var localEventObj = getValue('local' + eventName.charAt(0).toUpperCase() + eventName.slice(1), this);\n        if (!isUndefined(localEventObj)) {\n            localEventObj.call(this, eventArgs);\n        }\n    };\n    return ComponentBase;\n}());\nexport { ComponentBase };\n","/**\n * Angular Form Base Module\n */\nvar FormBase = /** @class */ (function () {\n    function FormBase() {\n    }\n    FormBase.prototype.propagateChange = function (_) { return; };\n    FormBase.prototype.propagateTouch = function () { return; };\n    FormBase.prototype.localChange = function (e) {\n        var value = (e.checked === undefined ? e.value : e.checked);\n        if (this.propagateChange !== undefined && value !== undefined) {\n            // Update angular from our control\n            this.propagateChange(value);\n        }\n    };\n    FormBase.prototype.registerOnChange = function (registerFunction) {\n        this.propagateChange = registerFunction;\n    };\n    FormBase.prototype.registerOnTouched = function (registerFunction) {\n        this.propagateTouch = registerFunction;\n    };\n    FormBase.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        // Used setTimeout for template binding\n        // Refer Link: https://github.com/angular/angular/issues/6005\n        setTimeout(function () {\n            /* istanbul ignore else */\n            if (typeof window !== 'undefined') {\n                _this.appendTo(_this.element);\n                var ele = _this.inputElement || _this.element;\n                ele.addEventListener('focus', _this.ngOnFocus.bind(_this));\n                ele.addEventListener('blur', _this.ngOnBlur.bind(_this));\n            }\n        });\n    };\n    FormBase.prototype.setDisabledState = function (disabled) {\n        this.enabled = !disabled;\n    };\n    FormBase.prototype.writeValue = function (value) {\n        //update control value from angular\n        if (this.checked === undefined) {\n            this.value = value;\n        }\n        else {\n            if (typeof value === 'boolean') {\n                this.checked = value;\n            }\n            else {\n                this.checked = value === this.value;\n            }\n        }\n        if (value === null) {\n            return;\n        }\n    };\n    FormBase.prototype.ngOnFocus = function (e) {\n        /* istanbul ignore else */\n        if (this.skipFromEvent !== true) {\n            this.focus.emit(e);\n        }\n    };\n    FormBase.prototype.ngOnBlur = function (e) {\n        this.propagateTouch();\n        /* istanbul ignore else */\n        if (this.skipFromEvent !== true) {\n            this.blur.emit(e);\n        }\n    };\n    return FormBase;\n}());\nexport { FormBase };\n"],"names":["clearTemplate","_this","templateNames","regTemplates","Object","keys","registeredTemplate","length","regProperties","filter","val","test","_i","_a","_b","_c","rt","destroyed","pNode","_view","renderer","parentNode","rootNodes","m","appendChild","destroy","_loop_1","tagObject","instance","RegExp","name","_d","_e","tagObjects","compile","templateEle","helper","stringCompiler","contRef_1","elementRef","nativeElement","_viewContainerRef","pName_1","propName","data","component","context","$implicit","conRef","viewContainerRef","viewRef","createEmbeddedView","viewCollection","getValue","push","ComplexBase","this","hasChanges","propCollection","tags","prototype","ngOnInit","tag","objInstance","substring","toUpperCase","templateProperties","templateProperties_1","replace","setValue","ngOnChanges","changes","changedVal","currentValue","getProperties","isChanged","result","item","ngAfterContentChecked","ngAfterViewChecked","ArrayBase","propertyName","list","isInitChanges","ngAfterContentInit","index","children","map","child","property","onlyProp","ngAfterViewInit","ComponentBase","isProtectedOnChange","saveChanges","key","newValue","oldValue","oldProperties","changedProperties","finalUpdate","changeTime","setTimeout","dataBind","bind","clearTimeout","ngBoundedEvents","isAngular","complexTemplate","complexTemplates","complexTemplates_1","setProperties","window","appendTo","element","ngOnDestroy","classList","contains","isUndefined","propObj","curIndex","indexOf","registerEvents","eventList","ngEventsEmitter","eventList_1","EventEmitter","addTwoWay","propList","prop","this_1","defineProperty","get","properties","set","newVal","oldVal","isNullOrUndefined","emit","propList_1","addEventListener","eventName","handler","eventObj","Map","subscribe","removeEventListener","unsubscribe","trigger","eventArgs","next","localEventObj","charAt","slice","call","FormBase","propagateChange","_","propagateTouch","localChange","e","value","undefined","checked","registerOnChange","registerFunction","registerOnTouched","ele","inputElement","ngOnFocus","ngOnBlur","setDisabledState","disabled","enabled","writeValue","skipFromEvent","focus","blur","getTemplateEngine","setTemplateEngine","derivedClass","baseClass","forEach","getOwnPropertyNames","nameSpace","object","split","fromObj","i","defaultValue","target","propertyDescriptor","setter","getter","enumerable","configurable"],"mappings":"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"}